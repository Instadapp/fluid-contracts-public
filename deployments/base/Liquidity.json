{
  "address": "0x52Aa899454998Be5b000Ad077a46Bbe360F4e497",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dummyImplementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "errorId_",
          "type": "uint256"
        }
      ],
      "name": "FluidInfiniteProxyError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "LogRemoveImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "LogSetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldDummyImplementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newDummyImplementation",
          "type": "address"
        }
      ],
      "name": "LogSetDummyImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4[]",
          "name": "sigs",
          "type": "bytes4[]"
        }
      ],
      "name": "LogSetImplementation",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        },
        {
          "internalType": "bytes4[]",
          "name": "sigs_",
          "type": "bytes4[]"
        }
      ],
      "name": "addImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDummyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl_",
          "type": "address"
        }
      ],
      "name": "getImplementationSigs",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "",
          "type": "bytes4[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "sig_",
          "type": "bytes4"
        }
      ],
      "name": "getSigsImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot_",
          "type": "bytes32"
        }
      ],
      "name": "readFromStorage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "name": "removeImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newDummyImplementation_",
          "type": "address"
        }
      ],
      "name": "setDummyImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd02220a422daade31f8cce879d263933497fcab03065406707008e21f7831d8a",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0Ed35B1609Ec45c7079E80d11149a52717e4859A",
    "contractAddress": null,
    "transactionIndex": 59,
    "gasUsed": "1070121",
    "logsBloom": "0x
    "blockHash": "0x8d23db8c1e2f0110547122e5ad802913f6d6756dfd674fa7d18a42d2f53172c9",
    "transactionHash": "0xd02220a422daade31f8cce879d263933497fcab03065406707008e21f7831d8a",
    "logs": [
      {
        "transactionIndex": 59,
        "blockNumber": 17391473,
        "transactionHash": "0xd02220a422daade31f8cce879d263933497fcab03065406707008e21f7831d8a",
        "address": "0x52Aa899454998Be5b000Ad077a46Bbe360F4e497",
        "topics": [
          "0xb2396a4169c0fac3eb0713eb7d54220cbe5e21e585a59578ec4de929657c0733",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004f6f977acdd1177dcd81ab83074855ecb9c2d49e"
        ],
        "data": "0x",
        "logIndex": 179,
        "blockHash": "0x8d23db8c1e2f0110547122e5ad802913f6d6756dfd674fa7d18a42d2f53172c9"
      },
      {
        "transactionIndex": 59,
        "blockNumber": 17391473,
        "transactionHash": "0xd02220a422daade31f8cce879d263933497fcab03065406707008e21f7831d8a",
        "address": "0x52Aa899454998Be5b000Ad077a46Bbe360F4e497",
        "topics": [
          "0x761380f4203cd2fcc7ee1ae32561463bc08bbf6761cb9d5caa925f99a6d54502",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ca5e9219e1007931fd5d938c1815a90ef08f1584"
        ],
        "data": "0x",
        "logIndex": 180,
        "blockHash": "0x8d23db8c1e2f0110547122e5ad802913f6d6756dfd674fa7d18a42d2f53172c9"
      }
    ],
    "blockNumber": 17391473,
    "cumulativeGasUsed": "10395697",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e",
    "0xCA5E9219e1007931FD5d938C1815a90ef08f1584"
  ],
  "numDeployments": 1,
  "solcInputHash": "ca9e5aa54012862807c9d9299b1ce928",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dummyImplementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorId_\",\"type\":\"uint256\"}],\"name\":\"FluidInfiniteProxyError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"LogRemoveImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"LogSetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldDummyImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDummyImplementation\",\"type\":\"address\"}],\"name\":\"LogSetDummyImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4[]\",\"name\":\"sigs\",\"type\":\"bytes4[]\"}],\"name\":\"LogSetImplementation\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"sigs_\",\"type\":\"bytes4[]\"}],\"name\":\"addImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDummyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl_\",\"type\":\"address\"}],\"name\":\"getImplementationSigs\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"sig_\",\"type\":\"bytes4\"}],\"name\":\"getSigsImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot_\",\"type\":\"bytes32\"}],\"name\":\"readFromStorage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"name\":\"removeImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDummyImplementation_\",\"type\":\"address\"}],\"name\":\"setDummyImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addImplementation(address,bytes4[])\":{\"details\":\"Adds new implementation address.\"},\"getAdmin()\":{\"details\":\"Returns admin's address.\"},\"getDummyImplementation()\":{\"details\":\"Returns dummy-implementations's address.\"},\"getImplementationSigs(address)\":{\"details\":\"Returns bytes4[] sigs from implementation address If not registered then returns empty array.\"},\"getSigsImplementation(bytes4)\":{\"details\":\"Returns implementation address from bytes4 sig. If sig is not registered then returns address(0).\"},\"removeImplementation(address)\":{\"details\":\"Removes an existing implementation address.\"},\"setAdmin(address)\":{\"details\":\"Sets new admin.\"},\"setDummyImplementation(address)\":{\"details\":\"Sets new dummy-implementation.\"}},\"version\":1},\"userdoc\":{\"events\":{\"LogRemoveImplementation(address)\":{\"notice\":\"emitted when an implementation is removed\"},\"LogSetAdmin(address,address)\":{\"notice\":\"emitted when a new admin is set\"},\"LogSetDummyImplementation(address,address)\":{\"notice\":\"emitted when a new dummy implementation is set\"},\"LogSetImplementation(address,bytes4[])\":{\"notice\":\"emitted when a new implementation is set with certain sigs\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Fluid Liquidity infinte proxy. Liquidity is the central point of the Instadapp Fluid architecture, it is the core interaction point for all allow-listed protocols, such as fTokens, Vault, Flashloan, StETH protocol, DEX protocol etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidity/proxy.sol\":\"FluidLiquidityProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/infiniteProxy/error.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ncontract Error {\\n    error FluidInfiniteProxyError(uint256 errorId_);\\n}\\n\",\"keccak256\":\"0x24d03cb5871d05428fa8fc4782e4dab8d5e251af066d56bb470b19bfc1e63c2f\",\"license\":\"MIT\"},\"contracts/infiniteProxy/errorTypes.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\nlibrary ErrorTypes {\\n    /***********************************|\\n    |         Infinite proxy            | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an implementation does not exist\\n    uint256 internal constant InfiniteProxy__ImplementationNotExist = 50001;\\n}\\n\",\"keccak256\":\"0x72d513734a1c6ba19463a76009071fe444871d4ef9869aa28068124e0780cba1\",\"license\":\"MIT\"},\"contracts/infiniteProxy/events.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\ncontract Events {\\n    /// @notice emitted when a new admin is set\\n    event LogSetAdmin(address indexed oldAdmin, address indexed newAdmin);\\n\\n    /// @notice emitted when a new dummy implementation is set\\n    event LogSetDummyImplementation(address indexed oldDummyImplementation, address indexed newDummyImplementation);\\n\\n    /// @notice emitted when a new implementation is set with certain sigs\\n    event LogSetImplementation(address indexed implementation, bytes4[] sigs);\\n\\n    /// @notice emitted when an implementation is removed\\n    event LogRemoveImplementation(address indexed implementation);\\n}\\n\",\"keccak256\":\"0x699f5e4b6d88084e32f6f6b14ad12b468e98fa7ec2ee2e261d20a2347bd66263\",\"license\":\"BUSL-1.1\"},\"contracts/infiniteProxy/proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\nimport { Events } from \\\"./events.sol\\\";\\nimport { ErrorTypes } from \\\"./errorTypes.sol\\\";\\nimport { Error } from \\\"./error.sol\\\";\\nimport { StorageRead } from \\\"../libraries/storageRead.sol\\\";\\n\\ncontract CoreInternals is StorageRead, Events, Error {\\n    struct SigsSlot {\\n        bytes4[] value;\\n    }\\n\\n    /// @dev Storage slot with the admin of the contract.\\n    /// This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n    /// validated in the constructor.\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /// @dev Storage slot with the address of the current dummy-implementation.\\n    /// This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n    /// validated in the constructor.\\n    bytes32 internal constant _DUMMY_IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /// @dev use EIP1967 proxy slot (see _DUMMY_IMPLEMENTATION_SLOT) except for first 4 bytes,\\n    // which are set to 0. This is combined with a sig which will be set in those first 4 bytes\\n    bytes32 internal constant _SIG_SLOT_BASE = 0x000000003ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /// @dev Returns the storage slot which stores the sigs array set for the implementation.\\n    function _getSlotImplSigsSlot(address implementation_) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(\\\"eip1967.proxy.implementation\\\", implementation_));\\n    }\\n\\n    /// @dev Returns the storage slot which stores the implementation address for the function sig.\\n    function _getSlotSigsImplSlot(bytes4 sig_) internal pure returns (bytes32 result_) {\\n        assembly {\\n            // or operator sets sig_ in first 4 bytes with rest of bytes32 having default value of _SIG_SLOT_BASE\\n            result_ := or(_SIG_SLOT_BASE, sig_)\\n        }\\n    }\\n\\n    /// @dev Returns an address `data_` located at `slot_`.\\n    function _getAddressSlot(bytes32 slot_) internal view returns (address data_) {\\n        assembly {\\n            data_ := sload(slot_)\\n        }\\n    }\\n\\n    /// @dev Sets an address `data_` located at `slot_`.\\n    function _setAddressSlot(bytes32 slot_, address data_) internal {\\n        assembly {\\n            sstore(slot_, data_)\\n        }\\n    }\\n\\n    /// @dev Returns an `SigsSlot` with member `value` located at `slot`.\\n    function _getSigsSlot(bytes32 slot_) internal pure returns (SigsSlot storage _r) {\\n        assembly {\\n            _r.slot := slot_\\n        }\\n    }\\n\\n    /// @dev Sets new implementation and adds mapping from implementation to sigs and sig to implementation.\\n    function _setImplementationSigs(address implementation_, bytes4[] memory sigs_) internal {\\n        require(sigs_.length != 0, \\\"no-sigs\\\");\\n        bytes32 slot_ = _getSlotImplSigsSlot(implementation_);\\n        bytes4[] memory sigsCheck_ = _getSigsSlot(slot_).value;\\n        require(sigsCheck_.length == 0, \\\"implementation-already-exist\\\");\\n\\n        for (uint256 i; i < sigs_.length; i++) {\\n            bytes32 sigSlot_ = _getSlotSigsImplSlot(sigs_[i]);\\n            require(_getAddressSlot(sigSlot_) == address(0), \\\"sig-already-exist\\\");\\n            _setAddressSlot(sigSlot_, implementation_);\\n        }\\n\\n        _getSigsSlot(slot_).value = sigs_;\\n        emit LogSetImplementation(implementation_, sigs_);\\n    }\\n\\n    /// @dev Removes implementation and the mappings corresponding to it.\\n    function _removeImplementationSigs(address implementation_) internal {\\n        bytes32 slot_ = _getSlotImplSigsSlot(implementation_);\\n        bytes4[] memory sigs_ = _getSigsSlot(slot_).value;\\n        require(sigs_.length != 0, \\\"implementation-not-exist\\\");\\n\\n        for (uint256 i; i < sigs_.length; i++) {\\n            bytes32 sigSlot_ = _getSlotSigsImplSlot(sigs_[i]);\\n            _setAddressSlot(sigSlot_, address(0));\\n        }\\n\\n        delete _getSigsSlot(slot_).value;\\n        emit LogRemoveImplementation(implementation_);\\n    }\\n\\n    /// @dev Returns bytes4[] sigs from implementation address. If implemenatation is not registered then returns empty array.\\n    function _getImplementationSigs(address implementation_) internal view returns (bytes4[] memory) {\\n        bytes32 slot_ = _getSlotImplSigsSlot(implementation_);\\n        return _getSigsSlot(slot_).value;\\n    }\\n\\n    /// @dev Returns implementation address from bytes4 sig. If sig is not registered then returns address(0).\\n    function _getSigImplementation(bytes4 sig_) internal view returns (address implementation_) {\\n        bytes32 slot_ = _getSlotSigsImplSlot(sig_);\\n        return _getAddressSlot(slot_);\\n    }\\n\\n    /// @dev Returns the current admin.\\n    function _getAdmin() internal view returns (address) {\\n        return _getAddressSlot(_ADMIN_SLOT);\\n    }\\n\\n    /// @dev Returns the current dummy-implementation.\\n    function _getDummyImplementation() internal view returns (address) {\\n        return _getAddressSlot(_DUMMY_IMPLEMENTATION_SLOT);\\n    }\\n\\n    /// @dev Stores a new address in the EIP1967 admin slot.\\n    function _setAdmin(address newAdmin_) internal {\\n        address oldAdmin_ = _getAdmin();\\n        require(newAdmin_ != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        _setAddressSlot(_ADMIN_SLOT, newAdmin_);\\n        emit LogSetAdmin(oldAdmin_, newAdmin_);\\n    }\\n\\n    /// @dev Stores a new address in the EIP1967 implementation slot.\\n    function _setDummyImplementation(address newDummyImplementation_) internal {\\n        address oldDummyImplementation_ = _getDummyImplementation();\\n        _setAddressSlot(_DUMMY_IMPLEMENTATION_SLOT, newDummyImplementation_);\\n        emit LogSetDummyImplementation(oldDummyImplementation_, newDummyImplementation_);\\n    }\\n}\\n\\ncontract AdminInternals is CoreInternals {\\n    /// @dev Only admin guard\\n    modifier onlyAdmin() {\\n        require(msg.sender == _getAdmin(), \\\"only-admin\\\");\\n        _;\\n    }\\n\\n    constructor(address admin_, address dummyImplementation_) {\\n        _setAdmin(admin_);\\n        _setDummyImplementation(dummyImplementation_);\\n    }\\n\\n    /// @dev Sets new admin.\\n    function setAdmin(address newAdmin_) external onlyAdmin {\\n        _setAdmin(newAdmin_);\\n    }\\n\\n    /// @dev Sets new dummy-implementation.\\n    function setDummyImplementation(address newDummyImplementation_) external onlyAdmin {\\n        _setDummyImplementation(newDummyImplementation_);\\n    }\\n\\n    /// @dev Adds new implementation address.\\n    function addImplementation(address implementation_, bytes4[] calldata sigs_) external onlyAdmin {\\n        _setImplementationSigs(implementation_, sigs_);\\n    }\\n\\n    /// @dev Removes an existing implementation address.\\n    function removeImplementation(address implementation_) external onlyAdmin {\\n        _removeImplementationSigs(implementation_);\\n    }\\n}\\n\\n/// @title Proxy\\n/// @notice This abstract contract provides a fallback function that delegates all calls to another contract using the EVM.\\n/// It implements the Instadapp infinite-proxy: https://github.com/Instadapp/infinite-proxy\\nabstract contract Proxy is AdminInternals {\\n    constructor(address admin_, address dummyImplementation_) AdminInternals(admin_, dummyImplementation_) {}\\n\\n    /// @dev Returns admin's address.\\n    function getAdmin() external view returns (address) {\\n        return _getAdmin();\\n    }\\n\\n    /// @dev Returns dummy-implementations's address.\\n    function getDummyImplementation() external view returns (address) {\\n        return _getDummyImplementation();\\n    }\\n\\n    /// @dev Returns bytes4[] sigs from implementation address If not registered then returns empty array.\\n    function getImplementationSigs(address impl_) external view returns (bytes4[] memory) {\\n        return _getImplementationSigs(impl_);\\n    }\\n\\n    /// @dev Returns implementation address from bytes4 sig. If sig is not registered then returns address(0).\\n    function getSigsImplementation(bytes4 sig_) external view returns (address) {\\n        return _getSigImplementation(sig_);\\n    }\\n\\n    /// @dev Fallback function that delegates calls to the address returned by Implementations registry.\\n    fallback() external payable {\\n        address implementation_;\\n        assembly {\\n            // get slot for sig and directly SLOAD implementation address from storage at that slot\\n            implementation_ := sload(\\n                // same as in `_getSlotSigsImplSlot()` but we must also load msg.sig from calldata.\\n                // msg.sig is first 4 bytes of calldata, so we can use calldataload(0) with a mask\\n                or(\\n                    // or operator sets sig_ in first 4 bytes with rest of bytes32 having default value of _SIG_SLOT_BASE\\n                    _SIG_SLOT_BASE,\\n                    and(calldataload(0), 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\\n                )\\n            )\\n        }\\n\\n        if (implementation_ == address(0)) {\\n            revert FluidInfiniteProxyError(ErrorTypes.InfiniteProxy__ImplementationNotExist);\\n        }\\n\\n        // Delegate the current call to `implementation`.\\n        // This does not return to its internall call site, it will return directly to the external caller.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation_, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            if eq(result, 0) {\\n                // delegatecall returns 0 on error.\\n                revert(0, returndatasize())\\n            }\\n\\n            return(0, returndatasize())\\n        }\\n    }\\n\\n    receive() external payable {\\n        // receive method can never have calldata in EVM so no need for any logic here\\n    }\\n}\\n\",\"keccak256\":\"0x5e7d241fc7520f8d9f1831ef1c6e0db81a97d46b1b95176544e46f0c22539732\",\"license\":\"MIT\"},\"contracts/libraries/storageRead.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @notice implements a method to read uint256 data from storage at a bytes32 storage slot key.\\ncontract StorageRead {\\n    function readFromStorage(bytes32 slot_) public view returns (uint256 result_) {\\n        assembly {\\n            result_ := sload(slot_) // read value from the storage slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1b03dfe294c2f0376f7e34c3960fe7088d7ff44bb2ffd9cb2ac940486bfba8c9\",\"license\":\"BUSL-1.1\"},\"contracts/liquidity/proxy.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Proxy } from \\\"../infiniteProxy/proxy.sol\\\";\\n\\n/// @notice Fluid Liquidity infinte proxy.\\n/// Liquidity is the central point of the Instadapp Fluid architecture, it is the core interaction point\\n/// for all allow-listed protocols, such as fTokens, Vault, Flashloan, StETH protocol, DEX protocol etc.\\ncontract FluidLiquidityProxy is Proxy {\\n    constructor(address admin_, address dummyImplementation_) Proxy(admin_, dummyImplementation_) {}\\n}\\n\",\"keccak256\":\"0xc548bf6c2cba309badd3d648d9593f6df04597733e7cc79cf65f9fce80dbf024\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addImplementation(address,bytes4[])": {
        "details": "Adds new implementation address."
      },
      "getAdmin()": {
        "details": "Returns admin's address."
      },
      "getDummyImplementation()": {
        "details": "Returns dummy-implementations's address."
      },
      "getImplementationSigs(address)": {
        "details": "Returns bytes4[] sigs from implementation address If not registered then returns empty array."
      },
      "getSigsImplementation(bytes4)": {
        "details": "Returns implementation address from bytes4 sig. If sig is not registered then returns address(0)."
      },
      "removeImplementation(address)": {
        "details": "Removes an existing implementation address."
      },
      "setAdmin(address)": {
        "details": "Sets new admin."
      },
      "setDummyImplementation(address)": {
        "details": "Sets new dummy-implementation."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogRemoveImplementation(address)": {
        "notice": "emitted when an implementation is removed"
      },
      "LogSetAdmin(address,address)": {
        "notice": "emitted when a new admin is set"
      },
      "LogSetDummyImplementation(address,address)": {
        "notice": "emitted when a new dummy implementation is set"
      },
      "LogSetImplementation(address,bytes4[])": {
        "notice": "emitted when a new implementation is set with certain sigs"
      }
    },
    "kind": "user",
    "methods": {},
    "notice": "Fluid Liquidity infinte proxy. Liquidity is the central point of the Instadapp Fluid architecture, it is the core interaction point for all allow-listed protocols, such as fTokens, Vault, Flashloan, StETH protocol, DEX protocol etc.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}