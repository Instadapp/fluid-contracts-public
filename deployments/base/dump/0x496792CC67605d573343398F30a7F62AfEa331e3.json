{
  "address": "0x496792CC67605d573343398F30a7F62AfEa331e3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract FluidDexResolver",
          "name": "dexResolver_",
          "type": "address"
        },
        {
          "internalType": "contract FluidSmartLendingFactory",
          "name": "smartLendingFactory_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FluidSmartLendingResolver__AddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DEX_RESOLVER",
      "outputs": [
        {
          "internalType": "contract FluidDexResolver",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SMART_LENDING_FACTORY",
      "outputs": [
        {
          "internalType": "contract FluidSmartLendingFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSmartLendingAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSmartLendingEntireDatas",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData[]",
          "name": "datas_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSmartLendingEntireViewDatas",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData[]",
          "name": "datas_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dexId_",
          "type": "uint256"
        }
      ],
      "name": "getSmartLendingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "smartLending",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "smartLending_",
          "type": "address"
        }
      ],
      "name": "getSmartLendingEntireData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData",
          "name": "data_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "smartLendings_",
          "type": "address[]"
        }
      ],
      "name": "getSmartLendingEntireDatas",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData[]",
          "name": "datas_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "smartLending_",
          "type": "address"
        }
      ],
      "name": "getSmartLendingEntireViewData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData",
          "name": "data_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "smartLendings_",
          "type": "address[]"
        }
      ],
      "name": "getSmartLendingEntireViewDatas",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartLending",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalUnderlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lastTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "feeOrReward",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "exchangePrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "rebalancer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetsPerShare",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharesPerAsset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rebalanceDiff",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "dexId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "liquidity",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "factory",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "shift",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "admin",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "colOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "debtOperations",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "perfectOperationsAndOracle",
                          "type": "address"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.Implementations",
                      "name": "implementations",
                      "type": "tuple"
                    },
                    {
                      "internalType": "address",
                      "name": "deployerContract",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token0",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token1",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "supplyToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "borrowToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken0Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "exchangePriceToken1Slot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews",
                  "name": "constantViews",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0DenominatorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1NumeratorPrecision",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1DenominatorPrecision",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.ConstantViews2",
                  "name": "constantViews2",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isSmartCollateralEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSmartDebtEnabled",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenueCut",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerShiftThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shiftingTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "centerPriceAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "hookAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minCenterPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxBorrowShares",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.Configs",
                  "name": "configs",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "upperRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lowerRange",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "geometricMean",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken0ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyToken1ExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowToken1ExchangePrice",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                  "name": "pex",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.CollateralReserves",
                  "name": "colReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "token0Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1Debt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1RealReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0ImaginaryReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1ImaginaryReserves",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct IFluidDexT1.DebtReserves",
                  "name": "debtReserves",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lastToLastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "centerPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastPricesTimeDiff",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleCheckPoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "oracleMapping",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupplyShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrowShares",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSwapAndArbitragePaused",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isRangeChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isThresholdChangeActive",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isCenterPriceShiftActive",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "rangeShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "oldUpper",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldLower",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "oldTime",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.ShiftData",
                          "name": "thresholdShift",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "shiftPercentage",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "startTimestamp",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.CenterPriceShift",
                          "name": "centerPriceShift",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.ShiftChanges",
                      "name": "shifts",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerSupplyShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token0PerBorrowShare",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "token1PerBorrowShare",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.DexState",
                  "name": "dexState",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquiditySupplyToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityWithdrawableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidityBorrowableToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "utilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken0",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowableUntilUtilizationLimitToken1",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowable",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowLimitUtilization",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserBorrowData",
                      "name": "liquidityUserBorrowDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.SwapLimitsAndAvailability",
                  "name": "limitsAndAvailability",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.DexEntireData",
              "name": "dexEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isAllowed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdateTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandPercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expandDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "baseWithdrawalLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawableUntilLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawable",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "modeWithInterest",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "liquidityUserSupplyDataToken1",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData0",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "borrowRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "fee",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastStoredUtilization",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "storageUpdateThreshold",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowExchangePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supplyInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowRawInterest",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "borrowInterestFree",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalBorrow",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "revenue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxUtilization",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "version",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV1Params",
                          "name": "rateDataV1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "kink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationZero",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink1",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationKink2",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rateAtUtilizationMax",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.RateDataV2Params",
                          "name": "rateDataV2",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.RateData",
                      "name": "rateData",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.OverallTokenData",
                  "name": "liquidityTokenData1",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.UserSupplyData",
              "name": "dexUserSupplyData",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireData[]",
          "name": "datas_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "smartLending_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getUserPosition",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "smartLendingAssets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalanceToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalanceToken1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "allowanceToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "allowanceToken1",
              "type": "uint256"
            }
          ],
          "internalType": "struct Structs.UserPosition",
          "name": "userPosition_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "smartLending_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getUserPositionView",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "smartLendingAssets",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingAssetsToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingAssetsToken1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalanceToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "underlyingBalanceToken1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "allowanceToken0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "allowanceToken1",
              "type": "uint256"
            }
          ],
          "internalType": "struct Structs.UserPosition",
          "name": "userPosition_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getUserPositions",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "smartLending",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingShares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingAssetsToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingAssetsToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lastTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "feeOrReward",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rebalancer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetsPerShare",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharesPerAsset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceDiff",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "dex",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "dexId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "liquidity",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "factory",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "shift",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "admin",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "colOperations",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "debtOperations",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "perfectOperationsAndOracle",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct IFluidDexT1.Implementations",
                          "name": "implementations",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "deployerContract",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "token0",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "token1",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "supplyToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "borrowToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "supplyToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "borrowToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "exchangePriceToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "exchangePriceToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleMapping",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.ConstantViews",
                      "name": "constantViews",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0NumeratorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0DenominatorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1NumeratorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1DenominatorPrecision",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.ConstantViews2",
                      "name": "constantViews2",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isSmartCollateralEnabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isSmartDebtEnabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenueCut",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperShiftThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerShiftThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shiftingTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "centerPriceAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "hookAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCenterPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minCenterPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxSupplyShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowShares",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.Configs",
                      "name": "configs",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "lastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "centerPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "geometricMean",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyToken0ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowToken0ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyToken1ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowToken1ExchangePrice",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                      "name": "pex",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0ImaginaryReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1ImaginaryReserves",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.CollateralReserves",
                      "name": "colReserves",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0Debt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1Debt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0ImaginaryReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1ImaginaryReserves",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.DebtReserves",
                      "name": "debtReserves",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "lastToLastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "centerPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastPricesTimeDiff",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleCheckPoint",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleMapping",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupplyShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrowShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "isSwapAndArbitragePaused",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "isRangeChangeActive",
                              "type": "bool"
                            },
                            {
                              "internalType": "bool",
                              "name": "isThresholdChangeActive",
                              "type": "bool"
                            },
                            {
                              "internalType": "bool",
                              "name": "isCenterPriceShiftActive",
                              "type": "bool"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "oldUpper",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldLower",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldTime",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.ShiftData",
                              "name": "rangeShift",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "oldUpper",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldLower",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldTime",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.ShiftData",
                              "name": "thresholdShift",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "shiftPercentage",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.CenterPriceShift",
                              "name": "centerPriceShift",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.ShiftChanges",
                          "name": "shifts",
                          "type": "tuple"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0PerSupplyShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1PerSupplyShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0PerBorrowShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1PerBorrowShare",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.DexState",
                      "name": "dexState",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "liquiditySupplyToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquiditySupplyToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityWithdrawableToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityWithdrawableToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowableToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowableToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilUtilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilUtilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilUtilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilUtilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseWithdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawable",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserSupplyData",
                          "name": "liquidityUserSupplyDataToken0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseWithdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawable",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserSupplyData",
                          "name": "liquidityUserSupplyDataToken1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowable",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimitUtilization",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserBorrowData",
                          "name": "liquidityUserBorrowDataToken0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowable",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimitUtilization",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserBorrowData",
                          "name": "liquidityUserBorrowDataToken1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "borrowRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "fee",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastStoredUtilization",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "storageUpdateThreshold",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalSupply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalBorrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "revenue",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxUtilization",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "version",
                                  "type": "uint256"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV1Params",
                                  "name": "rateDataV1",
                                  "type": "tuple"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV2Params",
                                  "name": "rateDataV2",
                                  "type": "tuple"
                                }
                              ],
                              "internalType": "struct Structs.RateData",
                              "name": "rateData",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.OverallTokenData",
                          "name": "liquidityTokenData0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "borrowRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "fee",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastStoredUtilization",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "storageUpdateThreshold",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalSupply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalBorrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "revenue",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxUtilization",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "version",
                                  "type": "uint256"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV1Params",
                                  "name": "rateDataV1",
                                  "type": "tuple"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV2Params",
                                  "name": "rateDataV2",
                                  "type": "tuple"
                                }
                              ],
                              "internalType": "struct Structs.RateData",
                              "name": "rateData",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.OverallTokenData",
                          "name": "liquidityTokenData1",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.SwapLimitsAndAvailability",
                      "name": "limitsAndAvailability",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.DexEntireData",
                  "name": "dexEntireData",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isAllowed",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "dexUserSupplyData",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.SmartLendingEntireData",
              "name": "smartLendingEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "smartLendingAssets",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingShares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingAssetsToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingAssetsToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalanceToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalanceToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allowanceToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allowanceToken1",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Structs.UserPosition",
              "name": "userPosition",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireDataUserPosition[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "getUserPositionsView",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "smartLending",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "totalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingShares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingAssetsToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalUnderlyingAssetsToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "dex",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lastTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "feeOrReward",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "exchangePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "rebalancer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetsPerShare",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharesPerAsset",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rebalanceDiff",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "dex",
                      "type": "address"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "dexId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "liquidity",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "factory",
                          "type": "address"
                        },
                        {
                          "components": [
                            {
                              "internalType": "address",
                              "name": "shift",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "admin",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "colOperations",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "debtOperations",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "perfectOperationsAndOracle",
                              "type": "address"
                            }
                          ],
                          "internalType": "struct IFluidDexT1.Implementations",
                          "name": "implementations",
                          "type": "tuple"
                        },
                        {
                          "internalType": "address",
                          "name": "deployerContract",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "token0",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "token1",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "supplyToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "borrowToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "supplyToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "borrowToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "exchangePriceToken0Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "exchangePriceToken1Slot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleMapping",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.ConstantViews",
                      "name": "constantViews",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0NumeratorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0DenominatorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1NumeratorPrecision",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1DenominatorPrecision",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.ConstantViews2",
                      "name": "constantViews2",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isSmartCollateralEnabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "bool",
                          "name": "isSmartDebtEnabled",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenueCut",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperShiftThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerShiftThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "shiftingTime",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "centerPriceAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "hookAddress",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxCenterPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "minCenterPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxSupplyShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxBorrowShares",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.Configs",
                      "name": "configs",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "lastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "centerPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "upperRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lowerRange",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "geometricMean",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyToken0ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowToken0ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyToken1ExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowToken1ExchangePrice",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.PricesAndExchangePrice",
                      "name": "pex",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0ImaginaryReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1ImaginaryReserves",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.CollateralReserves",
                      "name": "colReserves",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "token0Debt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1Debt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1RealReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0ImaginaryReserves",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1ImaginaryReserves",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct IFluidDexT1.DebtReserves",
                      "name": "debtReserves",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "lastToLastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "centerPrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastPricesTimeDiff",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleCheckPoint",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "oracleMapping",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupplyShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrowShares",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bool",
                          "name": "isSwapAndArbitragePaused",
                          "type": "bool"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "isRangeChangeActive",
                              "type": "bool"
                            },
                            {
                              "internalType": "bool",
                              "name": "isThresholdChangeActive",
                              "type": "bool"
                            },
                            {
                              "internalType": "bool",
                              "name": "isCenterPriceShiftActive",
                              "type": "bool"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "oldUpper",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldLower",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldTime",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.ShiftData",
                              "name": "rangeShift",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "oldUpper",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldLower",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "oldTime",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.ShiftData",
                              "name": "thresholdShift",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "shiftPercentage",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "startTimestamp",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.CenterPriceShift",
                              "name": "centerPriceShift",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.ShiftChanges",
                          "name": "shifts",
                          "type": "tuple"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0PerSupplyShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1PerSupplyShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token0PerBorrowShare",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "token1PerBorrowShare",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.DexState",
                      "name": "dexState",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "liquiditySupplyToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquiditySupplyToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityWithdrawableToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityWithdrawableToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowableToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidityBorrowableToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "utilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilUtilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilUtilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilUtilizationLimitToken0",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowableUntilUtilizationLimitToken1",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseWithdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawable",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserSupplyData",
                          "name": "liquidityUserSupplyDataToken0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseWithdrawalLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "withdrawable",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserSupplyData",
                          "name": "liquidityUserSupplyDataToken1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowable",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimitUtilization",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserBorrowData",
                          "name": "liquidityUserBorrowDataToken0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "bool",
                              "name": "modeWithInterest",
                              "type": "bool"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandPercent",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "expandDuration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "baseBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxBorrowLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowableUntilLimit",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowable",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowLimitUtilization",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct Structs.UserBorrowData",
                          "name": "liquidityUserBorrowDataToken1",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "borrowRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "fee",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastStoredUtilization",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "storageUpdateThreshold",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalSupply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalBorrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "revenue",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxUtilization",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "version",
                                  "type": "uint256"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV1Params",
                                  "name": "rateDataV1",
                                  "type": "tuple"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV2Params",
                                  "name": "rateDataV2",
                                  "type": "tuple"
                                }
                              ],
                              "internalType": "struct Structs.RateData",
                              "name": "rateData",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.OverallTokenData",
                          "name": "liquidityTokenData0",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "borrowRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "fee",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastStoredUtilization",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "storageUpdateThreshold",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lastUpdateTimestamp",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowExchangePrice",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "supplyInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowRawInterest",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "borrowInterestFree",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalSupply",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "totalBorrow",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "revenue",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxUtilization",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "version",
                                  "type": "uint256"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV1Params",
                                  "name": "rateDataV1",
                                  "type": "tuple"
                                },
                                {
                                  "components": [
                                    {
                                      "internalType": "address",
                                      "name": "token",
                                      "type": "address"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "kink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationZero",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink1",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationKink2",
                                      "type": "uint256"
                                    },
                                    {
                                      "internalType": "uint256",
                                      "name": "rateAtUtilizationMax",
                                      "type": "uint256"
                                    }
                                  ],
                                  "internalType": "struct Structs.RateDataV2Params",
                                  "name": "rateDataV2",
                                  "type": "tuple"
                                }
                              ],
                              "internalType": "struct Structs.RateData",
                              "name": "rateData",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.OverallTokenData",
                          "name": "liquidityTokenData1",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.SwapLimitsAndAvailability",
                      "name": "limitsAndAvailability",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.DexEntireData",
                  "name": "dexEntireData",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isAllowed",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "supply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lastUpdateTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandPercent",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expandDuration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "baseWithdrawalLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawableUntilLimit",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "withdrawable",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "modeWithInterest",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandPercent",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expandDuration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "baseWithdrawalLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawableUntilLimit",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "withdrawable",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct Structs.UserSupplyData",
                      "name": "liquidityUserSupplyDataToken1",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData0",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "borrowRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "fee",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastStoredUtilization",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "storageUpdateThreshold",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lastUpdateTimestamp",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowExchangePrice",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "supplyInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowRawInterest",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "borrowInterestFree",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalSupply",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "totalBorrow",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "revenue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxUtilization",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "version",
                              "type": "uint256"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV1Params",
                              "name": "rateDataV1",
                              "type": "tuple"
                            },
                            {
                              "components": [
                                {
                                  "internalType": "address",
                                  "name": "token",
                                  "type": "address"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "kink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationZero",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink1",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationKink2",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rateAtUtilizationMax",
                                  "type": "uint256"
                                }
                              ],
                              "internalType": "struct Structs.RateDataV2Params",
                              "name": "rateDataV2",
                              "type": "tuple"
                            }
                          ],
                          "internalType": "struct Structs.RateData",
                          "name": "rateData",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct Structs.OverallTokenData",
                      "name": "liquidityTokenData1",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Structs.UserSupplyData",
                  "name": "dexUserSupplyData",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Structs.SmartLendingEntireData",
              "name": "smartLendingEntireData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "smartLendingAssets",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingShares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingAssetsToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingAssetsToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalanceToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "underlyingBalanceToken1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allowanceToken0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allowanceToken1",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Structs.UserPosition",
              "name": "userPosition",
              "type": "tuple"
            }
          ],
          "internalType": "struct Structs.SmartLendingEntireDataUserPosition[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc5cfae8a9495fe2b2cc9ce56b1e78472a4b8c8c9132c895039db73d2bac56c3e",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0Ed35B1609Ec45c7079E80d11149a52717e4859A",
    "contractAddress": null,
    "transactionIndex": 175,
    "gasUsed": "3952418",
    "logsBloom": "0x
    "blockHash": "0x526519850abf3ef444c61cc2ebac2f7919323c7385d0b58fd52074dae2e48027",
    "transactionHash": "0xc5cfae8a9495fe2b2cc9ce56b1e78472a4b8c8c9132c895039db73d2bac56c3e",
    "logs": [],
    "blockNumber": 32686989,
    "cumulativeGasUsed": "45105947",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa3B18522827491f10Fc777d00E69B3669Bf8c1f8",
    "0xe57227C7d5900165344b190fc7aa580bceb53B9B"
  ],
  "numDeployments": 2,
  "solcInputHash": "3c9df875b9ffda2258f36c92675bebbb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract FluidDexResolver\",\"name\":\"dexResolver_\",\"type\":\"address\"},{\"internalType\":\"contract FluidSmartLendingFactory\",\"name\":\"smartLendingFactory_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FluidSmartLendingResolver__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DEX_RESOLVER\",\"outputs\":[{\"internalType\":\"contract FluidDexResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SMART_LENDING_FACTORY\",\"outputs\":[{\"internalType\":\"contract FluidSmartLendingFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSmartLendingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSmartLendingEntireDatas\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData[]\",\"name\":\"datas_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSmartLendingEntireViewDatas\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData[]\",\"name\":\"datas_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dexId_\",\"type\":\"uint256\"}],\"name\":\"getSmartLendingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"smartLending_\",\"type\":\"address\"}],\"name\":\"getSmartLendingEntireData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData\",\"name\":\"data_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"smartLendings_\",\"type\":\"address[]\"}],\"name\":\"getSmartLendingEntireDatas\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData[]\",\"name\":\"datas_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"smartLending_\",\"type\":\"address\"}],\"name\":\"getSmartLendingEntireViewData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData\",\"name\":\"data_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"smartLendings_\",\"type\":\"address[]\"}],\"name\":\"getSmartLendingEntireViewDatas\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData[]\",\"name\":\"datas_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"smartLending_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getUserPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"smartLendingAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken1\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserPosition\",\"name\":\"userPosition_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"smartLending_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getUserPositionView\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"smartLendingAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken1\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserPosition\",\"name\":\"userPosition_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getUserPositions\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData\",\"name\":\"smartLendingEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"smartLendingAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken1\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserPosition\",\"name\":\"userPosition\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireDataUserPosition[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"getUserPositionsView\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartLending\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"feeOrReward\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"exchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetsPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesPerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rebalanceDiff\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"dexId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shift\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"colOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtOperations\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perfectOperationsAndOracle\",\"type\":\"address\"}],\"internalType\":\"struct IFluidDexT1.Implementations\",\"name\":\"implementations\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"deployerContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"supplyToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"borrowToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken0Slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"exchangePriceToken1Slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews\",\"name\":\"constantViews\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0DenominatorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1NumeratorPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1DenominatorPrecision\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.ConstantViews2\",\"name\":\"constantViews2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isSmartCollateralEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSmartDebtEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenueCut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerShiftThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shiftingTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"centerPriceAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCenterPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowShares\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.Configs\",\"name\":\"configs\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"upperRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"geometricMean\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken0ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyToken1ExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowToken1ExchangePrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.PricesAndExchangePrice\",\"name\":\"pex\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.CollateralReserves\",\"name\":\"colReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"token0Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Debt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1RealReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0ImaginaryReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1ImaginaryReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct IFluidDexT1.DebtReserves\",\"name\":\"debtReserves\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lastToLastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"centerPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastPricesTimeDiff\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleCheckPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleMapping\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowShares\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapAndArbitragePaused\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRangeChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isThresholdChangeActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isCenterPriceShiftActive\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"rangeShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"oldUpper\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldLower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldTime\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.ShiftData\",\"name\":\"thresholdShift\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shiftPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.CenterPriceShift\",\"name\":\"centerPriceShift\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.ShiftChanges\",\"name\":\"shifts\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"token0PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerSupplyShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token0PerBorrowShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1PerBorrowShare\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.DexState\",\"name\":\"dexState\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquiditySupplyToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityWithdrawableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityBorrowableToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"utilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilUtilizationLimitToken1\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"borrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBorrowLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowLimitUtilization\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserBorrowData\",\"name\":\"liquidityUserBorrowDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SwapLimitsAndAvailability\",\"name\":\"limitsAndAvailability\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.DexEntireData\",\"name\":\"dexEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"modeWithInterest\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandPercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expandDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseWithdrawalLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawableUntilLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawable\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"liquidityUserSupplyDataToken1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastStoredUtilization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageUpdateThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowExchangePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRawInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterestFree\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxUtilization\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV1Params\",\"name\":\"rateDataV1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"kink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"kink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationZero\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationKink2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rateAtUtilizationMax\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.RateDataV2Params\",\"name\":\"rateDataV2\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.RateData\",\"name\":\"rateData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.OverallTokenData\",\"name\":\"liquidityTokenData1\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.UserSupplyData\",\"name\":\"dexUserSupplyData\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireData\",\"name\":\"smartLendingEntireData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"smartLendingAssets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingAssetsToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underlyingBalanceToken1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allowanceToken1\",\"type\":\"uint256\"}],\"internalType\":\"struct Structs.UserPosition\",\"name\":\"userPosition\",\"type\":\"tuple\"}],\"internalType\":\"struct Structs.SmartLendingEntireDataUserPosition[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAllSmartLendingEntireDatas()\":{\"details\":\"expected to be called via callStatic\",\"returns\":{\"datas_\":\"An array of structs containing all the data for all SmartLendings\"}},\"getAllSmartLendingEntireViewDatas()\":{\"returns\":{\"datas_\":\"An array of structs containing all the data for all SmartLendings\"}},\"getSmartLendingEntireData(address)\":{\"details\":\"expected to be called via callStatic\",\"params\":{\"smartLending_\":\"The address of the SmartLending\"},\"returns\":{\"data_\":\"A struct containing all the data for the SmartLending\"}},\"getSmartLendingEntireDatas(address[])\":{\"details\":\"expected to be called via callStatic\",\"params\":{\"smartLendings_\":\"An array of SmartLending addresses\"},\"returns\":{\"datas_\":\"An array of structs containing all the data for each SmartLending\"}},\"getSmartLendingEntireViewData(address)\":{\"params\":{\"smartLending_\":\"The address of the SmartLending\"},\"returns\":{\"data_\":\"A struct containing all the data for the SmartLending\"}},\"getSmartLendingEntireViewDatas(address[])\":{\"params\":{\"smartLendings_\":\"An array of SmartLending addresses\"},\"returns\":{\"datas_\":\"An array of structs containing all the data for each SmartLending\"}},\"getUserPosition(address,address)\":{\"details\":\"expected to be called via callStatic\"},\"getUserPositions(address)\":{\"details\":\"expected to be called via callStatic\"}},\"version\":1},\"userdoc\":{\"errors\":{\"FluidSmartLendingResolver__AddressZero()\":[{\"notice\":\"thrown if an input param address is zero\"}]},\"kind\":\"user\",\"methods\":{\"getAllSmartLendingAddresses()\":{\"notice\":\"List of all existing SmartLending tokens\"},\"getAllSmartLendingEntireDatas()\":{\"notice\":\"Get the entire data for all SmartLendings\"},\"getAllSmartLendingEntireViewDatas()\":{\"notice\":\"Get the entire data for all SmartLendings, EXCEPT underlying DexEntireData. use write method for that.\"},\"getSmartLendingAddress(uint256)\":{\"notice\":\"Get the address of a SmartLending for a certain dexId. address zero if no SmartLending exists for the dex.\"},\"getSmartLendingEntireData(address)\":{\"notice\":\"Get the entire data for a SmartLending, incl. underlying DexEntireData and totalUnderlyingAssets for each token\"},\"getSmartLendingEntireDatas(address[])\":{\"notice\":\"Get the entire data for multiple SmartLendings\"},\"getSmartLendingEntireViewData(address)\":{\"notice\":\"Get the entire data for a SmartLending, EXCEPT underlying DexEntireData. use write method for that.\"},\"getSmartLendingEntireViewDatas(address[])\":{\"notice\":\"Get the entire view data for multiple SmartLendings, EXCEPT underlying DexEntireData. use write method for that.\"},\"getUserPosition(address,address)\":{\"notice\":\"gets a user position at a certain SmartLending incl. underlyingAssetsToken0 and underlyingAssetsToken1\"},\"getUserPositionView(address,address)\":{\"notice\":\"gets a user position at a certain SmartLending. EXCLUDING underlyingAssetsToken0 and underlyingAssetsToken1.          use write method for that.\"},\"getUserPositions(address)\":{\"notice\":\"gets all Smart lendings entire data and all user positions for each.         incl. underlying Dex (=`getSmartLendingEntireViewData()` + DexEntireData) and underlyingAssetsToken0 and underlyingAssetsToken1.\"},\"getUserPositionsView(address)\":{\"notice\":\"gets all Smart lendings entire data and all user positions for each.         Excluding underlying DexEntireData and underlyingAssetsToken0 and underlyingAssetsToken1. use write method for that.\"}},\"notice\":\"Fluid Smart Lending resolver Implements various view-only methods to give easy access to Smart Lending protocol data.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/periphery/resolvers/smartLending/main.sol\":\"FluidSmartLendingResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/libraries/addressCalcs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @notice implements calculation of address for contracts deployed through CREATE.\\n/// Accepts contract deployed from which address & nonce\\nlibrary AddressCalcs {\\n\\n    /// @notice                         Computes the address of a contract based\\n    /// @param deployedFrom_            Address from which the contract was deployed\\n    /// @param nonce_                   Nonce at which the contract was deployed\\n    /// @return contract_               Address of deployed contract\\n    function addressCalc(address deployedFrom_, uint nonce_) internal pure returns (address contract_) {\\n        // @dev based on https://ethereum.stackexchange.com/a/61413\\n\\n        // nonce of smart contract always starts with 1. so, with nonce 0 there won't be any deployment\\n        // hence, nonce of vault deployment starts with 1.\\n        bytes memory data;\\n        if (nonce_ == 0x00) {\\n            return address(0);\\n        } else if (nonce_ <= 0x7f) {\\n            data = abi.encodePacked(bytes1(0xd6), bytes1(0x94), deployedFrom_, uint8(nonce_));\\n        } else if (nonce_ <= 0xff) {\\n            data = abi.encodePacked(bytes1(0xd7), bytes1(0x94), deployedFrom_, bytes1(0x81), uint8(nonce_));\\n        } else if (nonce_ <= 0xffff) {\\n            data = abi.encodePacked(bytes1(0xd8), bytes1(0x94), deployedFrom_, bytes1(0x82), uint16(nonce_));\\n        } else if (nonce_ <= 0xffffff) {\\n            data = abi.encodePacked(bytes1(0xd9), bytes1(0x94), deployedFrom_, bytes1(0x83), uint24(nonce_));\\n        } else {\\n            data = abi.encodePacked(bytes1(0xda), bytes1(0x94), deployedFrom_, bytes1(0x84), uint32(nonce_));\\n        }\\n\\n        return address(uint160(uint256(keccak256(data))));\\n    }\\n\\n}\",\"keccak256\":\"0xca389bcfef035463ff43939ac5eccab07ab74cbb053e201541f9bcd846b3105a\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/bigMathMinified.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @title library that represents a number in BigNumber(coefficient and exponent) format to store in smaller bits.\\n/// @notice the number is divided into two parts: a coefficient and an exponent. This comes at a cost of losing some precision\\n/// at the end of the number because the exponent simply fills it with zeroes. This precision is oftentimes negligible and can\\n/// result in significant gas cost reduction due to storage space reduction.\\n/// Also note, a valid big number is as follows: if the exponent is > 0, then coefficient last bits should be occupied to have max precision.\\n/// @dev roundUp is more like a increase 1, which happens everytime for the same number.\\n/// roundDown simply sets trailing digits after coefficientSize to zero (floor), only once for the same number.\\nlibrary BigMathMinified {\\n    /// @dev constants to use for `roundUp` input param to increase readability\\n    bool internal constant ROUND_DOWN = false;\\n    bool internal constant ROUND_UP = true;\\n\\n    /// @dev converts `normal` number to BigNumber with `exponent` and `coefficient` (or precision).\\n    /// e.g.:\\n    /// 5035703444687813576399599 (normal) = (coefficient[32bits], exponent[8bits])[40bits]\\n    /// 5035703444687813576399599 (decimal) => 10000101010010110100000011111011110010100110100000000011100101001101001101011101111 (binary)\\n    ///                                     => 10000101010010110100000011111011000000000000000000000000000000000000000000000000000\\n    ///                                                                        ^-------------------- 51(exponent) -------------- ^\\n    /// coefficient = 1000,0101,0100,1011,0100,0000,1111,1011               (2236301563)\\n    /// exponent =                                            0011,0011     (51)\\n    /// bigNumber =   1000,0101,0100,1011,0100,0000,1111,1011,0011,0011     (572493200179)\\n    ///\\n    /// @param normal number which needs to be converted into Big Number\\n    /// @param coefficientSize at max how many bits of precision there should be (64 = uint64 (64 bits precision))\\n    /// @param exponentSize at max how many bits of exponent there should be (8 = uint8 (8 bits exponent))\\n    /// @param roundUp signals if result should be rounded down or up\\n    /// @return bigNumber converted bigNumber (coefficient << exponent)\\n    function toBigNumber(\\n        uint256 normal,\\n        uint256 coefficientSize,\\n        uint256 exponentSize,\\n        bool roundUp\\n    ) internal pure returns (uint256 bigNumber) {\\n        assembly {\\n            let lastBit_\\n            let number_ := normal\\n            if gt(number_, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) {\\n                number_ := shr(0x80, number_)\\n                lastBit_ := 0x80\\n            }\\n            if gt(number_, 0xFFFFFFFFFFFFFFFF) {\\n                number_ := shr(0x40, number_)\\n                lastBit_ := add(lastBit_, 0x40)\\n            }\\n            if gt(number_, 0xFFFFFFFF) {\\n                number_ := shr(0x20, number_)\\n                lastBit_ := add(lastBit_, 0x20)\\n            }\\n            if gt(number_, 0xFFFF) {\\n                number_ := shr(0x10, number_)\\n                lastBit_ := add(lastBit_, 0x10)\\n            }\\n            if gt(number_, 0xFF) {\\n                number_ := shr(0x8, number_)\\n                lastBit_ := add(lastBit_, 0x8)\\n            }\\n            if gt(number_, 0xF) {\\n                number_ := shr(0x4, number_)\\n                lastBit_ := add(lastBit_, 0x4)\\n            }\\n            if gt(number_, 0x3) {\\n                number_ := shr(0x2, number_)\\n                lastBit_ := add(lastBit_, 0x2)\\n            }\\n            if gt(number_, 0x1) {\\n                lastBit_ := add(lastBit_, 1)\\n            }\\n            if gt(number_, 0) {\\n                lastBit_ := add(lastBit_, 1)\\n            }\\n            if lt(lastBit_, coefficientSize) {\\n                // for throw exception\\n                lastBit_ := coefficientSize\\n            }\\n            let exponent := sub(lastBit_, coefficientSize)\\n            let coefficient := shr(exponent, normal)\\n            if and(roundUp, gt(exponent, 0)) {\\n                // rounding up is only needed if exponent is > 0, as otherwise the coefficient fully holds the original number\\n                coefficient := add(coefficient, 1)\\n                if eq(shl(coefficientSize, 1), coefficient) {\\n                    // case were coefficient was e.g. 111, with adding 1 it became 1000 (in binary) and coefficientSize 3 bits\\n                    // final coefficient would exceed it's size. -> reduce coefficent to 100 and increase exponent by 1.\\n                    coefficient := shl(sub(coefficientSize, 1), 1)\\n                    exponent := add(exponent, 1)\\n                }\\n            }\\n            if iszero(lt(exponent, shl(exponentSize, 1))) {\\n                // if exponent is >= exponentSize, the normal number is too big to fit within\\n                // BigNumber with too small sizes for coefficient and exponent\\n                revert(0, 0)\\n            }\\n            bigNumber := shl(exponentSize, coefficient)\\n            bigNumber := add(bigNumber, exponent)\\n        }\\n    }\\n\\n    /// @dev get `normal` number from `bigNumber`, `exponentSize` and `exponentMask`\\n    function fromBigNumber(\\n        uint256 bigNumber,\\n        uint256 exponentSize,\\n        uint256 exponentMask\\n    ) internal pure returns (uint256 normal) {\\n        assembly {\\n            let coefficient := shr(exponentSize, bigNumber)\\n            let exponent := and(bigNumber, exponentMask)\\n            normal := shl(exponent, coefficient)\\n        }\\n    }\\n\\n    /// @dev gets the most significant bit `lastBit` of a `normal` number (length of given number of binary format).\\n    /// e.g.\\n    /// 5035703444687813576399599 = 10000101010010110100000011111011110010100110100000000011100101001101001101011101111\\n    /// lastBit =                   ^---------------------------------   83   ----------------------------------------^\\n    function mostSignificantBit(uint256 normal) internal pure returns (uint lastBit) {\\n        assembly {\\n            let number_ := normal\\n            if gt(normal, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) {\\n                number_ := shr(0x80, number_)\\n                lastBit := 0x80\\n            }\\n            if gt(number_, 0xFFFFFFFFFFFFFFFF) {\\n                number_ := shr(0x40, number_)\\n                lastBit := add(lastBit, 0x40)\\n            }\\n            if gt(number_, 0xFFFFFFFF) {\\n                number_ := shr(0x20, number_)\\n                lastBit := add(lastBit, 0x20)\\n            }\\n            if gt(number_, 0xFFFF) {\\n                number_ := shr(0x10, number_)\\n                lastBit := add(lastBit, 0x10)\\n            }\\n            if gt(number_, 0xFF) {\\n                number_ := shr(0x8, number_)\\n                lastBit := add(lastBit, 0x8)\\n            }\\n            if gt(number_, 0xF) {\\n                number_ := shr(0x4, number_)\\n                lastBit := add(lastBit, 0x4)\\n            }\\n            if gt(number_, 0x3) {\\n                number_ := shr(0x2, number_)\\n                lastBit := add(lastBit, 0x2)\\n            }\\n            if gt(number_, 0x1) {\\n                lastBit := add(lastBit, 1)\\n            }\\n            if gt(number_, 0) {\\n                lastBit := add(lastBit, 1)\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf0be1002909edf30aec3dc6623c2bd2407ed94064b62674c01032b844dec206a\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/bytesSliceAndConcat.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nlibrary BytesSliceAndConcat {\\n    // @dev taken from https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol\\n    function bytesConcat(\\n        bytes memory _preBytes,\\n        bytes memory _postBytes\\n    ) internal pure returns (bytes memory tempBytes) {\\n        assembly {\\n            // Get a location of some free memory and store it in tempBytes as\\n            // Solidity does for memory variables.\\n            tempBytes := mload(0x40)\\n\\n            // Store the length of the first bytes array at the beginning of\\n            // the memory for tempBytes.\\n            let length := mload(_preBytes)\\n            mstore(tempBytes, length)\\n\\n            // Maintain a memory counter for the current write location in the\\n            // temp bytes array by adding the 32 bytes for the array length to\\n            // the starting location.\\n            let mc := add(tempBytes, 0x20)\\n            // Stop copying when the memory counter reaches the length of the\\n            // first bytes array.\\n            let end := add(mc, length)\\n\\n            for {\\n                // Initialize a copy counter to the start of the _preBytes data,\\n                // 32 bytes into its memory.\\n                let cc := add(_preBytes, 0x20)\\n            } lt(mc, end) {\\n                // Increase both counters by 32 bytes each iteration.\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                // Write the _preBytes data into the tempBytes memory 32 bytes\\n                // at a time.\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Add the length of _postBytes to the current length of tempBytes\\n            // and store it as the new length in the first 32 bytes of the\\n            // tempBytes memory.\\n            length := mload(_postBytes)\\n            mstore(tempBytes, add(length, mload(tempBytes)))\\n\\n            // Move the memory counter back from a multiple of 0x20 to the\\n            // actual end of the _preBytes data.\\n            mc := end\\n            // Stop copying when the memory counter reaches the new combined\\n            // length of the arrays.\\n            end := add(mc, length)\\n\\n            for {\\n                let cc := add(_postBytes, 0x20)\\n            } lt(mc, end) {\\n                mc := add(mc, 0x20)\\n                cc := add(cc, 0x20)\\n            } {\\n                mstore(mc, mload(cc))\\n            }\\n\\n            // Update the free-memory pointer by padding our last write location\\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\\n            // next 32 byte block, then round down to the nearest multiple of\\n            // 32. If the sum of the length of the two arrays is zero then add\\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\\n            mstore(\\n                0x40,\\n                and(\\n                    add(add(end, iszero(add(length, mload(_preBytes)))), 31),\\n                    not(31) // Round down to the nearest 32 bytes.\\n                )\\n            )\\n        }\\n\\n        return tempBytes;\\n    }\\n\\n    // @dev taken from https://github.com/GNSPS/solidity-bytes-utils/blob/master/contracts/BytesLib.sol\\n    function bytesSlice(\\n        bytes memory _bytes,\\n        uint256 _start,\\n        uint256 _length\\n    ) internal pure returns (bytes memory tempBytes) {\\n        require(_length + 31 >= _length, \\\"slice_overflow\\\");\\n        require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\");\\n\\n        assembly {\\n            switch iszero(_length)\\n            case 0 {\\n                // Get a location of some free memory and store it in tempBytes as\\n                // Solidity does for memory variables.\\n                tempBytes := mload(0x40)\\n\\n                // The first word of the slice result is potentially a partial\\n                // word read from the original array. To read it, we calculate\\n                // the length of that partial word and start copying that many\\n                // bytes into the array. The first word we copy will start with\\n                // data we don't care about, but the last `lengthmod` bytes will\\n                // land at the beginning of the contents of the new array. When\\n                // we're done copying, we overwrite the full first word with\\n                // the actual length of the slice.\\n                let lengthmod := and(_length, 31)\\n\\n                // The multiplication in the next line is necessary\\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\\n                // the following copy loop was copying the origin's length\\n                // and then ending prematurely not copying everything it should.\\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\\n                let end := add(mc, _length)\\n\\n                for {\\n                    // The multiplication in the next line has the same exact purpose\\n                    // as the one above.\\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\\n                } lt(mc, end) {\\n                    mc := add(mc, 0x20)\\n                    cc := add(cc, 0x20)\\n                } {\\n                    mstore(mc, mload(cc))\\n                }\\n\\n                mstore(tempBytes, _length)\\n\\n                //update free-memory pointer\\n                //allocating the array padded to 32 bytes like the compiler does now\\n                mstore(0x40, and(add(mc, 31), not(31)))\\n            }\\n            //if we want a zero-length slice let's just return a zero-length array\\n            default {\\n                tempBytes := mload(0x40)\\n                //zero out the 32 bytes slice we are about to return\\n                //we need to do it because Solidity does not garbage collect\\n                mstore(tempBytes, 0)\\n\\n                mstore(0x40, add(tempBytes, 0x20))\\n            }\\n        }\\n\\n        return tempBytes;\\n    }\\n}\\n\",\"keccak256\":\"0x42966896926a24dc7645ebf4679e6d701cb991144ef4d710d87738165d4024c7\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/dexCalcs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { BigMathMinified } from \\\"./bigMathMinified.sol\\\";\\nimport { DexSlotsLink } from \\\"./dexSlotsLink.sol\\\";\\n\\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n// @DEV ATTENTION: ON ANY CHANGES HERE, MAKE SURE THAT LOGIC IN VAULTS WILL STILL BE VALID.\\n// SOME CODE THERE ASSUMES DEXCALCS == LIQUIDITYCALCS.\\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n\\n/// @notice implements calculation methods used for Fluid Dex such as updated withdrawal / borrow limits.\\nlibrary DexCalcs {\\n    // constants used for BigMath conversion from and to storage\\n    uint256 internal constant DEFAULT_EXPONENT_SIZE = 8;\\n    uint256 internal constant DEFAULT_EXPONENT_MASK = 0xFF;\\n\\n    uint256 internal constant FOUR_DECIMALS = 1e4;\\n    uint256 internal constant X14 = 0x3fff;\\n    uint256 internal constant X18 = 0x3ffff;\\n    uint256 internal constant X24 = 0xffffff;\\n    uint256 internal constant X33 = 0x1ffffffff;\\n    uint256 internal constant X64 = 0xffffffffffffffff;\\n\\n    ///////////////////////////////////////////////////////////////////////////\\n    //////////                      CALC LIMITS                       /////////\\n    ///////////////////////////////////////////////////////////////////////////\\n\\n    /// @dev calculates withdrawal limit before an operate execution:\\n    /// amount of user supply that must stay supplied (not amount that can be withdrawn).\\n    /// i.e. if user has supplied 100m and can withdraw 5M, this method returns the 95M, not the withdrawable amount 5M\\n    /// @param userSupplyData_ user supply data packed uint256 from storage\\n    /// @param userSupply_ current user supply amount already extracted from `userSupplyData_` and converted from BigMath\\n    /// @return currentWithdrawalLimit_ current withdrawal limit updated for expansion since last interaction.\\n    ///         returned value is in raw for with interest mode, normal amount for interest free mode!\\n    function calcWithdrawalLimitBeforeOperate(\\n        uint256 userSupplyData_,\\n        uint256 userSupply_\\n    ) internal view returns (uint256 currentWithdrawalLimit_) {\\n        // @dev must support handling the case where timestamp is 0 (config is set but no interactions yet).\\n        // first tx where timestamp is 0 will enter `if (lastWithdrawalLimit_ == 0)` because lastWithdrawalLimit_ is not set yet.\\n        // returning max withdrawal allowed, which is not exactly right but doesn't matter because the first interaction must be\\n        // a deposit anyway. Important is that it would not revert.\\n\\n        // Note the first time a deposit brings the user supply amount to above the base withdrawal limit, the active limit\\n        // is the fully expanded limit immediately.\\n\\n        // extract last set withdrawal limit\\n        uint256 lastWithdrawalLimit_ = (userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_PREVIOUS_WITHDRAWAL_LIMIT) &\\n            X64;\\n        lastWithdrawalLimit_ =\\n            (lastWithdrawalLimit_ >> DEFAULT_EXPONENT_SIZE) <<\\n            (lastWithdrawalLimit_ & DEFAULT_EXPONENT_MASK);\\n        if (lastWithdrawalLimit_ == 0) {\\n            // withdrawal limit is not activated. Max withdrawal allowed\\n            return 0;\\n        }\\n\\n        uint256 maxWithdrawableLimit_;\\n        uint256 temp_;\\n        unchecked {\\n            // extract max withdrawable percent of user supply and\\n            // calculate maximum withdrawable amount expandPercentage of user supply at full expansion duration elapsed\\n            // e.g.: if 10% expandPercentage, meaning 10% is withdrawable after full expandDuration has elapsed.\\n\\n            // userSupply_ needs to be atleast 1e73 to overflow max limit of ~1e77 in uint256 (no token in existence where this is possible).\\n            maxWithdrawableLimit_ =\\n                (((userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_EXPAND_PERCENT) & X14) * userSupply_) /\\n                FOUR_DECIMALS;\\n\\n            // time elapsed since last withdrawal limit was set (in seconds)\\n            // @dev last process timestamp is guaranteed to exist for withdrawal, as a supply must have happened before.\\n            // last timestamp can not be > current timestamp\\n            temp_ = block.timestamp - ((userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_LAST_UPDATE_TIMESTAMP) & X33);\\n        }\\n        // calculate withdrawable amount of expandPercent that is elapsed of expandDuration.\\n        // e.g. if 60% of expandDuration has elapsed, then user should be able to withdraw 6% of user supply, down to 94%.\\n        // Note: no explicit check for this needed, it is covered by setting minWithdrawalLimit_ if needed.\\n        temp_ =\\n            (maxWithdrawableLimit_ * temp_) /\\n            // extract expand duration: After this, decrement won't happen (user can withdraw 100% of withdraw limit)\\n            ((userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_EXPAND_DURATION) & X24); // expand duration can never be 0\\n        // calculate expanded withdrawal limit: last withdrawal limit - withdrawable amount.\\n        // Note: withdrawable amount here can grow bigger than userSupply if timeElapsed is a lot bigger than expandDuration,\\n        // which would cause the subtraction `lastWithdrawalLimit_ - withdrawableAmount_` to revert. In that case, set 0\\n        // which will cause minimum (fully expanded) withdrawal limit to be set in lines below.\\n        unchecked {\\n            // underflow explicitly checked & handled\\n            currentWithdrawalLimit_ = lastWithdrawalLimit_ > temp_ ? lastWithdrawalLimit_ - temp_ : 0;\\n            // calculate minimum withdrawal limit: minimum amount of user supply that must stay supplied at full expansion.\\n            // subtraction can not underflow as maxWithdrawableLimit_ is a percentage amount (<=100%) of userSupply_\\n            temp_ = userSupply_ - maxWithdrawableLimit_;\\n        }\\n        // if withdrawal limit is decreased below minimum then set minimum\\n        // (e.g. when more than expandDuration time has elapsed)\\n        if (temp_ > currentWithdrawalLimit_) {\\n            currentWithdrawalLimit_ = temp_;\\n        }\\n    }\\n\\n    /// @dev calculates withdrawal limit after an operate execution:\\n    /// amount of user supply that must stay supplied (not amount that can be withdrawn).\\n    /// i.e. if user has supplied 100m and can withdraw 5M, this method returns the 95M, not the withdrawable amount 5M\\n    /// @param userSupplyData_ user supply data packed uint256 from storage\\n    /// @param userSupply_ current user supply amount already extracted from `userSupplyData_` and added / subtracted with the executed operate amount\\n    /// @param newWithdrawalLimit_ current withdrawal limit updated for expansion since last interaction, result from `calcWithdrawalLimitBeforeOperate`\\n    /// @return withdrawalLimit_ updated withdrawal limit that should be written to storage. returned value is in\\n    ///                          raw for with interest mode, normal amount for interest free mode!\\n    function calcWithdrawalLimitAfterOperate(\\n        uint256 userSupplyData_,\\n        uint256 userSupply_,\\n        uint256 newWithdrawalLimit_\\n    ) internal pure returns (uint256) {\\n        // temp_ => base withdrawal limit. below this, maximum withdrawals are allowed\\n        uint256 temp_ = (userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_BASE_WITHDRAWAL_LIMIT) & X18;\\n        temp_ = (temp_ >> DEFAULT_EXPONENT_SIZE) << (temp_ & DEFAULT_EXPONENT_MASK);\\n\\n        // if user supply is below base limit then max withdrawals are allowed\\n        if (userSupply_ < temp_) {\\n            return 0;\\n        }\\n        // temp_ => withdrawal limit expandPercent (is in 1e2 decimals)\\n        temp_ = (userSupplyData_ >> DexSlotsLink.BITS_USER_SUPPLY_EXPAND_PERCENT) & X14;\\n        unchecked {\\n            // temp_ => minimum withdrawal limit: userSupply - max withdrawable limit (userSupply * expandPercent))\\n            // userSupply_ needs to be atleast 1e73 to overflow max limit of ~1e77 in uint256 (no token in existence where this is possible).\\n            // subtraction can not underflow as maxWithdrawableLimit_ is a percentage amount (<=100%) of userSupply_\\n            temp_ = userSupply_ - ((userSupply_ * temp_) / FOUR_DECIMALS);\\n        }\\n        // if new (before operation) withdrawal limit is less than minimum limit then set minimum limit.\\n        // e.g. can happen on new deposits. withdrawal limit is instantly fully expanded in a scenario where\\n        // increased deposit amount outpaces withrawals.\\n        if (temp_ > newWithdrawalLimit_) {\\n            return temp_;\\n        }\\n        return newWithdrawalLimit_;\\n    }\\n\\n    /// @dev calculates borrow limit before an operate execution:\\n    /// total amount user borrow can reach (not borrowable amount in current operation).\\n    /// i.e. if user has borrowed 50M and can still borrow 5M, this method returns the total 55M, not the borrowable amount 5M\\n    /// @param userBorrowData_ user borrow data packed uint256 from storage\\n    /// @param userBorrow_ current user borrow amount already extracted from `userBorrowData_`\\n    /// @return currentBorrowLimit_ current borrow limit updated for expansion since last interaction. returned value is in\\n    ///                             raw for with interest mode, normal amount for interest free mode!\\n    function calcBorrowLimitBeforeOperate(\\n        uint256 userBorrowData_,\\n        uint256 userBorrow_\\n    ) internal view returns (uint256 currentBorrowLimit_) {\\n        // @dev must support handling the case where timestamp is 0 (config is set but no interactions yet) -> base limit.\\n        // first tx where timestamp is 0 will enter `if (maxExpandedBorrowLimit_ < baseBorrowLimit_)` because `userBorrow_` and thus\\n        // `maxExpansionLimit_` and thus `maxExpandedBorrowLimit_` is 0 and `baseBorrowLimit_` can not be 0.\\n\\n        // temp_ = extract borrow expand percent (is in 1e2 decimals)\\n        uint256 temp_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_EXPAND_PERCENT) & X14;\\n\\n        uint256 maxExpansionLimit_;\\n        uint256 maxExpandedBorrowLimit_;\\n        unchecked {\\n            // calculate max expansion limit: Max amount limit can expand to since last interaction\\n            // userBorrow_ needs to be atleast 1e73 to overflow max limit of ~1e77 in uint256 (no token in existence where this is possible).\\n            maxExpansionLimit_ = ((userBorrow_ * temp_) / FOUR_DECIMALS);\\n\\n            // calculate max borrow limit: Max point limit can increase to since last interaction\\n            maxExpandedBorrowLimit_ = userBorrow_ + maxExpansionLimit_;\\n        }\\n\\n        // currentBorrowLimit_ = extract base borrow limit\\n        currentBorrowLimit_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_BASE_BORROW_LIMIT) & X18;\\n        currentBorrowLimit_ =\\n            (currentBorrowLimit_ >> DEFAULT_EXPONENT_SIZE) <<\\n            (currentBorrowLimit_ & DEFAULT_EXPONENT_MASK);\\n\\n        if (maxExpandedBorrowLimit_ < currentBorrowLimit_) {\\n            return currentBorrowLimit_;\\n        }\\n        // time elapsed since last borrow limit was set (in seconds)\\n        unchecked {\\n            // temp_ = timeElapsed_ (last timestamp can not be > current timestamp)\\n            temp_ = block.timestamp - ((userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_LAST_UPDATE_TIMESTAMP) & X33); // extract last update timestamp\\n        }\\n\\n        // currentBorrowLimit_ = expandedBorrowableAmount + extract last set borrow limit\\n        currentBorrowLimit_ =\\n            // calculate borrow limit expansion since last interaction for `expandPercent` that is elapsed of `expandDuration`.\\n            // divisor is extract expand duration (after this, full expansion to expandPercentage happened).\\n            ((maxExpansionLimit_ * temp_) /\\n                ((userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_EXPAND_DURATION) & X24)) + // expand duration can never be 0\\n            //  extract last set borrow limit\\n            BigMathMinified.fromBigNumber(\\n                (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_PREVIOUS_BORROW_LIMIT) & X64,\\n                DEFAULT_EXPONENT_SIZE,\\n                DEFAULT_EXPONENT_MASK\\n            );\\n\\n        // if timeElapsed is bigger than expandDuration, new borrow limit would be > max expansion,\\n        // so set to `maxExpandedBorrowLimit_` in that case.\\n        // also covers the case where last process timestamp = 0 (timeElapsed would simply be very big)\\n        if (currentBorrowLimit_ > maxExpandedBorrowLimit_) {\\n            currentBorrowLimit_ = maxExpandedBorrowLimit_;\\n        }\\n        // temp_ = extract hard max borrow limit. Above this user can never borrow (not expandable above)\\n        temp_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_MAX_BORROW_LIMIT) & X18;\\n        temp_ = (temp_ >> DEFAULT_EXPONENT_SIZE) << (temp_ & DEFAULT_EXPONENT_MASK);\\n\\n        if (currentBorrowLimit_ > temp_) {\\n            currentBorrowLimit_ = temp_;\\n        }\\n    }\\n\\n    /// @dev calculates borrow limit after an operate execution:\\n    /// total amount user borrow can reach (not borrowable amount in current operation).\\n    /// i.e. if user has borrowed 50M and can still borrow 5M, this method returns the total 55M, not the borrowable amount 5M\\n    /// @param userBorrowData_ user borrow data packed uint256 from storage\\n    /// @param userBorrow_ current user borrow amount already extracted from `userBorrowData_` and added / subtracted with the executed operate amount\\n    /// @param newBorrowLimit_ current borrow limit updated for expansion since last interaction, result from `calcBorrowLimitBeforeOperate`\\n    /// @return borrowLimit_ updated borrow limit that should be written to storage.\\n    ///                      returned value is in raw for with interest mode, normal amount for interest free mode!\\n    function calcBorrowLimitAfterOperate(\\n        uint256 userBorrowData_,\\n        uint256 userBorrow_,\\n        uint256 newBorrowLimit_\\n    ) internal pure returns (uint256 borrowLimit_) {\\n        // temp_ = extract borrow expand percent\\n        uint256 temp_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_EXPAND_PERCENT) & X14; // (is in 1e2 decimals)\\n\\n        unchecked {\\n            // borrowLimit_ = calculate maximum borrow limit at full expansion.\\n            // userBorrow_ needs to be at least 1e73 to overflow max limit of ~1e77 in uint256 (no token in existence where this is possible).\\n            borrowLimit_ = userBorrow_ + ((userBorrow_ * temp_) / FOUR_DECIMALS);\\n        }\\n\\n        // temp_ = extract base borrow limit\\n        temp_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_BASE_BORROW_LIMIT) & X18;\\n        temp_ = (temp_ >> DEFAULT_EXPONENT_SIZE) << (temp_ & DEFAULT_EXPONENT_MASK);\\n\\n        if (borrowLimit_ < temp_) {\\n            // below base limit, borrow limit is always base limit\\n            return temp_;\\n        }\\n        // temp_ = extract hard max borrow limit. Above this user can never borrow (not expandable above)\\n        temp_ = (userBorrowData_ >> DexSlotsLink.BITS_USER_BORROW_MAX_BORROW_LIMIT) & X18;\\n        temp_ = (temp_ >> DEFAULT_EXPONENT_SIZE) << (temp_ & DEFAULT_EXPONENT_MASK);\\n\\n        // make sure fully expanded borrow limit is not above hard max borrow limit\\n        if (borrowLimit_ > temp_) {\\n            borrowLimit_ = temp_;\\n        }\\n        // if new borrow limit (from before operate) is > max borrow limit, set max borrow limit.\\n        // (e.g. on a repay shrinking instantly to fully expanded borrow limit from new borrow amount. shrinking is instant)\\n        if (newBorrowLimit_ > borrowLimit_) {\\n            return borrowLimit_;\\n        }\\n        return newBorrowLimit_;\\n    }\\n}\\n\",\"keccak256\":\"0xd033a77bd57f4a608e693fdf6147ddd3bbfa0d80d86c1097d24e428c886c0d5e\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/dexSlotsLink.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @notice library that helps in reading / working with storage slot data of Fluid Dex.\\n/// @dev as all data for Fluid Dex is internal, any data must be fetched directly through manual\\n/// slot reading through this library or, if gas usage is less important, through the FluidDexResolver.\\nlibrary DexSlotsLink {\\n    /// @dev storage slot for variables at Dex\\n    uint256 internal constant DEX_VARIABLES_SLOT = 0;\\n    /// @dev storage slot for variables2 at Dex\\n    uint256 internal constant DEX_VARIABLES2_SLOT = 1;\\n    /// @dev storage slot for total supply shares at Dex\\n    uint256 internal constant DEX_TOTAL_SUPPLY_SHARES_SLOT = 2;\\n    /// @dev storage slot for user supply mapping at Dex\\n    uint256 internal constant DEX_USER_SUPPLY_MAPPING_SLOT = 3;\\n    /// @dev storage slot for total borrow shares at Dex\\n    uint256 internal constant DEX_TOTAL_BORROW_SHARES_SLOT = 4;\\n    /// @dev storage slot for user borrow mapping at Dex\\n    uint256 internal constant DEX_USER_BORROW_MAPPING_SLOT = 5;\\n    /// @dev storage slot for oracle mapping at Dex\\n    uint256 internal constant DEX_ORACLE_MAPPING_SLOT = 6;\\n    /// @dev storage slot for range and threshold shifts at Dex\\n    uint256 internal constant DEX_RANGE_THRESHOLD_SHIFTS_SLOT = 7;\\n    /// @dev storage slot for center price shift at Dex\\n    uint256 internal constant DEX_CENTER_PRICE_SHIFT_SLOT = 8;\\n\\n    // --------------------------------\\n    // @dev stacked uint256 storage slots bits position data for each:\\n\\n    // UserSupplyData\\n    uint256 internal constant BITS_USER_SUPPLY_ALLOWED = 0;\\n    uint256 internal constant BITS_USER_SUPPLY_AMOUNT = 1;\\n    uint256 internal constant BITS_USER_SUPPLY_PREVIOUS_WITHDRAWAL_LIMIT = 65;\\n    uint256 internal constant BITS_USER_SUPPLY_LAST_UPDATE_TIMESTAMP = 129;\\n    uint256 internal constant BITS_USER_SUPPLY_EXPAND_PERCENT = 162;\\n    uint256 internal constant BITS_USER_SUPPLY_EXPAND_DURATION = 176;\\n    uint256 internal constant BITS_USER_SUPPLY_BASE_WITHDRAWAL_LIMIT = 200;\\n\\n    // UserBorrowData\\n    uint256 internal constant BITS_USER_BORROW_ALLOWED = 0;\\n    uint256 internal constant BITS_USER_BORROW_AMOUNT = 1;\\n    uint256 internal constant BITS_USER_BORROW_PREVIOUS_BORROW_LIMIT = 65;\\n    uint256 internal constant BITS_USER_BORROW_LAST_UPDATE_TIMESTAMP = 129;\\n    uint256 internal constant BITS_USER_BORROW_EXPAND_PERCENT = 162;\\n    uint256 internal constant BITS_USER_BORROW_EXPAND_DURATION = 176;\\n    uint256 internal constant BITS_USER_BORROW_BASE_BORROW_LIMIT = 200;\\n    uint256 internal constant BITS_USER_BORROW_MAX_BORROW_LIMIT = 218;\\n\\n    // --------------------------------\\n\\n    /// @notice Calculating the slot ID for Dex contract for single mapping at `slot_` for `key_`\\n    function calculateMappingStorageSlot(uint256 slot_, address key_) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(key_, slot_));\\n    }\\n\\n    /// @notice Calculating the slot ID for Dex contract for double mapping at `slot_` for `key1_` and `key2_`\\n    function calculateDoubleMappingStorageSlot(\\n        uint256 slot_,\\n        address key1_,\\n        address key2_\\n    ) internal pure returns (bytes32) {\\n        bytes32 intermediateSlot_ = keccak256(abi.encode(key1_, slot_));\\n        return keccak256(abi.encode(key2_, intermediateSlot_));\\n    }\\n}\\n\",\"keccak256\":\"0xf1d6550d83fb0155a26655234922c9bdf4a1bbcf7a3ca767e9123d367a795307\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/errorTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nlibrary LibsErrorTypes {\\n    /***********************************|\\n    |         LiquidityCalcs            | \\n    |__________________________________*/\\n\\n    /// @notice thrown when supply or borrow exchange price is zero at calc token data (token not configured yet)\\n    uint256 internal constant LiquidityCalcs__ExchangePriceZero = 70001;\\n\\n    /// @notice thrown when rate data is set to a version that is not implemented\\n    uint256 internal constant LiquidityCalcs__UnsupportedRateVersion = 70002;\\n\\n    /// @notice thrown when the calculated borrow rate turns negative. This should never happen.\\n    uint256 internal constant LiquidityCalcs__BorrowRateNegative = 70003;\\n\\n    /***********************************|\\n    |           SafeTransfer            | \\n    |__________________________________*/\\n\\n    /// @notice thrown when safe transfer from for an ERC20 fails\\n    uint256 internal constant SafeTransfer__TransferFromFailed = 71001;\\n\\n    /// @notice thrown when safe transfer for an ERC20 fails\\n    uint256 internal constant SafeTransfer__TransferFailed = 71002;\\n\\n    /***********************************|\\n    |           SafeApprove             | \\n    |__________________________________*/\\n\\n    /// @notice thrown when safe approve from for an ERC20 fails\\n    uint256 internal constant SafeApprove__ApproveFailed = 81001;\\n}\\n\",\"keccak256\":\"0x4057f500fd44ce9e89049512d06d5f72c46f91938ed37312fb044c204451009b\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/safeTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity 0.8.21;\\n\\nimport { LibsErrorTypes as ErrorTypes } from \\\"./errorTypes.sol\\\";\\n\\n/// @notice provides minimalistic methods for safe transfers, e.g. ERC20 safeTransferFrom\\nlibrary SafeTransfer {\\n    uint256 internal constant MAX_NATIVE_TRANSFER_GAS = 20000; // pass max. 20k gas for native transfers\\n\\n    error FluidSafeTransferError(uint256 errorId_);\\n\\n    /// @dev Transfer `amount_` of `token_` from `from_` to `to_`, spending the approval given by `from_` to the\\n    /// calling contract. If `token_` returns no value, non-reverting calls are assumed to be successful.\\n    /// Minimally modified from Solmate SafeTransferLib (address as input param for token, Custom Error):\\n    /// https://github.com/transmissions11/solmate/blob/50e15bb566f98b7174da9b0066126a4c3e75e0fd/src/utils/SafeTransferLib.sol#L31-L63\\n    function safeTransferFrom(address token_, address from_, address to_, uint256 amount_) internal {\\n        bool success_;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\\n            mstore(freeMemoryPointer, 0x23b872dd00000000000000000000000000000000000000000000000000000000)\\n            mstore(add(freeMemoryPointer, 4), and(from_, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \\\"from_\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), and(to_, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \\\"to_\\\" argument.\\n            mstore(add(freeMemoryPointer, 68), amount_) // Append the \\\"amount_\\\" argument. Masking not required as it's a full 32 byte type.\\n\\n            success_ := and(\\n                // Set success to whether the call reverted, if not we check it either\\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\\n                // We use 100 because the length of our calldata totals up like so: 4 + 32 * 3.\\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\\n                // Counterintuitively, this call must be positioned second to the or() call in the\\n                // surrounding and() call or else returndatasize() will be zero during the computation.\\n                call(gas(), token_, 0, freeMemoryPointer, 100, 0, 32)\\n            )\\n        }\\n\\n        if (!success_) {\\n            revert FluidSafeTransferError(ErrorTypes.SafeTransfer__TransferFromFailed);\\n        }\\n    }\\n\\n    /// @dev Transfer `amount_` of `token_` to `to_`.\\n    /// If `token_` returns no value, non-reverting calls are assumed to be successful.\\n    /// Minimally modified from Solmate SafeTransferLib (address as input param for token, Custom Error):\\n    /// https://github.com/transmissions11/solmate/blob/50e15bb566f98b7174da9b0066126a4c3e75e0fd/src/utils/SafeTransferLib.sol#L65-L95\\n    function safeTransfer(address token_, address to_, uint256 amount_) internal {\\n        bool success_;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Get a pointer to some free memory.\\n            let freeMemoryPointer := mload(0x40)\\n\\n            // Write the abi-encoded calldata into memory, beginning with the function selector.\\n            mstore(freeMemoryPointer, 0xa9059cbb00000000000000000000000000000000000000000000000000000000)\\n            mstore(add(freeMemoryPointer, 4), and(to_, 0xffffffffffffffffffffffffffffffffffffffff)) // Append and mask the \\\"to_\\\" argument.\\n            mstore(add(freeMemoryPointer, 36), amount_) // Append the \\\"amount_\\\" argument. Masking not required as it's a full 32 byte type.\\n\\n            success_ := and(\\n                // Set success to whether the call reverted, if not we check it either\\n                // returned exactly 1 (can't just be non-zero data), or had no return data.\\n                or(and(eq(mload(0), 1), gt(returndatasize(), 31)), iszero(returndatasize())),\\n                // We use 68 because the length of our calldata totals up like so: 4 + 32 * 2.\\n                // We use 0 and 32 to copy up to 32 bytes of return data into the scratch space.\\n                // Counterintuitively, this call must be positioned second to the or() call in the\\n                // surrounding and() call or else returndatasize() will be zero during the computation.\\n                call(gas(), token_, 0, freeMemoryPointer, 68, 0, 32)\\n            )\\n        }\\n\\n        if (!success_) {\\n            revert FluidSafeTransferError(ErrorTypes.SafeTransfer__TransferFailed);\\n        }\\n    }\\n\\n    /// @dev Transfer `amount_` of ` native token to `to_`.\\n    /// Minimally modified from Solmate SafeTransferLib (Custom Error):\\n    /// https://github.com/transmissions11/solmate/blob/50e15bb566f98b7174da9b0066126a4c3e75e0fd/src/utils/SafeTransferLib.sol#L15-L25\\n    function safeTransferNative(address to_, uint256 amount_) internal {\\n        bool success_;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Transfer the ETH and store if it succeeded or not. Pass limited gas\\n            success_ := call(MAX_NATIVE_TRANSFER_GAS, to_, amount_, 0, 0, 0, 0)\\n        }\\n\\n        if (!success_) {\\n            revert FluidSafeTransferError(ErrorTypes.SafeTransfer__TransferFailed);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7f7d3a39d984c62e41c669a3d11deb899b3512ace9313263592575bf48a6e079\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/libraries/storageRead.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @notice implements a method to read uint256 data from storage at a bytes32 storage slot key.\\ncontract StorageRead {\\n    function readFromStorage(bytes32 slot_) public view returns (uint256 result_) {\\n        assembly {\\n            result_ := sload(slot_) // read value from the storage slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1b03dfe294c2f0376f7e34c3960fe7088d7ff44bb2ffd9cb2ac940486bfba8c9\",\"license\":\"BUSL-1.1\"},\"contracts/liquidity/adminModule/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nabstract contract Structs {\\n    struct AddressBool {\\n        address addr;\\n        bool value;\\n    }\\n\\n    struct AddressUint256 {\\n        address addr;\\n        uint256 value;\\n    }\\n\\n    /// @notice struct to set borrow rate data for version 1\\n    struct RateDataV1Params {\\n        ///\\n        /// @param token for rate data\\n        address token;\\n        ///\\n        /// @param kink in borrow rate. in 1e2: 100% = 10_000; 1% = 100\\n        /// utilization below kink usually means slow increase in rate, once utilization is above kink borrow rate increases fast\\n        uint256 kink;\\n        ///\\n        /// @param rateAtUtilizationZero desired borrow rate when utilization is zero. in 1e2: 100% = 10_000; 1% = 100\\n        /// i.e. constant minimum borrow rate\\n        /// e.g. at utilization = 0.01% rate could still be at least 4% (rateAtUtilizationZero would be 400 then)\\n        uint256 rateAtUtilizationZero;\\n        ///\\n        /// @param rateAtUtilizationKink borrow rate when utilization is at kink. in 1e2: 100% = 10_000; 1% = 100\\n        /// e.g. when rate should be 7% at kink then rateAtUtilizationKink would be 700\\n        uint256 rateAtUtilizationKink;\\n        ///\\n        /// @param rateAtUtilizationMax borrow rate when utilization is maximum at 100%. in 1e2: 100% = 10_000; 1% = 100\\n        /// e.g. when rate should be 125% at 100% then rateAtUtilizationMax would be 12_500\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    /// @notice struct to set borrow rate data for version 2\\n    struct RateDataV2Params {\\n        ///\\n        /// @param token for rate data\\n        address token;\\n        ///\\n        /// @param kink1 first kink in borrow rate. in 1e2: 100% = 10_000; 1% = 100\\n        /// utilization below kink 1 usually means slow increase in rate, once utilization is above kink 1 borrow rate increases faster\\n        uint256 kink1;\\n        ///\\n        /// @param kink2 second kink in borrow rate. in 1e2: 100% = 10_000; 1% = 100\\n        /// utilization below kink 2 usually means slow / medium increase in rate, once utilization is above kink 2 borrow rate increases fast\\n        uint256 kink2;\\n        ///\\n        /// @param rateAtUtilizationZero desired borrow rate when utilization is zero. in 1e2: 100% = 10_000; 1% = 100\\n        /// i.e. constant minimum borrow rate\\n        /// e.g. at utilization = 0.01% rate could still be at least 4% (rateAtUtilizationZero would be 400 then)\\n        uint256 rateAtUtilizationZero;\\n        ///\\n        /// @param rateAtUtilizationKink1 desired borrow rate when utilization is at first kink. in 1e2: 100% = 10_000; 1% = 100\\n        /// e.g. when rate should be 7% at first kink then rateAtUtilizationKink would be 700\\n        uint256 rateAtUtilizationKink1;\\n        ///\\n        /// @param rateAtUtilizationKink2 desired borrow rate when utilization is at second kink. in 1e2: 100% = 10_000; 1% = 100\\n        /// e.g. when rate should be 7% at second kink then rateAtUtilizationKink would be 1_200\\n        uint256 rateAtUtilizationKink2;\\n        ///\\n        /// @param rateAtUtilizationMax desired borrow rate when utilization is maximum at 100%. in 1e2: 100% = 10_000; 1% = 100\\n        /// e.g. when rate should be 125% at 100% then rateAtUtilizationMax would be 12_500\\n        uint256 rateAtUtilizationMax;\\n    }\\n\\n    /// @notice struct to set token config\\n    struct TokenConfig {\\n        ///\\n        /// @param token address\\n        address token;\\n        ///\\n        /// @param fee charges on borrower's interest. in 1e2: 100% = 10_000; 1% = 100\\n        uint256 fee;\\n        ///\\n        /// @param threshold on when to update the storage slot. in 1e2: 100% = 10_000; 1% = 100\\n        uint256 threshold;\\n        ///\\n        /// @param maxUtilization maximum allowed utilization. in 1e2: 100% = 10_000; 1% = 100\\n        ///                       set to 100% to disable and have default limit of 100% (avoiding SLOAD).\\n        uint256 maxUtilization;\\n    }\\n\\n    /// @notice struct to set user supply & withdrawal config\\n    struct UserSupplyConfig {\\n        ///\\n        /// @param user address\\n        address user;\\n        ///\\n        /// @param token address\\n        address token;\\n        ///\\n        /// @param mode: 0 = without interest. 1 = with interest\\n        uint8 mode;\\n        ///\\n        /// @param expandPercent withdrawal limit expand percent. in 1e2: 100% = 10_000; 1% = 100\\n        /// Also used to calculate rate at which withdrawal limit should decrease (instant).\\n        uint256 expandPercent;\\n        ///\\n        /// @param expandDuration withdrawal limit expand duration in seconds.\\n        /// used to calculate rate together with expandPercent\\n        uint256 expandDuration;\\n        ///\\n        /// @param baseWithdrawalLimit base limit, below this, user can withdraw the entire amount.\\n        /// amount in raw (to be multiplied with exchange price) or normal depends on configured mode in user config for the token:\\n        /// with interest -> raw, without interest -> normal\\n        uint256 baseWithdrawalLimit;\\n    }\\n\\n    /// @notice struct to set user borrow & payback config\\n    struct UserBorrowConfig {\\n        ///\\n        /// @param user address\\n        address user;\\n        ///\\n        /// @param token address\\n        address token;\\n        ///\\n        /// @param mode: 0 = without interest. 1 = with interest\\n        uint8 mode;\\n        ///\\n        /// @param expandPercent debt limit expand percent. in 1e2: 100% = 10_000; 1% = 100\\n        /// Also used to calculate rate at which debt limit should decrease (instant).\\n        uint256 expandPercent;\\n        ///\\n        /// @param expandDuration debt limit expand duration in seconds.\\n        /// used to calculate rate together with expandPercent\\n        uint256 expandDuration;\\n        ///\\n        /// @param baseDebtCeiling base borrow limit. until here, borrow limit remains as baseDebtCeiling\\n        /// (user can borrow until this point at once without stepped expansion). Above this, automated limit comes in place.\\n        /// amount in raw (to be multiplied with exchange price) or normal depends on configured mode in user config for the token:\\n        /// with interest -> raw, without interest -> normal\\n        uint256 baseDebtCeiling;\\n        ///\\n        /// @param maxDebtCeiling max borrow ceiling, maximum amount the user can borrow.\\n        /// amount in raw (to be multiplied with exchange price) or normal depends on configured mode in user config for the token:\\n        /// with interest -> raw, without interest -> normal\\n        uint256 maxDebtCeiling;\\n    }\\n}\\n\",\"keccak256\":\"0x10353c70015f27b880125cefab806dbed24a4458f187da66964f3ef60488f757\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/dex/main.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { AddressCalcs } from \\\"../../../libraries/addressCalcs.sol\\\";\\nimport { DexSlotsLink } from \\\"../../../libraries/dexSlotsLink.sol\\\";\\nimport { DexCalcs } from \\\"../../../libraries/dexCalcs.sol\\\";\\nimport { BigMathMinified } from \\\"../../../libraries/bigMathMinified.sol\\\";\\nimport { BytesSliceAndConcat } from \\\"../../../libraries/bytesSliceAndConcat.sol\\\";\\nimport { IFluidDexT1 } from \\\"../../../protocols/dex/interfaces/iDexT1.sol\\\";\\nimport { Structs as FluidLiquidityResolverStructs } from \\\"../liquidity/structs.sol\\\";\\nimport { Structs } from \\\"./structs.sol\\\";\\nimport { Variables } from \\\"./variables.sol\\\";\\n\\n/// @title DexFactoryViews\\n/// @notice Abstract contract providing view functions for DEX factory-related operations\\nabstract contract DexFactoryViews is Variables {\\n    /// @notice Get the address of a DEX given its ID\\n    /// @param dexId_ The ID of the DEX\\n    /// @return dex_ The address of the DEX\\n    function getDexAddress(uint256 dexId_) public view returns (address dex_) {\\n        return AddressCalcs.addressCalc(address(FACTORY), dexId_);\\n    }\\n\\n    /// @notice Get the ID of a DEX given its address\\n    /// @param dex_ The address of the DEX\\n    /// @return id_ The ID of the DEX\\n    function getDexId(address dex_) public view returns (uint id_) {\\n        id_ = IFluidDexT1(dex_).DEX_ID();\\n    }\\n\\n    /// @notice Get the total number of DEXes\\n    /// @return The total number of DEXes\\n    function getTotalDexes() public view returns (uint) {\\n        return FACTORY.totalDexes();\\n    }\\n\\n    /// @notice Get an array of all DEX addresses\\n    /// @return dexes_ An array containing all DEX addresses\\n    function getAllDexAddresses() public view returns (address[] memory dexes_) {\\n        uint totalDexes_ = getTotalDexes();\\n        dexes_ = new address[](totalDexes_);\\n        for (uint i = 0; i < totalDexes_; i++) {\\n            dexes_[i] = getDexAddress((i + 1));\\n        }\\n    }\\n}\\n\\n/// @title DexStorageVars\\n/// @notice Abstract contract providing view functions for DEX storage variables\\nabstract contract DexStorageVars is Variables {\\n    /// @notice Get the raw DEX variables\\n    /// @param dex_ The address of the DEX\\n    /// @return The raw DEX variables\\n    function getDexVariablesRaw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_VARIABLES_SLOT));\\n    }\\n\\n    /// @notice Get the raw DEX variables2\\n    /// @param dex_ The address of the DEX\\n    /// @return The raw DEX variables2\\n    function getDexVariables2Raw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_VARIABLES2_SLOT));\\n    }\\n\\n    /// @notice Get the total supply shares slot data of a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return The total supply shares\\n    function getTotalSupplySharesRaw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_TOTAL_SUPPLY_SHARES_SLOT));\\n    }\\n\\n    /// @notice Get the raw user supply data for a specific user and DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param user_ The address of the user\\n    /// @return The raw user supply data\\n    function getUserSupplyDataRaw(address dex_, address user_) public view returns (uint) {\\n        return\\n            IFluidDexT1(dex_).readFromStorage(\\n                DexSlotsLink.calculateMappingStorageSlot(DexSlotsLink.DEX_USER_SUPPLY_MAPPING_SLOT, user_)\\n            );\\n    }\\n\\n    /// @notice Get the total borrow shares slot data of a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return The total borrow shares\\n    function getTotalBorrowSharesRaw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_TOTAL_BORROW_SHARES_SLOT));\\n    }\\n\\n    /// @notice Get the raw user borrow data for a specific user and DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param user_ The address of the user\\n    /// @return The raw user borrow data\\n    function getUserBorrowDataRaw(address dex_, address user_) public view returns (uint) {\\n        return\\n            IFluidDexT1(dex_).readFromStorage(\\n                DexSlotsLink.calculateMappingStorageSlot(DexSlotsLink.DEX_USER_BORROW_MAPPING_SLOT, user_)\\n            );\\n    }\\n\\n    /// @notice Get the raw oracle data for a specific DEX and index\\n    /// @param dex_ The address of the DEX\\n    /// @param index_ The index of the oracle data\\n    /// @return The raw oracle data\\n    function getOracleRaw(address dex_, uint index_) public view returns (uint) {\\n        return\\n            IFluidDexT1(dex_).readFromStorage(\\n                _calculateStorageSlotUintMapping(DexSlotsLink.DEX_ORACLE_MAPPING_SLOT, index_)\\n            );\\n    }\\n\\n    /// @notice Get the raw range shift for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return The raw range shift\\n    function getRangeShiftRaw(address dex_) public view returns (uint) {\\n        return\\n            IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_RANGE_THRESHOLD_SHIFTS_SLOT)) &\\n            type(uint128).max;\\n    }\\n\\n    /// @notice Get the raw threshold shift for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return The raw threshold shift\\n    function getThresholdShiftRaw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_RANGE_THRESHOLD_SHIFTS_SLOT)) >> 128;\\n    }\\n\\n    /// @notice Get the raw center price shift for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return The raw center price shift\\n    function getCenterPriceShiftRaw(address dex_) public view returns (uint) {\\n        return IFluidDexT1(dex_).readFromStorage(bytes32(DexSlotsLink.DEX_CENTER_PRICE_SHIFT_SLOT));\\n    }\\n\\n    /// @dev Calculate the storage slot for a uint mapping\\n    /// @param slot_ The base slot of the mapping\\n    /// @param key_ The key of the mapping\\n    /// @return The calculated storage slot\\n    function _calculateStorageSlotUintMapping(uint256 slot_, uint key_) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(key_, slot_));\\n    }\\n}\\n\\nabstract contract DexActionEstimates {\\n    address private constant ADDRESS_DEAD = 0x000000000000000000000000000000000000dEaD;\\n\\n    /// @notice estimates swap IN tokens execution\\n    /// @param dex_ Dex pool\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountIn_ The exact amount of input tokens to swap\\n    /// @param amountOutMin_ The minimum amount of output tokens the user is willing to accept\\n    /// @return amountOut_ The amount of output tokens received from the swap\\n    function estimateSwapIn(\\n        address dex_,\\n        bool swap0to1_,\\n        uint256 amountIn_,\\n        uint256 amountOutMin_\\n    ) public payable returns (uint256 amountOut_) {\\n        try IFluidDexT1(dex_).swapIn{ value: msg.value }(swap0to1_, amountIn_, amountOutMin_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (amountOut_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexSwapResult.selector);\\n        }\\n    }\\n\\n    /// @notice estimates swap OUT tokens execution\\n    /// @param dex_ Dex pool\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountOut_ The exact amount of tokens to receive after swap\\n    /// @param amountInMax_ Maximum amount of tokens to swap in\\n    /// @return amountIn_ The amount of input tokens used for the swap\\n    function estimateSwapOut(\\n        address dex_,\\n        bool swap0to1_,\\n        uint256 amountOut_,\\n        uint256 amountInMax_\\n    ) public payable returns (uint256 amountIn_) {\\n        try IFluidDexT1(dex_).swapOut{ value: msg.value }(swap0to1_, amountOut_, amountInMax_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (amountIn_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexSwapResult.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate deposit tokens in equal proportion to the current pool ratio\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to mint\\n    /// @param maxToken0Deposit_ Maximum amount of token0 to deposit\\n    /// @param maxToken1Deposit_ Maximum amount of token1 to deposit\\n    /// @return token0Amt_ Estimated amount of token0 to deposit\\n    /// @return token1Amt_ Estimated amount of token1 to deposit\\n    function estimateDepositPerfect(\\n        address dex_,\\n        uint shares_,\\n        uint maxToken0Deposit_,\\n        uint maxToken1Deposit_\\n    ) public payable returns (uint token0Amt_, uint token1Amt_) {\\n        try\\n            IFluidDexT1(dex_).depositPerfect{ value: msg.value }(shares_, maxToken0Deposit_, maxToken1Deposit_, true)\\n        {} catch (bytes memory lowLevelData_) {\\n            (token0Amt_, token1Amt_) = _decodeLowLevelUint2x(\\n                lowLevelData_,\\n                IFluidDexT1.FluidDexPerfectLiquidityOutput.selector\\n            );\\n        }\\n    }\\n\\n    /// @dev Estimate withdrawal of a perfect amount of collateral liquidity\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to withdraw\\n    /// @param minToken0Withdraw_ The minimum amount of token0 the user is willing to accept\\n    /// @param minToken1Withdraw_ The minimum amount of token1 the user is willing to accept\\n    /// @return token0Amt_ Estimated amount of token0 to be withdrawn\\n    /// @return token1Amt_ Estimated amount of token1 to be withdrawn\\n    function estimateWithdrawPerfect(\\n        address dex_,\\n        uint shares_,\\n        uint minToken0Withdraw_,\\n        uint minToken1Withdraw_\\n    ) public returns (uint token0Amt_, uint token1Amt_) {\\n        try IFluidDexT1(dex_).withdrawPerfect(shares_, minToken0Withdraw_, minToken1Withdraw_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (token0Amt_, token1Amt_) = _decodeLowLevelUint2x(\\n                lowLevelData_,\\n                IFluidDexT1.FluidDexPerfectLiquidityOutput.selector\\n            );\\n        }\\n    }\\n\\n    /// @dev Estimate borrowing tokens in equal proportion to the current debt pool ratio\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to borrow\\n    /// @param minToken0Borrow_ Minimum amount of token0 to borrow\\n    /// @param minToken1Borrow_ Minimum amount of token1 to borrow\\n    /// @return token0Amt_ Estimated amount of token0 to be borrowed\\n    /// @return token1Amt_ Estimated amount of token1 to be borrowed\\n    function estimateBorrowPerfect(\\n        address dex_,\\n        uint shares_,\\n        uint minToken0Borrow_,\\n        uint minToken1Borrow_\\n    ) public returns (uint token0Amt_, uint token1Amt_) {\\n        try IFluidDexT1(dex_).borrowPerfect(shares_, minToken0Borrow_, minToken1Borrow_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (token0Amt_, token1Amt_) = _decodeLowLevelUint2x(\\n                lowLevelData_,\\n                IFluidDexT1.FluidDexPerfectLiquidityOutput.selector\\n            );\\n        }\\n    }\\n\\n    /// @dev Estimate paying back borrowed tokens in equal proportion to the current debt pool ratio\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to pay back\\n    /// @param maxToken0Payback_ Maximum amount of token0 to pay back\\n    /// @param maxToken1Payback_ Maximum amount of token1 to pay back\\n    /// @return token0Amt_ Estimated amount of token0 to be paid back\\n    /// @return token1Amt_ Estimated amount of token1 to be paid back\\n    function estimatePaybackPerfect(\\n        address dex_,\\n        uint shares_,\\n        uint maxToken0Payback_,\\n        uint maxToken1Payback_\\n    ) public payable returns (uint token0Amt_, uint token1Amt_) {\\n        try\\n            IFluidDexT1(dex_).paybackPerfect{ value: msg.value }(shares_, maxToken0Payback_, maxToken1Payback_, true)\\n        {} catch (bytes memory lowLevelData_) {\\n            (token0Amt_, token1Amt_) = _decodeLowLevelUint2x(\\n                lowLevelData_,\\n                IFluidDexT1.FluidDexPerfectLiquidityOutput.selector\\n            );\\n        }\\n    }\\n\\n    /// @dev Estimate deposit of tokens\\n    /// @param dex_ The address of the DEX contract\\n    /// @param token0Amt_ Amount of token0 to deposit\\n    /// @param token1Amt_ Amount of token1 to deposit\\n    /// @param minSharesAmt_ Minimum amount of shares to receive\\n    /// @return shares_ Estimated amount of shares to be minted\\n    function estimateDeposit(\\n        address dex_,\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint minSharesAmt_\\n    ) public payable returns (uint shares_) {\\n        try IFluidDexT1(dex_).deposit{ value: msg.value }(token0Amt_, token1Amt_, minSharesAmt_, true) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (shares_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexLiquidityOutput.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate withdrawal of tokens\\n    /// @param dex_ The address of the DEX contract\\n    /// @param token0Amt_ Amount of token0 to withdraw\\n    /// @param token1Amt_ Amount of token1 to withdraw\\n    /// @param maxSharesAmt_ Maximum amount of shares to burn\\n    /// @return shares_ Estimated amount of shares to be burned\\n    function estimateWithdraw(\\n        address dex_,\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint maxSharesAmt_\\n    ) public returns (uint shares_) {\\n        try IFluidDexT1(dex_).withdraw(token0Amt_, token1Amt_, maxSharesAmt_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (shares_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexLiquidityOutput.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate borrowing of tokens\\n    /// @param dex_ The address of the DEX contract\\n    /// @param token0Amt_ Amount of token0 to borrow\\n    /// @param token1Amt_ Amount of token1 to borrow\\n    /// @param maxSharesAmt_ Maximum amount of shares to mint\\n    /// @return shares_ Estimated amount of shares to be minted\\n    function estimateBorrow(\\n        address dex_,\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint maxSharesAmt_\\n    ) public returns (uint shares_) {\\n        try IFluidDexT1(dex_).borrow(token0Amt_, token1Amt_, maxSharesAmt_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (shares_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexLiquidityOutput.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate paying back of borrowed tokens\\n    /// @param dex_ The address of the DEX contract\\n    /// @param token0Amt_ Amount of token0 to pay back\\n    /// @param token1Amt_ Amount of token1 to pay back\\n    /// @param minSharesAmt_ Minimum amount of shares to burn\\n    /// @return shares_ Estimated amount of shares to be burned\\n    function estimatePayback(\\n        address dex_,\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint minSharesAmt_\\n    ) public payable returns (uint shares_) {\\n        try IFluidDexT1(dex_).payback{ value: msg.value }(token0Amt_, token1Amt_, minSharesAmt_, true) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (shares_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexLiquidityOutput.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate withdrawal of a perfect amount of collateral liquidity in one token\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to withdraw\\n    /// @param minToken0_ The minimum amount of token0 the user is willing to accept\\n    /// @param minToken1_ The minimum amount of token1 the user is willing to accept\\n    /// @return withdrawAmt_ Estimated amount of tokens to be withdrawn\\n    function estimateWithdrawPerfectInOneToken(\\n        address dex_,\\n        uint shares_,\\n        uint minToken0_,\\n        uint minToken1_\\n    ) public returns (uint withdrawAmt_) {\\n        try IFluidDexT1(dex_).withdrawPerfectInOneToken(shares_, minToken0_, minToken1_, ADDRESS_DEAD) {} catch (\\n            bytes memory lowLevelData_\\n        ) {\\n            (withdrawAmt_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexLiquidityOutput.selector);\\n        }\\n    }\\n\\n    /// @dev Estimate paying back of a perfect amount of borrowed tokens in one token\\n    /// @param dex_ The address of the DEX contract\\n    /// @param shares_ The number of shares to pay back\\n    /// @param maxToken0_ Maximum amount of token0 to pay back\\n    /// @param maxToken1_ Maximum amount of token1 to pay back\\n    /// @return paybackAmt_ Estimated amount of tokens to be paid back\\n    function estimatePaybackPerfectInOneToken(\\n        address dex_,\\n        uint shares_,\\n        uint maxToken0_,\\n        uint maxToken1_\\n    ) public payable returns (uint paybackAmt_) {\\n        try\\n            IFluidDexT1(dex_).paybackPerfectInOneToken{ value: msg.value }(shares_, maxToken0_, maxToken1_, true)\\n        {} catch (bytes memory lowLevelData_) {\\n            (paybackAmt_) = _decodeLowLevelUint1x(lowLevelData_, IFluidDexT1.FluidDexSingleTokenOutput.selector);\\n        }\\n    }\\n\\n    function _decodeLowLevelUint2x(\\n        bytes memory lowLevelData_,\\n        bytes4 targetErrorSelector_\\n    ) internal pure returns (uint value1_, uint value2_) {\\n        if (lowLevelData_.length < 68) {\\n            return (0, 0);\\n        }\\n\\n        bytes4 errorSelector_;\\n        assembly {\\n            // Extract the selector from the error data\\n            errorSelector_ := mload(add(lowLevelData_, 0x20))\\n        }\\n        if (errorSelector_ == targetErrorSelector_) {\\n            assembly {\\n                value1_ := mload(add(lowLevelData_, 36))\\n                value2_ := mload(add(lowLevelData_, 68))\\n            }\\n        }\\n        // else => values remain 0\\n    }\\n\\n    function _decodeLowLevelUint1x(\\n        bytes memory lowLevelData_,\\n        bytes4 targetErrorSelector_\\n    ) internal pure returns (uint value1_) {\\n        if (lowLevelData_.length < 36) {\\n            return 0;\\n        }\\n\\n        bytes4 errorSelector_;\\n        assembly {\\n            // Extract the selector from the error data\\n            errorSelector_ := mload(add(lowLevelData_, 0x20))\\n        }\\n        if (errorSelector_ == targetErrorSelector_) {\\n            assembly {\\n                value1_ := mload(add(lowLevelData_, 36))\\n            }\\n        }\\n        // else => values remain 0\\n    }\\n}\\n\\nabstract contract DexConstantsViews {\\n    /// @notice returns all Dex constants\\n    function getDexConstantsView(address dex_) public view returns (IFluidDexT1.ConstantViews memory constantsView_) {\\n        return IFluidDexT1(dex_).constantsView();\\n    }\\n\\n    /// @notice returns all Dex constants 2\\n    function getDexConstantsView2(\\n        address dex_\\n    ) public view returns (IFluidDexT1.ConstantViews2 memory constantsView2_) {\\n        return IFluidDexT1(dex_).constantsView2();\\n    }\\n\\n    /// @notice Get the addresses of the tokens in a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return token0_ The address of token0 in the DEX\\n    /// @return token1_ The address of token1 in the DEX\\n    function getDexTokens(address dex_) public view returns (address token0_, address token1_) {\\n        IFluidDexT1.ConstantViews memory constantsView_ = IFluidDexT1(dex_).constantsView();\\n        return (constantsView_.token0, constantsView_.token1);\\n    }\\n}\\n\\nabstract contract DexPublicViews is DexStorageVars, DexConstantsViews {\\n    /// @notice Get the prices and exchange prices for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return pex_ A struct containing prices and exchange prices\\n    /// @dev expected to be called via callStatic\\n    function getDexPricesAndExchangePrices(\\n        address dex_\\n    ) public returns (IFluidDexT1.PricesAndExchangePrice memory pex_) {\\n        try IFluidDexT1(dex_).getPricesAndExchangePrices() {} catch (bytes memory lowLevelData_) {\\n            bytes4 errorSelector_;\\n            assembly {\\n                // Extract the selector from the error data\\n                errorSelector_ := mload(add(lowLevelData_, 0x20))\\n            }\\n            if (errorSelector_ == IFluidDexT1.FluidDexPricesAndExchangeRates.selector) {\\n                pex_ = abi.decode(\\n                    BytesSliceAndConcat.bytesSlice(lowLevelData_, 4, lowLevelData_.length - 4),\\n                    (IFluidDexT1.PricesAndExchangePrice)\\n                );\\n            }\\n        }\\n    }\\n\\n    /// @notice Get the collateral reserves for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return reserves_ A struct containing collateral reserve information\\n    /// @dev expected to be called via callStatic\\n    function getDexCollateralReserves(address dex_) public returns (IFluidDexT1.CollateralReserves memory reserves_) {\\n        return _getDexCollateralReserves(dex_, getDexConstantsView2(dex_));\\n    }\\n\\n    /// @notice Get the debt reserves for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return reserves_ A struct containing debt reserve information\\n    /// @dev expected to be called via callStatic\\n    function getDexDebtReserves(address dex_) public returns (IFluidDexT1.DebtReserves memory reserves_) {\\n        return _getDexDebtReserves(dex_, getDexConstantsView2(dex_));\\n    }\\n\\n    /// @notice get Dex oracle price TWAP data\\n    /// @param secondsAgos_ array of seconds ago for which TWAP is needed. If user sends [10, 30, 60] then twaps_ will return [10-0, 30-10, 60-30]\\n    /// @return twaps_ twap price, lowest price (aka minima) & highest price (aka maxima) between secondsAgo checkpoints\\n    /// @return currentPrice_ price of pool after the most recent swap\\n    function getDexOraclePrice(\\n        address dex_,\\n        uint[] memory secondsAgos_\\n    ) external view returns (IFluidDexT1.Oracle[] memory twaps_, uint currentPrice_) {\\n        return IFluidDexT1(dex_).oraclePrice(secondsAgos_);\\n    }\\n\\n    /// @dev Get the collateral reserves for a DEX scaled to token decimals\\n    function _getDexCollateralReserves(\\n        address dex_,\\n        IFluidDexT1.ConstantViews2 memory constantsView2_\\n    ) internal returns (IFluidDexT1.CollateralReserves memory reserves_) {\\n        uint256 dexVariables2_ = getDexVariables2Raw(dex_);\\n        if ((dexVariables2_ & 1) != 1) {\\n            // smart col not enabled\\n            return IFluidDexT1.CollateralReserves(0, 0, 0, 0);\\n        }\\n\\n        try this.getDexPricesAndExchangePrices(dex_) returns (IFluidDexT1.PricesAndExchangePrice memory pex_) {\\n            try\\n                IFluidDexT1(dex_).getCollateralReserves(\\n                    pex_.geometricMean,\\n                    pex_.upperRange,\\n                    pex_.lowerRange,\\n                    pex_.supplyToken0ExchangePrice,\\n                    pex_.supplyToken1ExchangePrice\\n                )\\n            returns (IFluidDexT1.CollateralReserves memory colReserves_) {\\n                // returned reserves are in 1e12 decimals -> normalize to token decimals\\n                reserves_.token0RealReserves =\\n                    (colReserves_.token0RealReserves * constantsView2_.token0DenominatorPrecision) /\\n                    constantsView2_.token0NumeratorPrecision;\\n                reserves_.token0ImaginaryReserves =\\n                    (colReserves_.token0ImaginaryReserves * constantsView2_.token0DenominatorPrecision) /\\n                    constantsView2_.token0NumeratorPrecision;\\n                reserves_.token1RealReserves =\\n                    (colReserves_.token1RealReserves * constantsView2_.token1DenominatorPrecision) /\\n                    constantsView2_.token1NumeratorPrecision;\\n                reserves_.token1ImaginaryReserves =\\n                    (colReserves_.token1ImaginaryReserves * constantsView2_.token1DenominatorPrecision) /\\n                    constantsView2_.token1NumeratorPrecision;\\n            } catch {\\n                reserves_ = IFluidDexT1.CollateralReserves(0, 0, 0, 0);\\n            }\\n        } catch {\\n            reserves_ = IFluidDexT1.CollateralReserves(0, 0, 0, 0);\\n        }\\n    }\\n\\n    /// @dev Get the debt reserves for a DEX scaled to token decimals\\n    function _getDexDebtReserves(\\n        address dex_,\\n        IFluidDexT1.ConstantViews2 memory constantsView2_\\n    ) internal returns (IFluidDexT1.DebtReserves memory reserves_) {\\n        uint256 dexVariables2_ = getDexVariables2Raw(dex_);\\n        if ((dexVariables2_ & 2) != 2) {\\n            // smart debt not enabled\\n            return IFluidDexT1.DebtReserves(0, 0, 0, 0, 0, 0);\\n        }\\n\\n        try this.getDexPricesAndExchangePrices(dex_) returns (IFluidDexT1.PricesAndExchangePrice memory pex_) {\\n            try\\n                IFluidDexT1(dex_).getDebtReserves(\\n                    pex_.geometricMean,\\n                    pex_.upperRange,\\n                    pex_.lowerRange,\\n                    pex_.borrowToken0ExchangePrice,\\n                    pex_.borrowToken1ExchangePrice\\n                )\\n            returns (IFluidDexT1.DebtReserves memory debtReserves_) {\\n                // returned reserves are in 1e12 decimals -> normalize to token decimals\\n                reserves_.token0Debt =\\n                    (debtReserves_.token0Debt * constantsView2_.token0DenominatorPrecision) /\\n                    constantsView2_.token0NumeratorPrecision;\\n                reserves_.token0RealReserves =\\n                    (debtReserves_.token0RealReserves * constantsView2_.token0DenominatorPrecision) /\\n                    constantsView2_.token0NumeratorPrecision;\\n                reserves_.token0ImaginaryReserves =\\n                    (debtReserves_.token0ImaginaryReserves * constantsView2_.token0DenominatorPrecision) /\\n                    constantsView2_.token0NumeratorPrecision;\\n                reserves_.token1Debt =\\n                    (debtReserves_.token1Debt * constantsView2_.token1DenominatorPrecision) /\\n                    constantsView2_.token1NumeratorPrecision;\\n                reserves_.token1RealReserves =\\n                    (debtReserves_.token1RealReserves * constantsView2_.token1DenominatorPrecision) /\\n                    constantsView2_.token1NumeratorPrecision;\\n                reserves_.token1ImaginaryReserves =\\n                    (debtReserves_.token1ImaginaryReserves * constantsView2_.token1DenominatorPrecision) /\\n                    constantsView2_.token1NumeratorPrecision;\\n            } catch {\\n                reserves_ = IFluidDexT1.DebtReserves(0, 0, 0, 0, 0, 0);\\n            }\\n        } catch {\\n            reserves_ = IFluidDexT1.DebtReserves(0, 0, 0, 0, 0, 0);\\n        }\\n    }\\n}\\n\\nabstract contract DexUserViews is Variables, Structs, DexConstantsViews, DexPublicViews {\\n    /// @notice Get user supply data for a specific DEX and user\\n    /// @param dex_ The address of the DEX\\n    /// @param user_ The address of the user\\n    /// @return userSupplyData_ Struct containing user supply data\\n    function getUserSupplyData(\\n        address dex_,\\n        address user_\\n    ) public view returns (UserSupplyData memory userSupplyData_) {\\n        uint256 userSupply_ = getUserSupplyDataRaw(dex_, user_);\\n\\n        if (userSupply_ > 0) {\\n            // if userSupply_ == 0 -> user not configured yet\\n            userSupplyData_.isAllowed = userSupply_ & 1 == 1;\\n            userSupplyData_.supply = BigMathMinified.fromBigNumber(\\n                (userSupply_ >> DexSlotsLink.BITS_USER_SUPPLY_AMOUNT) & DexCalcs.X64,\\n                DexCalcs.DEFAULT_EXPONENT_SIZE,\\n                DexCalcs.DEFAULT_EXPONENT_MASK\\n            );\\n\\n            // get updated expanded withdrawal limit\\n            userSupplyData_.withdrawalLimit = DexCalcs.calcWithdrawalLimitBeforeOperate(\\n                userSupply_,\\n                userSupplyData_.supply\\n            );\\n\\n            userSupplyData_.lastUpdateTimestamp =\\n                (userSupply_ >> DexSlotsLink.BITS_USER_SUPPLY_LAST_UPDATE_TIMESTAMP) &\\n                DexCalcs.X33;\\n            userSupplyData_.expandPercent =\\n                (userSupply_ >> DexSlotsLink.BITS_USER_SUPPLY_EXPAND_PERCENT) &\\n                DexCalcs.X14;\\n            userSupplyData_.expandDuration =\\n                (userSupply_ >> DexSlotsLink.BITS_USER_SUPPLY_EXPAND_DURATION) &\\n                DexCalcs.X24;\\n            userSupplyData_.baseWithdrawalLimit = BigMathMinified.fromBigNumber(\\n                (userSupply_ >> DexSlotsLink.BITS_USER_SUPPLY_BASE_WITHDRAWAL_LIMIT) & DexCalcs.X18,\\n                DexCalcs.DEFAULT_EXPONENT_SIZE,\\n                DexCalcs.DEFAULT_EXPONENT_MASK\\n            );\\n\\n            userSupplyData_.withdrawableUntilLimit = userSupplyData_.supply > userSupplyData_.withdrawalLimit\\n                ? userSupplyData_.supply - userSupplyData_.withdrawalLimit\\n                : 0;\\n\\n            userSupplyData_.withdrawable = userSupplyData_.withdrawableUntilLimit;\\n\\n            (address token0_, address token1_) = getDexTokens(dex_);\\n            (userSupplyData_.liquidityUserSupplyDataToken0, userSupplyData_.liquidityTokenData0) = LIQUIDITY_RESOLVER\\n                .getUserSupplyData(dex_, token0_);\\n            (userSupplyData_.liquidityUserSupplyDataToken1, userSupplyData_.liquidityTokenData1) = LIQUIDITY_RESOLVER\\n                .getUserSupplyData(dex_, token1_);\\n        }\\n    }\\n\\n    /// @notice Get user supply data for multiple users in a specific DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param users_ Array of user addresses\\n    /// @return userSuppliesData_ Array of UserSupplyData structs for each user\\n    function getUserSupplyDatas(\\n        address dex_,\\n        address[] calldata users_\\n    ) public view returns (UserSupplyData[] memory userSuppliesData_) {\\n        uint256 length_ = users_.length;\\n        userSuppliesData_ = new UserSupplyData[](length_);\\n\\n        for (uint256 i; i < length_; i++) {\\n            (userSuppliesData_[i]) = getUserSupplyData(dex_, users_[i]);\\n        }\\n    }\\n\\n    /// @notice Get user borrow data for a specific DEX and user\\n    /// @param dex_ The address of the DEX\\n    /// @param user_ The address of the user\\n    /// @return userBorrowData_ Struct containing user borrow data\\n    function getUserBorrowData(\\n        address dex_,\\n        address user_\\n    ) public view returns (UserBorrowData memory userBorrowData_) {\\n        uint256 userBorrow_ = getUserBorrowDataRaw(dex_, user_);\\n\\n        if (userBorrow_ > 0) {\\n            // if userBorrow_ == 0 -> user not configured yet\\n\\n            userBorrowData_.isAllowed = userBorrow_ & 1 == 1;\\n\\n            userBorrowData_.borrow = BigMathMinified.fromBigNumber(\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_AMOUNT) & DexCalcs.X64,\\n                DexCalcs.DEFAULT_EXPONENT_SIZE,\\n                DexCalcs.DEFAULT_EXPONENT_MASK\\n            );\\n\\n            // get updated expanded borrow limit\\n            userBorrowData_.borrowLimit = DexCalcs.calcBorrowLimitBeforeOperate(userBorrow_, userBorrowData_.borrow);\\n\\n            userBorrowData_.lastUpdateTimestamp =\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_LAST_UPDATE_TIMESTAMP) &\\n                DexCalcs.X33;\\n            userBorrowData_.expandPercent =\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_EXPAND_PERCENT) &\\n                DexCalcs.X14;\\n            userBorrowData_.expandDuration =\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_EXPAND_DURATION) &\\n                DexCalcs.X24;\\n            userBorrowData_.baseBorrowLimit = BigMathMinified.fromBigNumber(\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_BASE_BORROW_LIMIT) & DexCalcs.X18,\\n                DexCalcs.DEFAULT_EXPONENT_SIZE,\\n                DexCalcs.DEFAULT_EXPONENT_MASK\\n            );\\n            userBorrowData_.maxBorrowLimit = BigMathMinified.fromBigNumber(\\n                (userBorrow_ >> DexSlotsLink.BITS_USER_BORROW_MAX_BORROW_LIMIT) & DexCalcs.X18,\\n                DexCalcs.DEFAULT_EXPONENT_SIZE,\\n                DexCalcs.DEFAULT_EXPONENT_MASK\\n            );\\n\\n            userBorrowData_.borrowableUntilLimit = userBorrowData_.borrowLimit > userBorrowData_.borrow\\n                ? userBorrowData_.borrowLimit - userBorrowData_.borrow\\n                : 0;\\n\\n            userBorrowData_.borrowable = userBorrowData_.borrowableUntilLimit;\\n\\n            (address token0_, address token1_) = getDexTokens(dex_);\\n            (userBorrowData_.liquidityUserBorrowDataToken0, userBorrowData_.liquidityTokenData0) = LIQUIDITY_RESOLVER\\n                .getUserBorrowData(dex_, token0_);\\n            (userBorrowData_.liquidityUserBorrowDataToken1, userBorrowData_.liquidityTokenData1) = LIQUIDITY_RESOLVER\\n                .getUserBorrowData(dex_, token1_);\\n        }\\n    }\\n\\n    /// @notice Get user borrow data for multiple users in a specific DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param users_ Array of user addresses\\n    /// @return userBorrowingsData_ Array of UserBorrowData structs for each user\\n    function getUserBorrowDatas(\\n        address dex_,\\n        address[] calldata users_\\n    ) public view returns (UserBorrowData[] memory userBorrowingsData_) {\\n        uint256 length_ = users_.length;\\n        userBorrowingsData_ = new UserBorrowData[](length_);\\n\\n        for (uint256 i; i < length_; i++) {\\n            (userBorrowingsData_[i]) = getUserBorrowData(dex_, users_[i]);\\n        }\\n    }\\n\\n    /// @notice Get both user supply and borrow data for multiple users in a specific DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param users_ Array of user addresses\\n    /// @return userSuppliesData_ Array of UserSupplyData structs for each user\\n    /// @return userBorrowingsData_ Array of UserBorrowData structs for each user\\n    function getUserBorrowSupplyDatas(\\n        address dex_,\\n        address[] calldata users_\\n    ) public view returns (UserSupplyData[] memory userSuppliesData_, UserBorrowData[] memory userBorrowingsData_) {\\n        uint256 length_ = users_.length;\\n        userSuppliesData_ = new UserSupplyData[](length_);\\n        userBorrowingsData_ = new UserBorrowData[](length_);\\n        for (uint256 i; i < length_; i++) {\\n            (userSuppliesData_[i]) = getUserSupplyData(dex_, users_[i]);\\n            (userBorrowingsData_[i]) = getUserBorrowData(dex_, users_[i]);\\n        }\\n    }\\n}\\n\\n/// @notice Fluid Dex protocol resolver\\n/// Implements various view-only methods to give easy access to Dex protocol data.\\ncontract FluidDexResolver is Variables, DexFactoryViews, DexActionEstimates, DexUserViews {\\n    constructor(\\n        address factory_,\\n        address liquidity_,\\n        address liquidityResolver_,\\n        address deployer_\\n    ) Variables(factory_, liquidity_, liquidityResolver_, deployer_) {}\\n\\n    /// @notice Get the current state of a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return state_ A struct containing the current state of the DEX\\n    /// @dev expected to be called via callStatic\\n    function getDexState(address dex_) public returns (DexState memory state_) {\\n        return _getDexState(dex_, getDexCollateralReserves(dex_), getDexDebtReserves(dex_));\\n    }\\n\\n    /// @notice Get the current configurations of a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return configs_ A struct containing the current configurations of the DEX\\n    function getDexConfigs(address dex_) public view returns (Configs memory configs_) {\\n        uint256 dexVariables2_ = getDexVariables2Raw(dex_);\\n\\n        configs_.isSmartCollateralEnabled = (dexVariables2_ & 1) == 1;\\n        configs_.isSmartDebtEnabled = (dexVariables2_ & 2) == 2;\\n        configs_.fee = (dexVariables2_ >> 2) & X17;\\n        configs_.revenueCut = (dexVariables2_ >> 19) & X7;\\n        configs_.upperRange = (dexVariables2_ >> 27) & X20;\\n        configs_.lowerRange = (dexVariables2_ >> 47) & X20;\\n        configs_.upperShiftThreshold = (dexVariables2_ >> 68) & X10;\\n        configs_.lowerShiftThreshold = (dexVariables2_ >> 78) & X10;\\n        configs_.shiftingTime = (dexVariables2_ >> 88) & X24;\\n\\n        configs_.maxSupplyShares = getTotalSupplySharesRaw(dex_) >> 128;\\n        configs_.maxBorrowShares = getTotalBorrowSharesRaw(dex_) >> 128;\\n\\n        uint256 addressNonce_ = (dexVariables2_ >> 112) & X30;\\n        if (addressNonce_ > 0) {\\n            configs_.centerPriceAddress = AddressCalcs.addressCalc(DEPLOYER_CONTRACT, addressNonce_);\\n        }\\n\\n        addressNonce_ = (dexVariables2_ >> 142) & X30;\\n        if (addressNonce_ > 0) {\\n            configs_.hookAddress = AddressCalcs.addressCalc(DEPLOYER_CONTRACT, addressNonce_);\\n        }\\n\\n        configs_.maxCenterPrice = BigMathMinified.fromBigNumber(\\n            (dexVariables2_ >> 172) & X28,\\n            DexCalcs.DEFAULT_EXPONENT_SIZE,\\n            DexCalcs.DEFAULT_EXPONENT_MASK\\n        );\\n        configs_.minCenterPrice = BigMathMinified.fromBigNumber(\\n            (dexVariables2_ >> 200) & X28,\\n            DexCalcs.DEFAULT_EXPONENT_SIZE,\\n            DexCalcs.DEFAULT_EXPONENT_MASK\\n        );\\n\\n        configs_.utilizationLimitToken0 = (dexVariables2_ >> 228) & X10;\\n        configs_.utilizationLimitToken1 = (dexVariables2_ >> 238) & X10;\\n    }\\n\\n    /// @notice Get the swap limits and availability for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return limitsAndAvailability_ A struct containing the swap limits and availability for the DEX\\n    function getDexSwapLimitsAndAvailability(\\n        address dex_\\n    ) public view returns (SwapLimitsAndAvailability memory limitsAndAvailability_) {\\n        (address token0_, address token1_) = getDexTokens(dex_);\\n\\n        uint256 dexVariables2_ = getDexVariables2Raw(dex_);\\n        uint256 utilizationLimitToken0_ = (dexVariables2_ >> 228) & X10;\\n        uint256 utilizationLimitToken1_ = (dexVariables2_ >> 238) & X10;\\n\\n        return\\n            _getDexSwapLimitsAndAvailability(dex_, token0_, token1_, utilizationLimitToken0_, utilizationLimitToken1_);\\n    }\\n\\n    /// @notice Get the entire data for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @return data_ A struct containing all the data for the DEX\\n    /// @dev expected to be called via callStatic\\n    function getDexEntireData(address dex_) public returns (DexEntireData memory data_) {\\n        data_.dex = dex_;\\n        data_.constantViews = getDexConstantsView(dex_);\\n        data_.constantViews2 = getDexConstantsView2(dex_);\\n        data_.configs = getDexConfigs(dex_);\\n        data_.pex = getDexPricesAndExchangePrices(dex_);\\n        data_.colReserves = _getDexCollateralReserves(dex_, data_.constantViews2);\\n        data_.debtReserves = _getDexDebtReserves(dex_, data_.constantViews2);\\n        data_.dexState = _getDexState(dex_, data_.colReserves, data_.debtReserves);\\n        data_.limitsAndAvailability = _getDexSwapLimitsAndAvailability(\\n            dex_,\\n            data_.constantViews.token0,\\n            data_.constantViews.token1,\\n            data_.configs.utilizationLimitToken0,\\n            data_.configs.utilizationLimitToken1\\n        );\\n    }\\n\\n    /// @notice Get the entire data for multiple DEXes\\n    /// @param dexes_ An array of DEX addresses\\n    /// @return datas_ An array of structs containing all the data for each DEX\\n    /// @dev expected to be called via callStatic\\n    function getDexEntireDatas(address[] memory dexes_) public returns (DexEntireData[] memory datas_) {\\n        uint256 length_ = dexes_.length;\\n        datas_ = new DexEntireData[](length_);\\n\\n        for (uint256 i; i < length_; i++) {\\n            datas_[i] = getDexEntireData(dexes_[i]);\\n        }\\n    }\\n\\n    /// @notice Get the entire data for all DEXes\\n    /// @return datas_ An array of structs containing all the data for all DEXes\\n    /// @dev expected to be called via callStatic\\n    function getAllDexEntireDatas() external returns (DexEntireData[] memory datas_) {\\n        return getDexEntireDatas(getAllDexAddresses());\\n    }\\n\\n    /// @dev get the swap limits and availability for a DEX\\n    /// @param dex_ The address of the DEX\\n    /// @param token0_ The address of token0\\n    /// @param token1_ The address of token1\\n    /// @param utilizationLimitToken0Percent_ The utilization limit percentage for token0\\n    /// @param utilizationLimitToken1Percent_ The utilization limit percentage for token1\\n    /// @return limitsAndAvailability_ A struct containing the swap limits and availability for the DEX\\n    function _getDexSwapLimitsAndAvailability(\\n        address dex_,\\n        address token0_,\\n        address token1_,\\n        uint256 utilizationLimitToken0Percent_,\\n        uint256 utilizationLimitToken1Percent_\\n    ) internal view returns (SwapLimitsAndAvailability memory limitsAndAvailability_) {\\n        (\\n            limitsAndAvailability_.liquidityUserSupplyDataToken0,\\n            limitsAndAvailability_.liquidityTokenData0\\n        ) = LIQUIDITY_RESOLVER.getUserSupplyData(dex_, token0_);\\n        (\\n            limitsAndAvailability_.liquidityUserSupplyDataToken1,\\n            limitsAndAvailability_.liquidityTokenData1\\n        ) = LIQUIDITY_RESOLVER.getUserSupplyData(dex_, token1_);\\n\\n        (limitsAndAvailability_.liquidityUserBorrowDataToken0, ) = LIQUIDITY_RESOLVER.getUserBorrowData(dex_, token0_);\\n        (limitsAndAvailability_.liquidityUserBorrowDataToken1, ) = LIQUIDITY_RESOLVER.getUserBorrowData(dex_, token1_);\\n\\n        limitsAndAvailability_.liquiditySupplyToken0 = limitsAndAvailability_.liquidityTokenData0.totalSupply;\\n        limitsAndAvailability_.liquiditySupplyToken1 = limitsAndAvailability_.liquidityTokenData1.totalSupply;\\n        limitsAndAvailability_.liquidityBorrowToken0 = limitsAndAvailability_.liquidityTokenData0.totalBorrow;\\n        limitsAndAvailability_.liquidityBorrowToken1 = limitsAndAvailability_.liquidityTokenData1.totalBorrow;\\n\\n        limitsAndAvailability_.liquidityWithdrawableToken0 = limitsAndAvailability_\\n            .liquidityUserSupplyDataToken0\\n            .withdrawable;\\n        limitsAndAvailability_.liquidityWithdrawableToken1 = limitsAndAvailability_\\n            .liquidityUserSupplyDataToken1\\n            .withdrawable;\\n\\n        limitsAndAvailability_.liquidityBorrowableToken0 = limitsAndAvailability_\\n            .liquidityUserBorrowDataToken0\\n            .borrowable;\\n        limitsAndAvailability_.liquidityBorrowableToken1 = limitsAndAvailability_\\n            .liquidityUserBorrowDataToken1\\n            .borrowable;\\n\\n        limitsAndAvailability_.utilizationLimitToken0 =\\n            (limitsAndAvailability_.liquiditySupplyToken0 * utilizationLimitToken0Percent_) /\\n            1e3;\\n        limitsAndAvailability_.utilizationLimitToken1 =\\n            (limitsAndAvailability_.liquiditySupplyToken1 * utilizationLimitToken1Percent_) /\\n            1e3;\\n\\n        if (limitsAndAvailability_.liquidityBorrowToken0 < limitsAndAvailability_.utilizationLimitToken0) {\\n            limitsAndAvailability_.withdrawableUntilUtilizationLimitToken0 =\\n                (1e3 * limitsAndAvailability_.liquidityBorrowToken0) /\\n                utilizationLimitToken0Percent_;\\n            limitsAndAvailability_.withdrawableUntilUtilizationLimitToken0 = limitsAndAvailability_\\n                .liquiditySupplyToken0 > limitsAndAvailability_.withdrawableUntilUtilizationLimitToken0\\n                ? limitsAndAvailability_.liquiditySupplyToken0 -\\n                    limitsAndAvailability_.withdrawableUntilUtilizationLimitToken0\\n                : 0;\\n\\n            limitsAndAvailability_.borrowableUntilUtilizationLimitToken0 =\\n                limitsAndAvailability_.utilizationLimitToken0 -\\n                limitsAndAvailability_.liquidityBorrowToken0;\\n        }\\n\\n        if (limitsAndAvailability_.liquidityBorrowToken1 < limitsAndAvailability_.utilizationLimitToken1) {\\n            limitsAndAvailability_.withdrawableUntilUtilizationLimitToken1 =\\n                (1e3 * limitsAndAvailability_.liquidityBorrowToken1) /\\n                utilizationLimitToken1Percent_;\\n            limitsAndAvailability_.withdrawableUntilUtilizationLimitToken1 = limitsAndAvailability_\\n                .liquiditySupplyToken1 > limitsAndAvailability_.withdrawableUntilUtilizationLimitToken1\\n                ? limitsAndAvailability_.liquiditySupplyToken1 -\\n                    limitsAndAvailability_.withdrawableUntilUtilizationLimitToken1\\n                : 0;\\n\\n            limitsAndAvailability_.borrowableUntilUtilizationLimitToken1 =\\n                limitsAndAvailability_.utilizationLimitToken1 -\\n                limitsAndAvailability_.liquidityBorrowToken1;\\n        }\\n    }\\n\\n    /// @dev Get the current state of a DEX\\n    function _getDexState(\\n        address dex_,\\n        IFluidDexT1.CollateralReserves memory colReserves_,\\n        IFluidDexT1.DebtReserves memory debtReserves_\\n    ) internal view returns (DexState memory state_) {\\n        uint256 storageVar_ = getDexVariablesRaw(dex_);\\n\\n        /// Next 40 bits => 1-40 => last to last stored price. BigNumber (32 bits precision, 8 bits exponent)\\n        /// Next 40 bits => 41-80 => last stored price of pool. BigNumber (32 bits precision, 8 bits exponent)\\n        /// Next 40 bits => 81-120 => center price. Center price from where the ranges will be calculated. BigNumber (32 bits precision, 8 bits exponent)\\n        state_.lastToLastStoredPrice = (storageVar_ >> 1) & X40;\\n        state_.lastToLastStoredPrice = (state_.lastToLastStoredPrice >> 8) << (state_.lastToLastStoredPrice & X8);\\n        state_.lastStoredPrice = (storageVar_ >> 41) & X40;\\n        state_.lastStoredPrice = (state_.lastStoredPrice >> 8) << (state_.lastStoredPrice & X8);\\n        state_.centerPrice = (storageVar_ >> 81) & X40;\\n        state_.centerPrice = (state_.centerPrice >> 8) << (state_.centerPrice & X8);\\n\\n        state_.lastUpdateTimestamp = (storageVar_ >> 121) & X33;\\n        state_.lastPricesTimeDiff = (storageVar_ >> 154) & X22;\\n        state_.oracleCheckPoint = (storageVar_ >> 176) & X3;\\n        state_.oracleMapping = (storageVar_ >> 179) & X16;\\n\\n        state_.totalSupplyShares = getTotalSupplySharesRaw(dex_) & X128;\\n        state_.totalBorrowShares = getTotalBorrowSharesRaw(dex_) & X128;\\n\\n        storageVar_ = getDexVariables2Raw(dex_);\\n        state_.isSwapAndArbitragePaused = storageVar_ >> 255 == 1;\\n\\n        state_.shifts.isRangeChangeActive = (storageVar_ >> 26) & 1 == 1;\\n        state_.shifts.isThresholdChangeActive = (storageVar_ >> 67) & 1 == 1;\\n        state_.shifts.isCenterPriceShiftActive = (storageVar_ >> 248) & 1 == 1;\\n\\n        storageVar_ = getRangeShiftRaw(dex_);\\n        state_.shifts.rangeShift.oldUpper = storageVar_ & X20;\\n        state_.shifts.rangeShift.oldLower = (storageVar_ >> 20) & X20;\\n        state_.shifts.rangeShift.duration = (storageVar_ >> 40) & X20;\\n        state_.shifts.rangeShift.startTimestamp = (storageVar_ >> 60) & X33;\\n\\n        storageVar_ = getThresholdShiftRaw(dex_);\\n        state_.shifts.thresholdShift.oldUpper = storageVar_ & X10;\\n        state_.shifts.thresholdShift.oldLower = (storageVar_ >> 20) & X10;\\n        state_.shifts.thresholdShift.duration = (storageVar_ >> 40) & X20;\\n        state_.shifts.thresholdShift.startTimestamp = (storageVar_ >> 60) & X33;\\n        state_.shifts.thresholdShift.oldTime = (storageVar_ >> 93) & X24;\\n\\n        storageVar_ = getCenterPriceShiftRaw(dex_);\\n        state_.shifts.centerPriceShift.startTimestamp = storageVar_ & X33;\\n        state_.shifts.centerPriceShift.shiftPercentage = (storageVar_ >> 33) & X20;\\n        state_.shifts.centerPriceShift.duration = (storageVar_ >> 53) & X20;\\n\\n        if (state_.totalSupplyShares > 0) {\\n            state_.token0PerSupplyShare = (colReserves_.token0RealReserves * 1e18) / state_.totalSupplyShares;\\n            state_.token1PerSupplyShare = (colReserves_.token1RealReserves * 1e18) / state_.totalSupplyShares;\\n        }\\n        if (state_.totalBorrowShares > 0) {\\n            state_.token0PerBorrowShare = (debtReserves_.token0Debt * 1e18) / state_.totalBorrowShares;\\n            state_.token1PerBorrowShare = (debtReserves_.token1Debt * 1e18) / state_.totalBorrowShares;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x883727ed9a8cca6cf26cbe276877db5131480fc86c683f73389ddab4a62efa37\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/dex/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IFluidDexT1 } from \\\"../../../protocols/dex/interfaces/iDexT1.sol\\\";\\nimport { Structs as FluidLiquidityResolverStructs } from \\\"../liquidity/structs.sol\\\";\\n\\nabstract contract Structs {\\n    struct DexState {\\n        uint256 lastToLastStoredPrice;\\n        uint256 lastStoredPrice; // price of pool after the most recent swap\\n        uint256 centerPrice;\\n        uint256 lastUpdateTimestamp;\\n        uint256 lastPricesTimeDiff;\\n        uint256 oracleCheckPoint;\\n        uint256 oracleMapping;\\n        uint256 totalSupplyShares;\\n        uint256 totalBorrowShares;\\n        bool isSwapAndArbitragePaused; // if true, only perfect functions will be usable\\n        ShiftChanges shifts;\\n        // below values have to be combined with Oracle price data at the VaultResolver\\n        uint256 token0PerSupplyShare; // token0 amount per 1e18 supply shares\\n        uint256 token1PerSupplyShare; // token1 amount per 1e18 supply shares\\n        uint256 token0PerBorrowShare; // token0 amount per 1e18 borrow shares\\n        uint256 token1PerBorrowShare; // token1 amount per 1e18 borrow shares\\n    }\\n\\n    struct ShiftData {\\n        uint256 oldUpper;\\n        uint256 oldLower;\\n        uint256 duration;\\n        uint256 startTimestamp;\\n        uint256 oldTime; // only for thresholdShift\\n    }\\n\\n    struct CenterPriceShift {\\n        uint256 shiftPercentage;\\n        uint256 duration;\\n        uint256 startTimestamp;\\n    }\\n\\n    struct ShiftChanges {\\n        bool isRangeChangeActive;\\n        bool isThresholdChangeActive;\\n        bool isCenterPriceShiftActive;\\n        ShiftData rangeShift;\\n        ShiftData thresholdShift;\\n        CenterPriceShift centerPriceShift;\\n    }\\n\\n    struct Configs {\\n        bool isSmartCollateralEnabled;\\n        bool isSmartDebtEnabled;\\n        uint256 fee;\\n        uint256 revenueCut;\\n        uint256 upperRange;\\n        uint256 lowerRange;\\n        uint256 upperShiftThreshold;\\n        uint256 lowerShiftThreshold;\\n        uint256 shiftingTime;\\n        address centerPriceAddress;\\n        address hookAddress;\\n        uint256 maxCenterPrice;\\n        uint256 minCenterPrice;\\n        uint256 utilizationLimitToken0;\\n        uint256 utilizationLimitToken1;\\n        uint256 maxSupplyShares;\\n        uint256 maxBorrowShares;\\n    }\\n\\n    // @dev note there might be other things that act as effective limits which are not fully considered here.\\n    // e.g. such as maximum 5% oracle shift in one swap, withdraws & borrowing together affecting each other,\\n    // shares being below max supply / borrow shares etc.\\n    struct SwapLimitsAndAvailability {\\n        // liquidity total amounts\\n        uint liquiditySupplyToken0;\\n        uint liquiditySupplyToken1;\\n        uint liquidityBorrowToken0;\\n        uint liquidityBorrowToken1;\\n        // liquidity limits\\n        uint liquidityWithdrawableToken0;\\n        uint liquidityWithdrawableToken1;\\n        uint liquidityBorrowableToken0;\\n        uint liquidityBorrowableToken1;\\n        // utilization limits based on config at Dex. (e.g. liquiditySupplyToken0 * Configs.utilizationLimitToken0 / 1e3)\\n        uint utilizationLimitToken0;\\n        uint utilizationLimitToken1;\\n        // swappable amounts until utilization limit.\\n        // In a swap that does both withdraw and borrow, the effective amounts might be less because withdraw / borrow affect each other\\n        // (both increase utilization).\\n        uint withdrawableUntilUtilizationLimitToken0; // x = totalSupply - totalBorrow / maxUtilizationPercentage\\n        uint withdrawableUntilUtilizationLimitToken1;\\n        uint borrowableUntilUtilizationLimitToken0; // x = maxUtilizationPercentage * totalSupply - totalBorrow.\\n        uint borrowableUntilUtilizationLimitToken1;\\n        // additional liquidity related data such as supply amount, limits, expansion etc.\\n        FluidLiquidityResolverStructs.UserSupplyData liquidityUserSupplyDataToken0;\\n        FluidLiquidityResolverStructs.UserSupplyData liquidityUserSupplyDataToken1;\\n        // additional liquidity related data such as borrow amount, limits, expansion etc.\\n        FluidLiquidityResolverStructs.UserBorrowData liquidityUserBorrowDataToken0;\\n        FluidLiquidityResolverStructs.UserBorrowData liquidityUserBorrowDataToken1;\\n        // liquidity token related data\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData0;\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData1;\\n    }\\n\\n    struct DexEntireData {\\n        address dex;\\n        IFluidDexT1.ConstantViews constantViews;\\n        IFluidDexT1.ConstantViews2 constantViews2;\\n        Configs configs;\\n        IFluidDexT1.PricesAndExchangePrice pex;\\n        IFluidDexT1.CollateralReserves colReserves;\\n        IFluidDexT1.DebtReserves debtReserves;\\n        DexState dexState;\\n        SwapLimitsAndAvailability limitsAndAvailability;\\n    }\\n\\n    // amounts are always in normal (for withInterest already multiplied with exchange price)\\n    struct UserSupplyData {\\n        bool isAllowed;\\n        uint256 supply; // user supply amount/shares\\n        // the withdrawal limit (e.g. if 10% is the limit, and 100M is supplied, it would be 90M)\\n        uint256 withdrawalLimit;\\n        uint256 lastUpdateTimestamp;\\n        uint256 expandPercent; // withdrawal limit expand percent in 1e2\\n        uint256 expandDuration; // withdrawal limit expand duration in seconds\\n        uint256 baseWithdrawalLimit;\\n        // the current actual max withdrawable amount (e.g. if 10% is the limit, and 100M is supplied, it would be 10M)\\n        uint256 withdrawableUntilLimit;\\n        uint256 withdrawable; // actual currently withdrawable amount (supply - withdrawal Limit) & considering balance\\n        // liquidity related data such as supply amount, limits, expansion etc.\\n        FluidLiquidityResolverStructs.UserSupplyData liquidityUserSupplyDataToken0;\\n        FluidLiquidityResolverStructs.UserSupplyData liquidityUserSupplyDataToken1;\\n        // liquidity token related data\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData0;\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData1;\\n    }\\n\\n    // amounts are always in normal (for withInterest already multiplied with exchange price)\\n    struct UserBorrowData {\\n        bool isAllowed;\\n        uint256 borrow; // user borrow amount/shares\\n        uint256 borrowLimit;\\n        uint256 lastUpdateTimestamp;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseBorrowLimit;\\n        uint256 maxBorrowLimit;\\n        uint256 borrowableUntilLimit; // borrowable amount until any borrow limit (incl. max utilization limit)\\n        uint256 borrowable; // actual currently borrowable amount (borrow limit - already borrowed) & considering balance, max utilization\\n        // liquidity related data such as borrow amount, limits, expansion etc.\\n        FluidLiquidityResolverStructs.UserBorrowData liquidityUserBorrowDataToken0;\\n        FluidLiquidityResolverStructs.UserBorrowData liquidityUserBorrowDataToken1;\\n        // liquidity token related data\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData0;\\n        FluidLiquidityResolverStructs.OverallTokenData liquidityTokenData1;\\n    }\\n}\\n\",\"keccak256\":\"0xfa43d3fbca40d4b4674f37c46092c45a509d6fc846129c3fb461d5e9b74545e6\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/dex/variables.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IFluidLiquidityResolver } from \\\"../liquidity/iLiquidityResolver.sol\\\";\\nimport { IFluidDexFactory } from \\\"../../../protocols/dex/interfaces/iDexFactory.sol\\\";\\n\\ninterface IFluidLiquidity {\\n    function readFromStorage(bytes32 slot_) external view returns (uint256 result_);\\n}\\n\\nabstract contract Variables {\\n    IFluidDexFactory public immutable FACTORY;\\n    IFluidLiquidity public immutable LIQUIDITY;\\n    IFluidLiquidityResolver public immutable LIQUIDITY_RESOLVER;\\n    /// @dev Address of contract used for deploying center price & hook related contract\\n    address public immutable DEPLOYER_CONTRACT;\\n\\n    uint256 internal constant X2 = 0x3;\\n    uint256 internal constant X3 = 0x7;\\n    uint256 internal constant X5 = 0x1f;\\n    uint256 internal constant X7 = 0x7f;\\n    uint256 internal constant X8 = 0xff;\\n    uint256 internal constant X9 = 0x1ff;\\n    uint256 internal constant X10 = 0x3ff;\\n    uint256 internal constant X11 = 0x7ff;\\n    uint256 internal constant X14 = 0x3fff;\\n    uint256 internal constant X16 = 0xffff;\\n    uint256 internal constant X17 = 0x1ffff;\\n    uint256 internal constant X20 = 0xfffff;\\n    uint256 internal constant X22 = 0x3fffff;\\n    uint256 internal constant X23 = 0x7fffff;\\n    uint256 internal constant X24 = 0xffffff;\\n    uint256 internal constant X28 = 0xfffffff;\\n    uint256 internal constant X30 = 0x3fffffff;\\n    uint256 internal constant X32 = 0xffffffff;\\n    uint256 internal constant X33 = 0x1ffffffff;\\n    uint256 internal constant X40 = 0xffffffffff;\\n    uint256 internal constant X64 = 0xffffffffffffffff;\\n    uint256 internal constant X128 = 0xffffffffffffffffffffffffffffffff;\\n\\n    /// @dev address that is mapped to the chain native token\\n    address internal constant NATIVE_TOKEN_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    constructor(address factory_, address liquidity_, address liquidityResolver_, address deployer_) {\\n        FACTORY = IFluidDexFactory(factory_);\\n        LIQUIDITY = IFluidLiquidity(liquidity_);\\n        LIQUIDITY_RESOLVER = IFluidLiquidityResolver(liquidityResolver_);\\n        DEPLOYER_CONTRACT = deployer_;\\n    }\\n}\\n\",\"keccak256\":\"0xe8f2a7445a2dae1a6e7e950110e8a626022b1cc980d3be129a82deacaa1b46f5\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/liquidity/iLiquidityResolver.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\nimport { Structs as LiquidityStructs } from \\\"../../../periphery/resolvers/liquidity/structs.sol\\\";\\n\\ninterface IFluidLiquidityResolver {\\n    /// @notice gets the `revenueAmount_` for a `token_`.\\n    function getRevenue(address token_) external view returns (uint256 revenueAmount_);\\n\\n    /// @notice address of contract that gets sent the revenue. Configurable by governance\\n    function getRevenueCollector() external view returns (address);\\n\\n    /// @notice Liquidity contract paused status: status = 1 -> normal. status = 2 -> paused.\\n    function getStatus() external view returns (uint256);\\n\\n    /// @notice checks if `auth_` is an allowed auth on Liquidity.\\n    /// Auths can set most config values. E.g. contracts that automate certain flows like e.g. adding a new fToken.\\n    /// Governance can add/remove auths. Governance is auth by default.\\n    function isAuth(address auth_) external view returns (uint256);\\n\\n    /// @notice checks if `guardian_` is an allowed Guardian on Liquidity.\\n    /// Guardians can pause lower class users.\\n    /// Governance can add/remove guardians. Governance is guardian by default.\\n    function isGuardian(address guardian_) external view returns (uint256);\\n\\n    /// @notice gets user class for `user_`. Class defines which protocols can be paused by guardians.\\n    /// Currently there are 2 classes: 0 can be paused by guardians. 1 cannot be paused by guardians.\\n    /// New protocols are added as class 0 and will be upgraded to 1 over time.\\n    function getUserClass(address user_) external view returns (uint256);\\n\\n    /// @notice gets exchangePricesAndConfig packed uint256 storage slot for `token_`.\\n    function getExchangePricesAndConfig(address token_) external view returns (uint256);\\n\\n    /// @notice gets rateConfig packed uint256 storage slot for `token_`.\\n    function getRateConfig(address token_) external view returns (uint256);\\n\\n    /// @notice gets totalAmounts packed uint256 storage slot for `token_`.\\n    function getTotalAmounts(address token_) external view returns (uint256);\\n\\n    /// @notice gets configs2 packed uint256 storage slot for `token_`.\\n    function getConfigs2(address token_) external view returns (uint256);\\n\\n    /// @notice gets userSupply data packed uint256 storage slot for `user_` and `token_`.\\n    function getUserSupply(address user_, address token_) external view returns (uint256);\\n\\n    /// @notice gets userBorrow data packed uint256 storage slot for `user_` and `token_`.\\n    function getUserBorrow(address user_, address token_) external view returns (uint256);\\n\\n    /// @notice returns all `listedTokens_` at the Liquidity contract. Once configured, a token can never be removed.\\n    function listedTokens() external view returns (address[] memory listedTokens_);\\n\\n    /// @notice get the Rate config data `rateData_` for a `token_` compiled from the packed uint256 rateConfig storage slot\\n    function getTokenRateData(address token_) external view returns (LiquidityStructs.RateData memory rateData_);\\n\\n    /// @notice get the Rate config datas `rateDatas_` for multiple `tokens_` compiled from the packed uint256 rateConfig storage slot\\n    function getTokensRateData(\\n        address[] calldata tokens_\\n    ) external view returns (LiquidityStructs.RateData[] memory rateDatas_);\\n\\n    /// @notice returns general data for `token_` such as rates, exchange prices, utilization, fee, total amounts etc.\\n    function getOverallTokenData(\\n        address token_\\n    ) external view returns (LiquidityStructs.OverallTokenData memory overallTokenData_);\\n\\n    /// @notice returns general data for multiple `tokens_` such as rates, exchange prices, utilization, fee, total amounts etc.\\n    function getOverallTokensData(\\n        address[] calldata tokens_\\n    ) external view returns (LiquidityStructs.OverallTokenData[] memory overallTokensData_);\\n\\n    /// @notice returns general data for all `listedTokens()` such as rates, exchange prices, utilization, fee, total amounts etc.\\n    function getAllOverallTokensData()\\n        external\\n        view\\n        returns (LiquidityStructs.OverallTokenData[] memory overallTokensData_);\\n\\n    /// @notice returns `user_` supply data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for `token_`\\n    function getUserSupplyData(\\n        address user_,\\n        address token_\\n    )\\n        external\\n        view\\n        returns (\\n            LiquidityStructs.UserSupplyData memory userSupplyData_,\\n            LiquidityStructs.OverallTokenData memory overallTokenData_\\n        );\\n\\n    /// @notice returns `user_` supply data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for multiple `tokens_`\\n    function getUserMultipleSupplyData(\\n        address user_,\\n        address[] calldata tokens_\\n    )\\n        external\\n        view\\n        returns (\\n            LiquidityStructs.UserSupplyData[] memory userSuppliesData_,\\n            LiquidityStructs.OverallTokenData[] memory overallTokensData_\\n        );\\n\\n    /// @notice returns `user_` borrow data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for `token_`\\n    function getUserBorrowData(\\n        address user_,\\n        address token_\\n    )\\n        external\\n        view\\n        returns (\\n            LiquidityStructs.UserBorrowData memory userBorrowData_,\\n            LiquidityStructs.OverallTokenData memory overallTokenData_\\n        );\\n\\n    /// @notice returns `user_` borrow data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for multiple `tokens_`\\n    function getUserMultipleBorrowData(\\n        address user_,\\n        address[] calldata tokens_\\n    )\\n        external\\n        view\\n        returns (\\n            LiquidityStructs.UserBorrowData[] memory userBorrowingsData_,\\n            LiquidityStructs.OverallTokenData[] memory overallTokensData_\\n        );\\n\\n    /// @notice returns `user_` supply data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for multiple `supplyTokens_`\\n    ///     and returns `user_` borrow data and general data (such as rates, exchange prices, utilization, fee, total amounts etc.) for multiple `borrowTokens_`\\n    function getUserMultipleBorrowSupplyData(\\n        address user_,\\n        address[] calldata supplyTokens_,\\n        address[] calldata borrowTokens_\\n    )\\n        external\\n        view\\n        returns (\\n            LiquidityStructs.UserSupplyData[] memory userSuppliesData_,\\n            LiquidityStructs.OverallTokenData[] memory overallSupplyTokensData_,\\n            LiquidityStructs.UserBorrowData[] memory userBorrowingsData_,\\n            LiquidityStructs.OverallTokenData[] memory overallBorrowTokensData_\\n        );\\n}\\n\",\"keccak256\":\"0x241d94b63793c9fb2111bb4ec04035e1fa14ee7e0551683ea05460baa6000189\",\"license\":\"MIT\"},\"contracts/periphery/resolvers/liquidity/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Structs as AdminModuleStructs } from \\\"../../../liquidity/adminModule/structs.sol\\\";\\n\\nabstract contract Structs {\\n    struct RateData {\\n        uint256 version;\\n        AdminModuleStructs.RateDataV1Params rateDataV1;\\n        AdminModuleStructs.RateDataV2Params rateDataV2;\\n    }\\n\\n    struct OverallTokenData {\\n        uint256 borrowRate;\\n        uint256 supplyRate;\\n        uint256 fee; // revenue fee\\n        uint256 lastStoredUtilization;\\n        uint256 storageUpdateThreshold;\\n        uint256 lastUpdateTimestamp;\\n        uint256 supplyExchangePrice;\\n        uint256 borrowExchangePrice;\\n        uint256 supplyRawInterest;\\n        uint256 supplyInterestFree;\\n        uint256 borrowRawInterest;\\n        uint256 borrowInterestFree;\\n        uint256 totalSupply;\\n        uint256 totalBorrow;\\n        uint256 revenue;\\n        uint256 maxUtilization; // maximum allowed utilization\\n        RateData rateData;\\n    }\\n\\n    // amounts are always in normal (for withInterest already multiplied with exchange price)\\n    struct UserSupplyData {\\n        bool modeWithInterest; // true if mode = with interest, false = without interest\\n        uint256 supply; // user supply amount\\n        // the withdrawal limit (e.g. if 10% is the limit, and 100M is supplied, it would be 90M)\\n        uint256 withdrawalLimit;\\n        uint256 lastUpdateTimestamp;\\n        uint256 expandPercent; // withdrawal limit expand percent in 1e2\\n        uint256 expandDuration; // withdrawal limit expand duration in seconds\\n        uint256 baseWithdrawalLimit;\\n        // the current actual max withdrawable amount (e.g. if 10% is the limit, and 100M is supplied, it would be 10M)\\n        uint256 withdrawableUntilLimit;\\n        uint256 withdrawable; // actual currently withdrawable amount (supply - withdrawal Limit) & considering balance\\n    }\\n\\n    // amounts are always in normal (for withInterest already multiplied with exchange price)\\n    struct UserBorrowData {\\n        bool modeWithInterest; // true if mode = with interest, false = without interest\\n        uint256 borrow; // user borrow amount\\n        uint256 borrowLimit;\\n        uint256 lastUpdateTimestamp;\\n        uint256 expandPercent;\\n        uint256 expandDuration;\\n        uint256 baseBorrowLimit;\\n        uint256 maxBorrowLimit;\\n        uint256 borrowableUntilLimit; // borrowable amount until any borrow limit (incl. max utilization limit)\\n        uint256 borrowable; // actual currently borrowable amount (borrow limit - already borrowed) & considering balance, max utilization\\n        uint256 borrowLimitUtilization; // borrow limit for `maxUtilization`\\n    }\\n}\\n\",\"keccak256\":\"0xf8a59b6c7963d0bd43be07db0c594e278f97e6dfa498dee8436e3707dd9f574e\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/smartLending/main.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IERC20 } from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport { FluidDexResolver } from \\\"../dex/main.sol\\\";\\nimport { FluidSmartLendingFactory } from \\\"../../../protocols/dex/smartLending/factory/main.sol\\\";\\nimport { FluidSmartLending } from \\\"../../../protocols/dex/smartLending/main.sol\\\";\\nimport { Structs } from \\\"./structs.sol\\\";\\nimport { Structs as DexResolverStructs } from \\\"../dex/structs.sol\\\";\\n\\n/// @notice Fluid Smart Lending resolver\\n/// Implements various view-only methods to give easy access to Smart Lending protocol data.\\ncontract FluidSmartLendingResolver is Structs {\\n    uint256 internal constant SECONDS_PER_YEAR = 365 days;\\n\\n    FluidDexResolver public immutable DEX_RESOLVER;\\n\\n    FluidSmartLendingFactory public immutable SMART_LENDING_FACTORY;\\n\\n    address internal constant _NATIVE_TOKEN_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    /// @notice thrown if an input param address is zero\\n    error FluidSmartLendingResolver__AddressZero();\\n\\n    constructor(FluidDexResolver dexResolver_, FluidSmartLendingFactory smartLendingFactory_) {\\n        if (address(dexResolver_) == address(0) || address(smartLendingFactory_) == address(0)) {\\n            revert FluidSmartLendingResolver__AddressZero();\\n        }\\n\\n        DEX_RESOLVER = dexResolver_;\\n        SMART_LENDING_FACTORY = smartLendingFactory_;\\n    }\\n\\n    /// @notice List of all existing SmartLending tokens\\n    function getAllSmartLendingAddresses() public view returns (address[] memory) {\\n        return SMART_LENDING_FACTORY.allTokens();\\n    }\\n\\n    /// @notice Get the address of a SmartLending for a certain dexId. address zero if no SmartLending exists for the dex.\\n    function getSmartLendingAddress(uint dexId_) public view returns (address smartLending) {\\n        return SMART_LENDING_FACTORY.getSmartLendingAddress(dexId_);\\n    }\\n\\n    /// @notice Get the entire data for a SmartLending, EXCEPT underlying DexEntireData. use write method for that.\\n    /// @param smartLending_ The address of the SmartLending\\n    /// @return data_ A struct containing all the data for the SmartLending\\n    function getSmartLendingEntireViewData(\\n        address payable smartLending_\\n    ) public view returns (SmartLendingEntireData memory data_) {\\n        data_.smartLending = smartLending_;\\n        data_.name = FluidSmartLending(smartLending_).name();\\n        data_.symbol = FluidSmartLending(smartLending_).symbol();\\n        data_.decimals = 18;\\n        data_.totalSupply = uint256(FluidSmartLending(smartLending_).totalSupply());\\n\\n        data_.token0 = FluidSmartLending(smartLending_).TOKEN0();\\n        data_.token1 = FluidSmartLending(smartLending_).TOKEN1();\\n        data_.dex = address(FluidSmartLending(smartLending_).DEX());\\n\\n        data_.lastTimestamp = uint256(FluidSmartLending(smartLending_).lastTimestamp());\\n        data_.feeOrReward = int256(FluidSmartLending(smartLending_).feeOrReward());\\n        (data_.exchangePrice, ) = FluidSmartLending(smartLending_).getUpdateExchangePrice();\\n        // exchangePrice is in 1e18, shares are in 1e18, SmartLending is in 1e18\\n        data_.assetsPerShare = (1e18 * 1e18) / data_.exchangePrice;\\n        data_.sharesPerAsset = data_.exchangePrice; // just providing same value for extra clarity. would be 1e18 * exchangePrice / 1e18\\n\\n        data_.totalUnderlyingShares = (data_.totalSupply * data_.exchangePrice) / 1e18;\\n\\n        data_.rebalancer = FluidSmartLending(smartLending_).rebalancer();\\n        data_.rebalanceDiff = uint256(FluidSmartLending(smartLending_).rebalanceDiff());\\n\\n        data_.dexUserSupplyData = DEX_RESOLVER.getUserSupplyData(data_.dex, smartLending_);\\n    }\\n\\n    /// @notice Get the entire view data for multiple SmartLendings, EXCEPT underlying DexEntireData. use write method for that.\\n    /// @param smartLendings_ An array of SmartLending addresses\\n    /// @return datas_ An array of structs containing all the data for each SmartLending\\n    function getSmartLendingEntireViewDatas(\\n        address[] memory smartLendings_\\n    ) public view returns (SmartLendingEntireData[] memory datas_) {\\n        uint256 length_ = smartLendings_.length;\\n        datas_ = new SmartLendingEntireData[](length_);\\n\\n        for (uint256 i; i < length_; i++) {\\n            datas_[i] = getSmartLendingEntireViewData(payable(smartLendings_[i]));\\n        }\\n    }\\n\\n    /// @notice Get the entire data for all SmartLendings, EXCEPT underlying DexEntireData. use write method for that.\\n    /// @return datas_ An array of structs containing all the data for all SmartLendings\\n    function getAllSmartLendingEntireViewDatas() public view returns (SmartLendingEntireData[] memory datas_) {\\n        return getSmartLendingEntireViewDatas(getAllSmartLendingAddresses());\\n    }\\n\\n    /// @notice Get the entire data for a SmartLending, incl. underlying DexEntireData and totalUnderlyingAssets for each token\\n    /// @param smartLending_ The address of the SmartLending\\n    /// @return data_ A struct containing all the data for the SmartLending\\n    /// @dev expected to be called via callStatic\\n    function getSmartLendingEntireData(\\n        address payable smartLending_\\n    ) public returns (SmartLendingEntireData memory data_) {\\n        data_ = getSmartLendingEntireViewData(smartLending_);\\n\\n        data_.dexEntireData = DEX_RESOLVER.getDexEntireData(data_.dex);\\n\\n        data_.totalUnderlyingAssetsToken0 =\\n            (data_.totalUnderlyingShares * data_.dexEntireData.dexState.token0PerSupplyShare) /\\n            1e18;\\n        data_.totalUnderlyingAssetsToken1 =\\n            (data_.totalUnderlyingShares * data_.dexEntireData.dexState.token1PerSupplyShare) /\\n            1e18;\\n    }\\n\\n    /// @notice Get the entire data for multiple SmartLendings\\n    /// @param smartLendings_ An array of SmartLending addresses\\n    /// @return datas_ An array of structs containing all the data for each SmartLending\\n    /// @dev expected to be called via callStatic\\n    function getSmartLendingEntireDatas(\\n        address[] memory smartLendings_\\n    ) public returns (SmartLendingEntireData[] memory datas_) {\\n        uint256 length_ = smartLendings_.length;\\n        datas_ = new SmartLendingEntireData[](length_);\\n\\n        for (uint256 i; i < length_; i++) {\\n            datas_[i] = getSmartLendingEntireData(payable(smartLendings_[i]));\\n        }\\n    }\\n\\n    /// @notice Get the entire data for all SmartLendings\\n    /// @return datas_ An array of structs containing all the data for all SmartLendings\\n    /// @dev expected to be called via callStatic\\n    function getAllSmartLendingEntireDatas() public returns (SmartLendingEntireData[] memory datas_) {\\n        return getSmartLendingEntireDatas(getAllSmartLendingAddresses());\\n    }\\n\\n    /// @notice gets a user position at a certain SmartLending. EXCLUDING underlyingAssetsToken0 and underlyingAssetsToken1.\\n    ///          use write method for that.\\n    function getUserPositionView(\\n        address payable smartLending_,\\n        address user_\\n    ) public view returns (UserPosition memory userPosition_) {\\n        userPosition_.user = user_;\\n        userPosition_.smartLendingAssets = FluidSmartLending(payable(smartLending_)).balanceOf(user_);\\n\\n        {\\n            (uint256 exchangePrice_, ) = FluidSmartLending(smartLending_).getUpdateExchangePrice();\\n            userPosition_.underlyingShares = (userPosition_.smartLendingAssets * exchangePrice_) / 1e18;\\n        }\\n\\n        {\\n            IERC20 token0_ = IERC20(FluidSmartLending(smartLending_).TOKEN0());\\n            IERC20 token1_ = IERC20(FluidSmartLending(smartLending_).TOKEN1());\\n\\n            if (address(token0_) == _NATIVE_TOKEN_ADDRESS) {\\n                userPosition_.underlyingBalanceToken0 = address(user_).balance;\\n            } else {\\n                userPosition_.underlyingBalanceToken0 = token0_.balanceOf(user_);\\n                userPosition_.allowanceToken0 = token0_.allowance(user_, address(smartLending_));\\n            }\\n\\n            if (address(token1_) == _NATIVE_TOKEN_ADDRESS) {\\n                userPosition_.underlyingBalanceToken1 = address(user_).balance;\\n            } else {\\n                userPosition_.underlyingBalanceToken1 = token1_.balanceOf(user_);\\n                userPosition_.allowanceToken1 = token1_.allowance(user_, address(smartLending_));\\n            }\\n        }\\n    }\\n\\n    /// @notice gets a user position at a certain SmartLending incl. underlyingAssetsToken0 and underlyingAssetsToken1\\n    /// @dev expected to be called via callStatic\\n    function getUserPosition(\\n        address payable smartLending_,\\n        address user_\\n    ) public returns (UserPosition memory userPosition_) {\\n        userPosition_ = getUserPositionView(smartLending_, user_);\\n\\n        {\\n            DexResolverStructs.DexState memory dexState_ = DEX_RESOLVER.getDexState(\\n                address(FluidSmartLending(smartLending_).DEX())\\n            );\\n\\n            userPosition_.underlyingAssetsToken0 =\\n                (userPosition_.underlyingShares * dexState_.token0PerSupplyShare) /\\n                1e18;\\n            userPosition_.underlyingAssetsToken1 =\\n                (userPosition_.underlyingShares * dexState_.token1PerSupplyShare) /\\n                1e18;\\n        }\\n    }\\n\\n    /// @notice gets all Smart lendings entire data and all user positions for each.\\n    ///         Excluding underlying DexEntireData and underlyingAssetsToken0 and underlyingAssetsToken1. use write method for that.\\n    function getUserPositionsView(address user_) external view returns (SmartLendingEntireDataUserPosition[] memory) {\\n        SmartLendingEntireData[] memory smartLendingsEntireData_ = getAllSmartLendingEntireViewDatas();\\n        SmartLendingEntireDataUserPosition[] memory userPositionArr_ = new SmartLendingEntireDataUserPosition[](\\n            smartLendingsEntireData_.length\\n        );\\n        for (uint256 i = 0; i < smartLendingsEntireData_.length; ) {\\n            userPositionArr_[i].smartLendingEntireData = smartLendingsEntireData_[i];\\n            userPositionArr_[i].userPosition = getUserPositionView(\\n                payable(smartLendingsEntireData_[i].smartLending),\\n                user_\\n            );\\n            unchecked {\\n                i++;\\n            }\\n        }\\n        return userPositionArr_;\\n    }\\n\\n    /// @notice gets all Smart lendings entire data and all user positions for each.\\n    ///         incl. underlying Dex (=`getSmartLendingEntireViewData()` + DexEntireData) and underlyingAssetsToken0 and underlyingAssetsToken1.\\n    /// @dev expected to be called via callStatic\\n    function getUserPositions(address user_) external returns (SmartLendingEntireDataUserPosition[] memory) {\\n        SmartLendingEntireData[] memory smartLendingsEntireData_ = getAllSmartLendingEntireDatas();\\n        SmartLendingEntireDataUserPosition[] memory userPositionArr_ = new SmartLendingEntireDataUserPosition[](\\n            smartLendingsEntireData_.length\\n        );\\n        for (uint256 i = 0; i < smartLendingsEntireData_.length; ) {\\n            userPositionArr_[i].smartLendingEntireData = smartLendingsEntireData_[i];\\n            userPositionArr_[i].userPosition = getUserPosition(\\n                payable(smartLendingsEntireData_[i].smartLending),\\n                user_\\n            );\\n            unchecked {\\n                i++;\\n            }\\n        }\\n        return userPositionArr_;\\n    }\\n}\\n\",\"keccak256\":\"0xc86c3004adcc182ff7711be7039f78568e88824500eb3681a295b6a3ef374e37\",\"license\":\"BUSL-1.1\"},\"contracts/periphery/resolvers/smartLending/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Structs as DexResolverStructs } from \\\"../dex/structs.sol\\\";\\n\\nabstract contract Structs {\\n    struct SmartLendingEntireData {\\n        // address of the smart lending\\n        address smartLending;\\n        // The name of the SmartLending token.\\n        string name;\\n        // The symbol of the SmartLending token.\\n        string symbol;\\n        // The number of decimal places for the SmartLending token.\\n        uint8 decimals;\\n        // The total supply of the SmartLending token.\\n        uint256 totalSupply;\\n        // total dex shares according to smart lending exchange rate\\n        uint256 totalUnderlyingShares;\\n        // total token0 amount built with dex token0PerSupplyShare. (!!) this is not set when calling the view method\\n        uint256 totalUnderlyingAssetsToken0;\\n        // total token1 amount built with dex token1PerSupplyShare. (!!) this is not set when calling the view method\\n        uint256 totalUnderlyingAssetsToken1;\\n        // The address of the first token in the underlying dex pool.\\n        address token0;\\n        // The address of the second token in the underlying dex pool.\\n        address token1;\\n        // The address of the underlying dex pool.\\n        address dex;\\n        // The last timestamp when the exchange price was updated in storage.\\n        uint256 lastTimestamp;\\n        // The fee or reward rate for the SmartLending. If positive then rewards, if negative then fee. 1e6 = 100%, 1e4 = 1%, minimum 0.0001% fee or reward.\\n        int256 feeOrReward;\\n        // The current exchange price of the SmartLending updated to block.timestamp.\\n        uint256 exchangePrice;\\n        // The address of the rebalancer.\\n        address rebalancer;\\n        // exchange rate for x assets per 1 underlying pool share\\n        uint256 assetsPerShare;\\n        // exchange rate for x underlying pool shares per 1 SmartLending asset (=exchangePrice)\\n        uint256 sharesPerAsset;\\n        // The difference in balance for rebalancing. difference between the total smart lending shares on the DEX and the total smart lending shares calculated.\\n        // A positive value indicates fees to collect, while a negative value indicates rewards to be rebalanced.\\n        uint256 rebalanceDiff;\\n        // structs fetched directly from DexResolver:\\n        DexResolverStructs.DexEntireData dexEntireData; // (!!) this is not set when calling the view method\\n        DexResolverStructs.UserSupplyData dexUserSupplyData; // supply data of the SmartLending at the dex\\n    }\\n\\n    struct UserPosition {\\n        address user;\\n        uint256 smartLendingAssets; // ERC20 smart lending assets that the user owns\\n        uint256 underlyingShares; // dex shares according to smart lending exchange rate\\n        uint256 underlyingAssetsToken0; // position token0 amount built with dex token0PerSupplyShare. (!!) this is not set when calling the view method\\n        uint256 underlyingAssetsToken1; // position token1 amount built with dex token1PerSupplyShare. (!!) this is not set when calling the view method\\n        uint256 underlyingBalanceToken0; // token0 user balance\\n        uint256 underlyingBalanceToken1; // token1 user balance\\n        uint256 allowanceToken0; // allowance of token0 for user to the smartLending\\n        uint256 allowanceToken1; // allowance of token1 for user to the smartLending\\n    }\\n\\n    struct SmartLendingEntireDataUserPosition {\\n        SmartLendingEntireData smartLendingEntireData;\\n        UserPosition userPosition;\\n    }\\n}\\n\",\"keccak256\":\"0x64d91edec9c8d70f90586bcf679ca8f588a35360da63eb068de15dbce8b12c62\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/error.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Structs } from \\\"./poolT1/coreModule/structs.sol\\\";\\n\\nabstract contract Error {\\n    error FluidDexError(uint256 errorId_);\\n\\n    error FluidDexFactoryError(uint256 errorId);\\n\\n    /// @notice used to simulate swap to find the output amount\\n    error FluidDexSwapResult(uint256 amountOut);\\n\\n    error FluidDexPerfectLiquidityOutput(uint256 token0Amt, uint token1Amt);\\n\\n    error FluidDexSingleTokenOutput(uint256 tokenAmt);\\n\\n    error FluidDexLiquidityOutput(uint256 shares_);\\n\\n    error FluidDexPricesAndExchangeRates(Structs.PricesAndExchangePrice pex_);\\n\\n    error FluidSmartLendingError(uint256 errorId_);\\n\\n    error FluidSmartLendingFactoryError(uint256 errorId_);\\n}\\n\",\"keccak256\":\"0xd202c2cd2ca431bf8dd745a11f771573a480f92cddfce492202e2b21b248ff50\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/errorTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nlibrary ErrorTypes {\\n    /***********************************|\\n    |             DexT1                 | \\n    |__________________________________*/\\n\\n    /// @notice thrown at reentrancy\\n    uint256 internal constant DexT1__AlreadyEntered = 51001;\\n\\n    uint256 internal constant DexT1__NotAnAuth = 51002;\\n\\n    uint256 internal constant DexT1__SmartColNotEnabled = 51003;\\n\\n    uint256 internal constant DexT1__SmartDebtNotEnabled = 51004;\\n\\n    uint256 internal constant DexT1__PoolNotInitialized = 51005;\\n\\n    uint256 internal constant DexT1__TokenReservesTooLow = 51006;\\n\\n    uint256 internal constant DexT1__EthAndAmountInMisMatch = 51007;\\n\\n    uint256 internal constant DexT1__EthSentForNonNativeSwap = 51008;\\n\\n    uint256 internal constant DexT1__NoSwapRoute = 51009;\\n\\n    uint256 internal constant DexT1__NotEnoughAmountOut = 51010;\\n\\n    uint256 internal constant DexT1__LiquidityLayerTokenUtilizationCapReached = 51011;\\n\\n    uint256 internal constant DexT1__HookReturnedFalse = 51012;\\n\\n    // Either user's config are not set or user is paused\\n    uint256 internal constant DexT1__UserSupplyInNotOn = 51013;\\n\\n    // Either user's config are not set or user is paused\\n    uint256 internal constant DexT1__UserDebtInNotOn = 51014;\\n\\n    // Thrown when contract asks for more token0 or token1 than what user's wants to give on deposit\\n    uint256 internal constant DexT1__AboveDepositMax = 51015;\\n\\n    uint256 internal constant DexT1__MsgValueLowOnDepositOrPayback = 51016;\\n\\n    uint256 internal constant DexT1__WithdrawLimitReached = 51017;\\n\\n    // Thrown when contract gives less token0 or token1 than what user's wants on withdraw\\n    uint256 internal constant DexT1__BelowWithdrawMin = 51018;\\n\\n    uint256 internal constant DexT1__DebtLimitReached = 51019;\\n\\n    // Thrown when contract gives less token0 or token1 than what user's wants on borrow\\n    uint256 internal constant DexT1__BelowBorrowMin = 51020;\\n\\n    // Thrown when contract asks for more token0 or token1 than what user's wants on payback\\n    uint256 internal constant DexT1__AbovePaybackMax = 51021;\\n\\n    uint256 internal constant DexT1__InvalidDepositAmts = 51022;\\n\\n    uint256 internal constant DexT1__DepositAmtsZero = 51023;\\n\\n    uint256 internal constant DexT1__SharesMintedLess = 51024;\\n\\n    uint256 internal constant DexT1__WithdrawalNotEnough = 51025;\\n\\n    uint256 internal constant DexT1__InvalidWithdrawAmts = 51026;\\n\\n    uint256 internal constant DexT1__WithdrawAmtsZero = 51027;\\n\\n    uint256 internal constant DexT1__WithdrawExcessSharesBurn = 51028;\\n\\n    uint256 internal constant DexT1__InvalidBorrowAmts = 51029;\\n\\n    uint256 internal constant DexT1__BorrowAmtsZero = 51030;\\n\\n    uint256 internal constant DexT1__BorrowExcessSharesMinted = 51031;\\n\\n    uint256 internal constant DexT1__PaybackAmtTooHigh = 51032;\\n\\n    uint256 internal constant DexT1__InvalidPaybackAmts = 51033;\\n\\n    uint256 internal constant DexT1__PaybackAmtsZero = 51034;\\n\\n    uint256 internal constant DexT1__PaybackSharedBurnedLess = 51035;\\n\\n    uint256 internal constant DexT1__NothingToArbitrage = 51036;\\n\\n    uint256 internal constant DexT1__MsgSenderNotLiquidity = 51037;\\n\\n    // On liquidity callback reentrancy bit should be on\\n    uint256 internal constant DexT1__ReentrancyBitShouldBeOn = 51038;\\n\\n    // Thrown is reentrancy is already on and someone tries to fetch oracle price. Should not be possible to this\\n    uint256 internal constant DexT1__OraclePriceFetchAlreadyEntered = 51039;\\n\\n    // Thrown when swap changes the current price by more than 5%\\n    uint256 internal constant DexT1__OracleUpdateHugeSwapDiff = 51040;\\n\\n    uint256 internal constant DexT1__Token0ShouldBeSmallerThanToken1 = 51041;\\n\\n    uint256 internal constant DexT1__OracleMappingOverflow = 51042;\\n\\n    /// @notice thrown if governance has paused the swapping & arbitrage so only perfect functions are usable\\n    uint256 internal constant DexT1__SwapAndArbitragePaused = 51043;\\n\\n    uint256 internal constant DexT1__ExceedsAmountInMax = 51044;\\n\\n    /// @notice thrown if amount in is too high or too low\\n    uint256 internal constant DexT1__SwapInLimitingAmounts = 51045;\\n\\n    /// @notice thrown if amount out is too high or too low\\n    uint256 internal constant DexT1__SwapOutLimitingAmounts = 51046;\\n\\n    uint256 internal constant DexT1__MintAmtOverflow = 51047;\\n\\n    uint256 internal constant DexT1__BurnAmtOverflow = 51048;\\n\\n    uint256 internal constant DexT1__LimitingAmountsSwapAndNonPerfectActions = 51049;\\n\\n    uint256 internal constant DexT1__InsufficientOracleData = 51050;\\n\\n    uint256 internal constant DexT1__SharesAmountInsufficient = 51051;\\n\\n    uint256 internal constant DexT1__CenterPriceOutOfRange = 51052;\\n\\n    uint256 internal constant DexT1__DebtReservesTooLow = 51053;\\n\\n    uint256 internal constant DexT1__SwapAndDepositTooLowOrTooHigh = 51054;\\n\\n    uint256 internal constant DexT1__WithdrawAndSwapTooLowOrTooHigh = 51055;\\n\\n    uint256 internal constant DexT1__BorrowAndSwapTooLowOrTooHigh = 51056;\\n\\n    uint256 internal constant DexT1__SwapAndPaybackTooLowOrTooHigh = 51057;\\n\\n    uint256 internal constant DexT1__InvalidImplementation = 51058;\\n\\n    uint256 internal constant DexT1__OnlyDelegateCallAllowed = 51059;\\n\\n    uint256 internal constant DexT1__IncorrectDataLength = 51060;\\n\\n    uint256 internal constant DexT1__AmountToSendLessThanAmount = 51061;\\n\\n    uint256 internal constant DexT1__InvalidCollateralReserves = 51062;\\n\\n    uint256 internal constant DexT1__InvalidDebtReserves = 51063;\\n\\n    uint256 internal constant DexT1__SupplySharesOverflow = 51064;\\n\\n    uint256 internal constant DexT1__BorrowSharesOverflow = 51065;\\n\\n    uint256 internal constant DexT1__OracleNotActive = 51066;\\n\\n    /***********************************|\\n    |            DEX Admin              | \\n    |__________________________________*/\\n\\n    /// @notice thrown when pool is not initialized\\n    uint256 internal constant DexT1Admin__PoolNotInitialized = 52001;\\n\\n    uint256 internal constant DexT1Admin__SmartColIsAlreadyOn = 52002;\\n\\n    uint256 internal constant DexT1Admin__SmartDebtIsAlreadyOn = 52003;\\n\\n    /// @notice thrown when any of the configs value overflow the maximum limit\\n    uint256 internal constant DexT1Admin__ConfigOverflow = 52004;\\n\\n    uint256 internal constant DexT1Admin__AddressNotAContract = 52005;\\n\\n    uint256 internal constant DexT1Admin__InvalidParams = 52006;\\n\\n    uint256 internal constant DexT1Admin__UserNotDefined = 52007;\\n\\n    uint256 internal constant DexT1Admin__OnlyDelegateCallAllowed = 52008;\\n\\n    uint256 internal constant DexT1Admin__UnexpectedPoolState = 52009;\\n\\n    /// @notice thrown when trying to pause or unpause but user is already in the target pause state\\n    uint256 internal constant DexT1Admin__InvalidPauseToggle = 52009;\\n\\n    /***********************************|\\n    |            DEX Factory            | \\n    |__________________________________*/\\n\\n    uint256 internal constant DexFactory__InvalidOperation = 53001;\\n    uint256 internal constant DexFactory__Unauthorized = 53002;\\n    uint256 internal constant DexFactory__SameTokenNotAllowed = 53003;\\n    uint256 internal constant DexFactory__TokenConfigNotProper = 53004;\\n    uint256 internal constant DexFactory__InvalidParams = 53005;\\n    uint256 internal constant DexFactory__OnlyDelegateCallAllowed = 53006;\\n    uint256 internal constant DexFactory__InvalidDexAddress = 53007;\\n\\n    /***********************************|\\n    |            Smart Lending          | \\n    |__________________________________*/\\n\\n    uint256 internal constant SmartLending__ZeroAddress = 54001;\\n    uint256 internal constant SmartLending__Unauthorized = 54002;\\n    uint256 internal constant SmartLending__InvalidMsgValue = 54003;\\n    uint256 internal constant SmartLending__OutOfRange = 54004;\\n    uint256 internal constant SmartLending__InvalidRebalancer = 54005;\\n    uint256 internal constant SmartLending__Reentrancy = 54006;\\n    uint256 internal constant SmartLending__InvalidAmounts = 54007;\\n\\n    /***********************************|\\n    |        Smart Lending Factory       | \\n    |__________________________________*/\\n\\n    uint256 internal constant SmartLendingFactory__ZeroAddress = 55001;\\n    uint256 internal constant SmartLendingFactory__Unauthorized = 55002;\\n    uint256 internal constant SmartLendingFactory__AlreadyDeployed = 55003;\\n    uint256 internal constant SmartLendingFactory__InvalidParams = 55004;\\n    uint256 internal constant SmartLendingFactory__InvalidOperation = 55005;\\n}\\n\",\"keccak256\":\"0xb02d949b87d641ce797c3bec65332e7b683260461d1656782301e75da3a60971\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/factory/main.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Owned } from \\\"solmate/src/auth/Owned.sol\\\";\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { Error } from \\\"../error.sol\\\";\\nimport { AddressCalcs } from \\\"../../../libraries/addressCalcs.sol\\\";\\nimport { StorageRead } from \\\"../../../libraries/storageRead.sol\\\";\\n\\nabstract contract DexFactoryVariables is Owned, StorageRead, Error {\\n    /*//////////////////////////////////////////////////////////////\\n                          STORAGE VARIABLES\\n    //////////////////////////////////////////////////////////////*/\\n\\n    // ------------ storage variables from inherited contracts (Owned) come before vars here --------\\n\\n    // ----------------------- slot 0 ---------------------------\\n    // address public owner; // from Owned\\n\\n    // 12 bytes empty\\n\\n    // ----------------------- slot 1  ---------------------------\\n    /// @dev deployer can deploy new Dex Pool contract\\n    /// owner can add/remove deployer.\\n    /// Owner is deployer by default.\\n    mapping(address => bool) internal _deployers;\\n\\n    // ----------------------- slot 2  ---------------------------\\n    /// @dev global auths can update any dex pool config.\\n    /// owner can add/remove global auths.\\n    /// Owner is global auth by default.\\n    mapping(address => bool) internal _globalAuths;\\n\\n    // ----------------------- slot 3  ---------------------------\\n    /// @dev dex auths can update specific dex config.\\n    /// owner can add/remove dex auths.\\n    /// Owner is dex auth by default.\\n    /// dex => auth => add/remove\\n    mapping(address => mapping(address => bool)) internal _dexAuths;\\n\\n    // ----------------------- slot 4 ---------------------------\\n    /// @dev total no of dexes deployed by the factory\\n    /// only addresses that have deployer role or owner can deploy new dex pool.\\n    uint256 internal _totalDexes;\\n\\n    // ----------------------- slot 5 ---------------------------\\n    /// @dev dex deployment logics for deploying dex pool\\n    /// These logic contracts hold the deployment logics of specific dexes and are called via .delegatecall inside deployDex().\\n    /// only addresses that have owner can add/remove new dex deployment logic.\\n    mapping(address => bool) internal _dexDeploymentLogics;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                          CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n    constructor(address owner_) Owned(owner_) {}\\n}\\n\\nabstract contract DexFactoryEvents {\\n    /// @dev Emitted when a new dex is deployed.\\n    /// @param dex The address of the newly deployed dex.\\n    /// @param dexId The id of the newly deployed dex.\\n    event LogDexDeployed(address indexed dex, uint256 indexed dexId);\\n\\n    /// @dev Emitted when the deployer is modified by owner.\\n    /// @param deployer Address whose deployer status is updated.\\n    /// @param allowed Indicates whether the address is authorized as a deployer or not.\\n    event LogSetDeployer(address indexed deployer, bool indexed allowed);\\n\\n    /// @dev Emitted when the globalAuth is modified by owner.\\n    /// @param globalAuth Address whose globalAuth status is updated.\\n    /// @param allowed Indicates whether the address is authorized as a deployer or not.\\n    event LogSetGlobalAuth(address indexed globalAuth, bool indexed allowed);\\n\\n    /// @dev Emitted when the dexAuth is modified by owner.\\n    /// @param dexAuth Address whose dexAuth status is updated.\\n    /// @param allowed Indicates whether the address is authorized as a deployer or not.\\n    /// @param dex Address of the specific dex related to the authorization change.\\n    event LogSetDexAuth(address indexed dexAuth, bool indexed allowed, address indexed dex);\\n\\n    /// @dev Emitted when the dex deployment logic is modified by owner.\\n    /// @param dexDeploymentLogic The address of the dex deployment logic contract.\\n    /// @param allowed  Indicates whether the address is authorized as a deployer or not.\\n    event LogSetDexDeploymentLogic(address indexed dexDeploymentLogic, bool indexed allowed);\\n}\\n\\nabstract contract DexFactoryCore is DexFactoryVariables, DexFactoryEvents {\\n    constructor(address owner_) validAddress(owner_) DexFactoryVariables(owner_) {}\\n\\n    /// @dev validates that an address is not the zero address\\n    modifier validAddress(address value_) {\\n        if (value_ == address(0)) {\\n            revert FluidDexFactoryError(ErrorTypes.DexFactory__InvalidParams);\\n        }\\n        _;\\n    }\\n}\\n\\n/// @dev Implements Dex Factory auth-only callable methods. Owner / auths can set various config values and\\n/// can define the allow-listed deployers.\\nabstract contract DexFactoryAuth is DexFactoryCore {\\n    /// @notice                         Sets an address (`deployer_`) as allowed deployer or not.\\n    ///                                 This function can only be called by the owner.\\n    /// @param deployer_                The address to be set as deployer.\\n    /// @param allowed_                 A boolean indicating whether the specified address is allowed to deploy dexes.\\n    function setDeployer(address deployer_, bool allowed_) external onlyOwner validAddress(deployer_) {\\n        _deployers[deployer_] = allowed_;\\n\\n        emit LogSetDeployer(deployer_, allowed_);\\n    }\\n\\n    /// @notice                         Sets an address (`globalAuth_`) as a global authorization or not.\\n    ///                                 This function can only be called by the owner.\\n    /// @param globalAuth_              The address to be set as global authorization.\\n    /// @param allowed_                 A boolean indicating whether the specified address is allowed to update any dex config.\\n    function setGlobalAuth(address globalAuth_, bool allowed_) external onlyOwner validAddress(globalAuth_) {\\n        _globalAuths[globalAuth_] = allowed_;\\n\\n        emit LogSetGlobalAuth(globalAuth_, allowed_);\\n    }\\n\\n    /// @notice                         Sets an address (`dexAuth_`) as allowed dex authorization or not for a specific dex (`dex_`).\\n    ///                                 This function can only be called by the owner.\\n    /// @param dex_                     The address of the dex for which the authorization is being set.\\n    /// @param dexAuth_                 The address to be set as dex authorization.\\n    /// @param allowed_                 A boolean indicating whether the specified address is allowed to update the specific dex config.\\n    function setDexAuth(address dex_, address dexAuth_, bool allowed_) external onlyOwner validAddress(dexAuth_) {\\n        _dexAuths[dex_][dexAuth_] = allowed_;\\n\\n        emit LogSetDexAuth(dexAuth_, allowed_, dex_);\\n    }\\n\\n    /// @notice                         Sets an address as allowed dex deployment logic (`deploymentLogic_`) contract or not.\\n    ///                                 This function can only be called by the owner.\\n    /// @param deploymentLogic_         The address of the dex deployment logic contract to be set.\\n    /// @param allowed_                 A boolean indicating whether the specified address is allowed to deploy new type of dex.\\n    function setDexDeploymentLogic(\\n        address deploymentLogic_,\\n        bool allowed_\\n    ) public onlyOwner validAddress(deploymentLogic_) {\\n        _dexDeploymentLogics[deploymentLogic_] = allowed_;\\n\\n        emit LogSetDexDeploymentLogic(deploymentLogic_, allowed_);\\n    }\\n\\n    /// @notice                         Spell allows owner aka governance to do any arbitrary call on factory\\n    /// @param target_                  Address to which the call needs to be delegated\\n    /// @param data_                    Data to execute at the delegated address\\n    function spell(address target_, bytes memory data_) external onlyOwner returns (bytes memory response_) {\\n        assembly {\\n            let succeeded := delegatecall(gas(), target_, add(data_, 0x20), mload(data_), 0, 0)\\n            let size := returndatasize()\\n\\n            response_ := mload(0x40)\\n            mstore(0x40, add(response_, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n            mstore(response_, size)\\n            returndatacopy(add(response_, 0x20), 0, size)\\n\\n            switch iszero(succeeded)\\n            case 1 {\\n                // throw if delegatecall failed\\n                returndatacopy(0x00, 0x00, size)\\n                revert(0x00, size)\\n            }\\n        }\\n    }\\n\\n    /// @notice                         Checks if the provided address (`deployer_`) is authorized as a deployer.\\n    /// @param deployer_                The address to be checked for deployer authorization.\\n    /// @return                         Returns `true` if the address is a deployer, otherwise `false`.\\n    function isDeployer(address deployer_) public view returns (bool) {\\n        return _deployers[deployer_] || owner == deployer_;\\n    }\\n\\n    /// @notice                         Checks if the provided address (`globalAuth_`) has global dex authorization privileges.\\n    /// @param globalAuth_              The address to be checked for global authorization privileges.\\n    /// @return                         Returns `true` if the given address has global authorization privileges, otherwise `false`.\\n    function isGlobalAuth(address globalAuth_) public view returns (bool) {\\n        return _globalAuths[globalAuth_] || owner == globalAuth_;\\n    }\\n\\n    /// @notice                         Checks if the provided address (`dexAuth_`) has dex authorization privileges for the specified dex (`dex_`).\\n    /// @param dex_                     The address of the dex to check.\\n    /// @param dexAuth_                 The address to be checked for dex authorization privileges.\\n    /// @return                         Returns `true` if the given address has dex authorization privileges for the specified dex, otherwise `false`.\\n    function isDexAuth(address dex_, address dexAuth_) public view returns (bool) {\\n        return _dexAuths[dex_][dexAuth_] || owner == dexAuth_;\\n    }\\n\\n    /// @notice                         Checks if the provided (`dexDeploymentLogic_`) address has authorization for dex deployment.\\n    /// @param dexDeploymentLogic_      The address of the dex deploy logic to check for authorization privileges.\\n    /// @return                         Returns `true` if the given address has authorization privileges for dex deployment, otherwise `false`.\\n    function isDexDeploymentLogic(address dexDeploymentLogic_) public view returns (bool) {\\n        return _dexDeploymentLogics[dexDeploymentLogic_];\\n    }\\n}\\n\\n/// @dev implements DexFactory deploy dex related methods.\\nabstract contract DexFactoryDeployment is DexFactoryCore, DexFactoryAuth {\\n    /// @dev                            Deploys a contract using the CREATE opcode with the provided bytecode (`bytecode_`).\\n    ///                                 This is an internal function, meant to be used within the contract to facilitate the deployment of other contracts.\\n    /// @param bytecode_                The bytecode of the contract to be deployed.\\n    /// @return address_                Returns the address of the deployed contract.\\n    function _deploy(bytes memory bytecode_) internal returns (address address_) {\\n        if (bytecode_.length == 0) {\\n            revert FluidDexError(ErrorTypes.DexFactory__InvalidOperation);\\n        }\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            address_ := create(0, add(bytecode_, 0x20), mload(bytecode_))\\n        }\\n        if (address_ == address(0)) {\\n            revert FluidDexError(ErrorTypes.DexFactory__InvalidOperation);\\n        }\\n    }\\n\\n    /// @notice                       Deploys a new dex using the specified deployment logic `dexDeploymentLogic_` and data `dexDeploymentData_`.\\n    ///                               Only accounts with deployer access or the owner can deploy a new dex.\\n    /// @param dexDeploymentLogic_    The address of the dex deployment logic contract.\\n    /// @param dexDeploymentData_     The data to be used for dex deployment.\\n    /// @return dex_                  Returns the address of the newly deployed dex.\\n    function deployDex(address dexDeploymentLogic_, bytes calldata dexDeploymentData_) external returns (address dex_) {\\n        // Revert if msg.sender doesn't have deployer access or is an owner.\\n        if (!isDeployer(msg.sender)) revert FluidDexError(ErrorTypes.DexFactory__Unauthorized);\\n        // Revert if dexDeploymentLogic_ is not whitelisted.\\n        if (!isDexDeploymentLogic(dexDeploymentLogic_)) revert FluidDexError(ErrorTypes.DexFactory__Unauthorized);\\n\\n        // Dex ID for the new dex and also acts as `nonce` for CREATE\\n        uint256 dexId_ = ++_totalDexes;\\n\\n        // compute dex address for dex id.\\n        dex_ = getDexAddress(dexId_);\\n\\n        // deploy the dex using dex deployment logic by making .delegatecall\\n        (bool success_, bytes memory data_) = dexDeploymentLogic_.delegatecall(dexDeploymentData_);\\n\\n        if (!(success_ && dex_ == _deploy(abi.decode(data_, (bytes))) && isDex(dex_))) {\\n            revert FluidDexError(ErrorTypes.DexFactory__InvalidDexAddress);\\n        }\\n\\n        emit LogDexDeployed(dex_, dexId_);\\n    }\\n\\n    /// @notice                       Computes the address of a dex based on its given ID (`dexId_`).\\n    /// @param dexId_                 The ID of the dex.\\n    /// @return dex_                  Returns the computed address of the dex.\\n    function getDexAddress(uint256 dexId_) public view returns (address dex_) {\\n        return AddressCalcs.addressCalc(address(this), dexId_);\\n    }\\n\\n    /// @notice                         Checks if a given address (`dex_`) corresponds to a valid dex.\\n    /// @param dex_                     The dex address to check.\\n    /// @return                         Returns `true` if the given address corresponds to a valid dex, otherwise `false`.\\n    function isDex(address dex_) public view returns (bool) {\\n        if (dex_.code.length == 0) {\\n            return false;\\n        } else {\\n            // DEX_ID() function signature is 0xf4b9a3fb\\n            (bool success_, bytes memory data_) = dex_.staticcall(hex\\\"f4b9a3fb\\\");\\n            return success_ && dex_ == getDexAddress(abi.decode(data_, (uint256)));\\n        }\\n    }\\n\\n    /// @notice                   Returns the total number of dexes deployed by the factory.\\n    /// @return                   Returns the total number of dexes.\\n    function totalDexes() external view returns (uint256) {\\n        return _totalDexes;\\n    }\\n}\\n\\n/// @title Fluid DexFactory\\n/// @notice creates Fluid dex protocol dexes, which are interacting with Fluid Liquidity to deposit / borrow funds.\\n/// Dexes are created at a deterministic address, given an incrementing `dexId` (see `getDexAddress()`).\\n/// Dexes can only be deployed by allow-listed deployer addresses.\\n/// @dev Note the deployed dexes start out with no config at Liquidity contract.\\n/// This must be done by Liquidity auths in a separate step, otherwise no deposits will be possible.\\n/// This contract is not upgradeable. It supports adding new dex deployment logic contracts for new, future dexes.\\ncontract FluidDexFactory is DexFactoryCore, DexFactoryAuth, DexFactoryDeployment {\\n    constructor(address owner_) DexFactoryCore(owner_) {}\\n}\\n\",\"keccak256\":\"0x96cbe9ceba16d29015ac95f4601b47e576b09de10acb8ca85b4245c8d4a4c3c4\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/interfaces/iDexFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IFluidDexFactory {\\n    /// @notice Global auth is auth for all dexes\\n    function isGlobalAuth(address auth_) external view returns (bool);\\n\\n    /// @notice Dex auth is auth for a specific dex\\n    function isDexAuth(address vault_, address auth_) external view returns (bool);\\n\\n    /// @notice Total dexes deployed.\\n    function totalDexes() external view returns (uint256);\\n\\n    /// @notice Compute dexAddress\\n    function getDexAddress(uint256 dexId_) external view returns (address);\\n\\n    /// @notice read uint256 `result_` for a storage `slot_` key\\n    function readFromStorage(bytes32 slot_) external view returns (uint256 result_);\\n}\\n\",\"keccak256\":\"0xfc81e2f8de72dcf84022b69495996f59fe560cac430767f504de1064c32f550e\",\"license\":\"MIT\"},\"contracts/protocols/dex/interfaces/iDexT1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IFluidDexT1 {\\n    error FluidDexError(uint256 errorId);\\n\\n    /// @notice used to simulate swap to find the output amount\\n    error FluidDexSwapResult(uint256 amountOut);\\n\\n    error FluidDexPerfectLiquidityOutput(uint256 token0Amt, uint token1Amt);\\n\\n    error FluidDexSingleTokenOutput(uint256 tokenAmt);\\n\\n    error FluidDexLiquidityOutput(uint256 shares);\\n\\n    error FluidDexPricesAndExchangeRates(PricesAndExchangePrice pex_);\\n\\n    /// @notice returns the dex id\\n    function DEX_ID() external view returns (uint256);\\n\\n    /// @notice reads uint256 data `result_` from storage at a bytes32 storage `slot_` key.\\n    function readFromStorage(bytes32 slot_) external view returns (uint256 result_);\\n\\n    struct Implementations {\\n        address shift;\\n        address admin;\\n        address colOperations;\\n        address debtOperations;\\n        address perfectOperationsAndOracle;\\n    }\\n\\n    struct ConstantViews {\\n        uint256 dexId;\\n        address liquidity;\\n        address factory;\\n        Implementations implementations;\\n        address deployerContract;\\n        address token0;\\n        address token1;\\n        bytes32 supplyToken0Slot;\\n        bytes32 borrowToken0Slot;\\n        bytes32 supplyToken1Slot;\\n        bytes32 borrowToken1Slot;\\n        bytes32 exchangePriceToken0Slot;\\n        bytes32 exchangePriceToken1Slot;\\n        uint256 oracleMapping;\\n    }\\n\\n    struct ConstantViews2 {\\n        uint token0NumeratorPrecision;\\n        uint token0DenominatorPrecision;\\n        uint token1NumeratorPrecision;\\n        uint token1DenominatorPrecision;\\n    }\\n\\n    struct PricesAndExchangePrice {\\n        uint lastStoredPrice; // last stored price in 1e27 decimals\\n        uint centerPrice; // last stored price in 1e27 decimals\\n        uint upperRange; // price at upper range in 1e27 decimals\\n        uint lowerRange; // price at lower range in 1e27 decimals\\n        uint geometricMean; // geometric mean of upper range & lower range in 1e27 decimals\\n        uint supplyToken0ExchangePrice;\\n        uint borrowToken0ExchangePrice;\\n        uint supplyToken1ExchangePrice;\\n        uint borrowToken1ExchangePrice;\\n    }\\n\\n    struct CollateralReserves {\\n        uint token0RealReserves;\\n        uint token1RealReserves;\\n        uint token0ImaginaryReserves;\\n        uint token1ImaginaryReserves;\\n    }\\n\\n    struct DebtReserves {\\n        uint token0Debt;\\n        uint token1Debt;\\n        uint token0RealReserves;\\n        uint token1RealReserves;\\n        uint token0ImaginaryReserves;\\n        uint token1ImaginaryReserves;\\n    }\\n\\n    function getCollateralReserves(\\n        uint geometricMean_,\\n        uint upperRange_,\\n        uint lowerRange_,\\n        uint token0SupplyExchangePrice_,\\n        uint token1SupplyExchangePrice_\\n    ) external view returns (CollateralReserves memory c_);\\n\\n    function getDebtReserves(\\n        uint geometricMean_,\\n        uint upperRange_,\\n        uint lowerRange_,\\n        uint token0BorrowExchangePrice_,\\n        uint token1BorrowExchangePrice_\\n    ) external view returns (DebtReserves memory d_);\\n\\n    // reverts with FluidDexPricesAndExchangeRates(pex_);\\n    function getPricesAndExchangePrices() external;\\n\\n    function constantsView() external view returns (ConstantViews memory constantsView_);\\n\\n    function constantsView2() external view returns (ConstantViews2 memory constantsView2_);\\n\\n    struct Oracle {\\n        uint twap1by0; // TWAP price\\n        uint lowestPrice1by0; // lowest price point\\n        uint highestPrice1by0; // highest price point\\n        uint twap0by1; // TWAP price\\n        uint lowestPrice0by1; // lowest price point\\n        uint highestPrice0by1; // highest price point\\n    }\\n\\n    /// @dev This function allows users to swap a specific amount of input tokens for output tokens\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountIn_ The exact amount of input tokens to swap\\n    /// @param amountOutMin_ The minimum amount of output tokens the user is willing to accept\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with amountOut_\\n    /// @return amountOut_ The amount of output tokens received from the swap\\n    function swapIn(\\n        bool swap0to1_,\\n        uint256 amountIn_,\\n        uint256 amountOutMin_,\\n        address to_\\n    ) external payable returns (uint256 amountOut_);\\n\\n    /// @dev Swap tokens with perfect amount in and callback functionality\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountIn_ The exact amount of tokens to swap in\\n    /// @param amountOutMin_ The minimum amount of tokens to receive after swap\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with amountOut_\\n    /// @return amountOut_ The amount of output tokens received from the swap\\n    function swapInWithCallback(\\n        bool swap0to1_,\\n        uint256 amountIn_,\\n        uint256 amountOutMin_,\\n        address to_\\n    ) external payable returns (uint256 amountOut_);\\n\\n    /// @dev Swap tokens with perfect amount out\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountOut_ The exact amount of tokens to receive after swap\\n    /// @param amountInMax_ Maximum amount of tokens to swap in\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with amountIn_\\n    /// @return amountIn_ The amount of input tokens used for the swap\\n    function swapOut(\\n        bool swap0to1_,\\n        uint256 amountOut_,\\n        uint256 amountInMax_,\\n        address to_\\n    ) external payable returns (uint256 amountIn_);\\n\\n    /// @dev Swap tokens with perfect amount out and callback functionality\\n    /// @param swap0to1_ Direction of swap. If true, swaps token0 for token1; if false, swaps token1 for token0\\n    /// @param amountOut_ The exact amount of tokens to receive after swap\\n    /// @param amountInMax_ Maximum amount of tokens to swap in\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with amountIn_\\n    /// @return amountIn_ The amount of input tokens used for the swap\\n    function swapOutWithCallback(\\n        bool swap0to1_,\\n        uint256 amountOut_,\\n        uint256 amountInMax_,\\n        address to_\\n    ) external payable returns (uint256 amountIn_);\\n\\n    /// @dev Deposit tokens in equal proportion to the current pool ratio\\n    /// @param shares_ The number of shares to mint\\n    /// @param maxToken0Deposit_ Maximum amount of token0 to deposit\\n    /// @param maxToken1Deposit_ Maximum amount of token1 to deposit\\n    /// @param estimate_ If true, function will revert with estimated deposit amounts without executing the deposit\\n    /// @return token0Amt_ Amount of token0 deposited\\n    /// @return token1Amt_ Amount of token1 deposited\\n    function depositPerfect(\\n        uint shares_,\\n        uint maxToken0Deposit_,\\n        uint maxToken1Deposit_,\\n        bool estimate_\\n    ) external payable returns (uint token0Amt_, uint token1Amt_);\\n\\n    /// @dev This function allows users to withdraw a perfect amount of collateral liquidity\\n    /// @param shares_ The number of shares to withdraw\\n    /// @param minToken0Withdraw_ The minimum amount of token0 the user is willing to accept\\n    /// @param minToken1Withdraw_ The minimum amount of token1 the user is willing to accept\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with token0Amt_ & token1Amt_\\n    /// @return token0Amt_ The amount of token0 withdrawn\\n    /// @return token1Amt_ The amount of token1 withdrawn\\n    function withdrawPerfect(\\n        uint shares_,\\n        uint minToken0Withdraw_,\\n        uint minToken1Withdraw_,\\n        address to_\\n    ) external returns (uint token0Amt_, uint token1Amt_);\\n\\n    /// @dev This function allows users to borrow tokens in equal proportion to the current debt pool ratio\\n    /// @param shares_ The number of shares to borrow\\n    /// @param minToken0Borrow_ Minimum amount of token0 to borrow\\n    /// @param minToken1Borrow_ Minimum amount of token1 to borrow\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with token0Amt_ & token1Amt_\\n    /// @return token0Amt_ Amount of token0 borrowed\\n    /// @return token1Amt_ Amount of token1 borrowed\\n    function borrowPerfect(\\n        uint shares_,\\n        uint minToken0Borrow_,\\n        uint minToken1Borrow_,\\n        address to_\\n    ) external returns (uint token0Amt_, uint token1Amt_);\\n\\n    /// @dev This function allows users to pay back borrowed tokens in equal proportion to the current debt pool ratio\\n    /// @param shares_ The number of shares to pay back\\n    /// @param maxToken0Payback_ Maximum amount of token0 to pay back\\n    /// @param maxToken1Payback_ Maximum amount of token1 to pay back\\n    /// @param estimate_ If true, function will revert with estimated payback amounts without executing the payback\\n    /// @return token0Amt_ Amount of token0 paid back\\n    /// @return token1Amt_ Amount of token1 paid back\\n    function paybackPerfect(\\n        uint shares_,\\n        uint maxToken0Payback_,\\n        uint maxToken1Payback_,\\n        bool estimate_\\n    ) external payable returns (uint token0Amt_, uint token1Amt_);\\n\\n    /// @dev This function allows users to deposit tokens in any proportion into the col pool\\n    /// @param token0Amt_ The amount of token0 to deposit\\n    /// @param token1Amt_ The amount of token1 to deposit\\n    /// @param minSharesAmt_ The minimum amount of shares the user expects to receive\\n    /// @param estimate_ If true, function will revert with estimated shares without executing the deposit\\n    /// @return shares_ The amount of shares minted for the deposit\\n    function deposit(\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint minSharesAmt_,\\n        bool estimate_\\n    ) external payable returns (uint shares_);\\n\\n    /// @dev This function allows users to withdraw tokens in any proportion from the col pool\\n    /// @param token0Amt_ The amount of token0 to withdraw\\n    /// @param token1Amt_ The amount of token1 to withdraw\\n    /// @param maxSharesAmt_ The maximum number of shares the user is willing to burn\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with shares_\\n    /// @return shares_ The number of shares burned for the withdrawal\\n    function withdraw(\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint maxSharesAmt_,\\n        address to_\\n    ) external returns (uint shares_);\\n\\n    /// @dev This function allows users to borrow tokens in any proportion from the debt pool\\n    /// @param token0Amt_ The amount of token0 to borrow\\n    /// @param token1Amt_ The amount of token1 to borrow\\n    /// @param maxSharesAmt_ The maximum amount of shares the user is willing to receive\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with shares_\\n    /// @return shares_ The amount of borrow shares minted to represent the borrowed amount\\n    function borrow(uint token0Amt_, uint token1Amt_, uint maxSharesAmt_, address to_) external returns (uint shares_);\\n\\n    /// @dev This function allows users to payback tokens in any proportion to the debt pool\\n    /// @param token0Amt_ The amount of token0 to payback\\n    /// @param token1Amt_ The amount of token1 to payback\\n    /// @param minSharesAmt_ The minimum amount of shares the user expects to burn\\n    /// @param estimate_ If true, function will revert with estimated shares without executing the payback\\n    /// @return shares_ The amount of borrow shares burned for the payback\\n    function payback(\\n        uint token0Amt_,\\n        uint token1Amt_,\\n        uint minSharesAmt_,\\n        bool estimate_\\n    ) external payable returns (uint shares_);\\n\\n    /// @dev This function allows users to withdraw their collateral with perfect shares in one token\\n    /// @param shares_ The number of shares to burn for withdrawal\\n    /// @param minToken0_ The minimum amount of token0 the user expects to receive (set to 0 if withdrawing in token1)\\n    /// @param minToken1_ The minimum amount of token1 the user expects to receive (set to 0 if withdrawing in token0)\\n    /// @param to_ Recipient of swapped tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with withdrawAmt_\\n    /// @return withdrawAmt_ The amount of tokens withdrawn in the chosen token\\n    function withdrawPerfectInOneToken(\\n        uint shares_,\\n        uint minToken0_,\\n        uint minToken1_,\\n        address to_\\n    ) external returns (uint withdrawAmt_);\\n\\n    /// @dev This function allows users to payback their debt with perfect shares in one token\\n    /// @param shares_ The number of shares to burn for payback\\n    /// @param maxToken0_ The maximum amount of token0 the user is willing to pay (set to 0 if paying back in token1)\\n    /// @param maxToken1_ The maximum amount of token1 the user is willing to pay (set to 0 if paying back in token0)\\n    /// @param estimate_ If true, the function will revert with the estimated payback amount without executing the payback\\n    /// @return paybackAmt_ The amount of tokens paid back in the chosen token\\n    function paybackPerfectInOneToken(\\n        uint shares_,\\n        uint maxToken0_,\\n        uint maxToken1_,\\n        bool estimate_\\n    ) external payable returns (uint paybackAmt_);\\n\\n    /// @dev the oracle assumes last set price of pool till the next swap happens.\\n    /// There's a possibility that during that time some interest is generated hence the last stored price is not the 100% correct price for the whole duration\\n    /// but the difference due to interest will be super low so this difference is ignored\\n    /// For example 2 swaps happened 10min (600 seconds) apart and 1 token has 10% higher interest than other.\\n    /// then that token will accrue about 10% * 600 / secondsInAYear = ~0.0002%\\n    /// @param secondsAgos_ array of seconds ago for which TWAP is needed. If user sends [10, 30, 60] then twaps_ will return [10-0, 30-10, 60-30]\\n    /// @return twaps_ twap price, lowest price (aka minima) & highest price (aka maxima) between secondsAgo checkpoints\\n    /// @return currentPrice_ price of pool after the most recent swap\\n    function oraclePrice(uint[] memory secondsAgos_) external view returns (Oracle[] memory twaps_, uint currentPrice_);\\n}\\n\",\"keccak256\":\"0xd48834505ffcaa7523bf84e5c2da27e585b865f11d4fd75d6088696bfc40d47f\",\"license\":\"MIT\"},\"contracts/protocols/dex/poolT1/coreModule/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nabstract contract Structs {\\n    struct PricesAndExchangePrice {\\n        uint lastStoredPrice; // last stored price in 1e27 decimals\\n        uint centerPrice; // last stored price in 1e27 decimals\\n        uint upperRange; // price at upper range in 1e27 decimals\\n        uint lowerRange; // price at lower range in 1e27 decimals\\n        uint geometricMean; // geometric mean of upper range & lower range in 1e27 decimals\\n        uint supplyToken0ExchangePrice;\\n        uint borrowToken0ExchangePrice;\\n        uint supplyToken1ExchangePrice;\\n        uint borrowToken1ExchangePrice;\\n    }\\n\\n    struct ExchangePrices {\\n        uint supplyToken0ExchangePrice;\\n        uint borrowToken0ExchangePrice;\\n        uint supplyToken1ExchangePrice;\\n        uint borrowToken1ExchangePrice;\\n    }\\n\\n    struct CollateralReserves {\\n        uint token0RealReserves;\\n        uint token1RealReserves;\\n        uint token0ImaginaryReserves;\\n        uint token1ImaginaryReserves;\\n    }\\n\\n    struct CollateralReservesSwap {\\n        uint tokenInRealReserves;\\n        uint tokenOutRealReserves;\\n        uint tokenInImaginaryReserves;\\n        uint tokenOutImaginaryReserves;\\n    }\\n\\n    struct DebtReserves {\\n        uint token0Debt;\\n        uint token1Debt;\\n        uint token0RealReserves;\\n        uint token1RealReserves;\\n        uint token0ImaginaryReserves;\\n        uint token1ImaginaryReserves;\\n    }\\n\\n    struct DebtReservesSwap {\\n        uint tokenInDebt;\\n        uint tokenOutDebt;\\n        uint tokenInRealReserves;\\n        uint tokenOutRealReserves;\\n        uint tokenInImaginaryReserves;\\n        uint tokenOutImaginaryReserves;\\n    }\\n\\n    struct SwapInMemory {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amtInAdjusted;\\n        address withdrawTo;\\n        address borrowTo;\\n        uint price; // price of pool after swap\\n        uint fee; // fee of pool\\n        uint revenueCut; // revenue cut of pool\\n        bool swap0to1;\\n        int swapRoutingAmt;\\n        bytes data; // just added to avoid stack-too-deep error\\n    }\\n\\n    struct SwapOutMemory {\\n        address tokenIn;\\n        address tokenOut;\\n        uint256 amtOutAdjusted;\\n        address withdrawTo;\\n        address borrowTo;\\n        uint price; // price of pool after swap\\n        uint fee;\\n        uint revenueCut; // revenue cut of pool\\n        bool swap0to1;\\n        int swapRoutingAmt;\\n        bytes data; // just added to avoid stack-too-deep error\\n        uint msgValue;\\n    }\\n\\n    struct DepositColMemory {\\n        uint256 token0AmtAdjusted;\\n        uint256 token1AmtAdjusted;\\n        uint256 token0ReservesInitial;\\n        uint256 token1ReservesInitial;\\n    }\\n\\n    struct WithdrawColMemory {\\n        uint256 token0AmtAdjusted;\\n        uint256 token1AmtAdjusted;\\n        uint256 token0ReservesInitial;\\n        uint256 token1ReservesInitial;\\n        address to;\\n    }\\n\\n    struct BorrowDebtMemory {\\n        uint256 token0AmtAdjusted;\\n        uint256 token1AmtAdjusted;\\n        uint256 token0DebtInitial;\\n        uint256 token1DebtInitial;\\n        address to;\\n    }\\n\\n    struct PaybackDebtMemory {\\n        uint256 token0AmtAdjusted;\\n        uint256 token1AmtAdjusted;\\n        uint256 token0DebtInitial;\\n        uint256 token1DebtInitial;\\n    }\\n\\n    struct OraclePriceMemory {\\n        uint lowestPrice1by0;\\n        uint highestPrice1by0;\\n        uint oracleSlot;\\n        uint oracleMap;\\n        uint oracle;\\n    }\\n\\n    struct Oracle {\\n        uint twap1by0; // TWAP price\\n        uint lowestPrice1by0; // lowest price point\\n        uint highestPrice1by0; // highest price point\\n        uint twap0by1; // TWAP price\\n        uint lowestPrice0by1; // lowest price point\\n        uint highestPrice0by1; // highest price point\\n    }\\n\\n    struct Implementations {\\n        address shift;\\n        address admin;\\n        address colOperations;\\n        address debtOperations;\\n        address perfectOperationsAndSwapOut;\\n    }\\n\\n    struct ConstantViews {\\n        uint256 dexId;\\n        address liquidity;\\n        address factory;\\n        Implementations implementations;\\n        address deployerContract;\\n        address token0;\\n        address token1;\\n        bytes32 supplyToken0Slot;\\n        bytes32 borrowToken0Slot;\\n        bytes32 supplyToken1Slot;\\n        bytes32 borrowToken1Slot;\\n        bytes32 exchangePriceToken0Slot;\\n        bytes32 exchangePriceToken1Slot;\\n        uint256 oracleMapping;\\n    }\\n\\n    struct ConstantViews2 {\\n        uint token0NumeratorPrecision;\\n        uint token0DenominatorPrecision;\\n        uint token1NumeratorPrecision;\\n        uint token1DenominatorPrecision;\\n    }\\n}\\n\",\"keccak256\":\"0x1cccc3a9ff4f07f159ac2aebf969c2a714a6f912ef0e86b76362bf45a5ecb8be\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/smartLending/factory/main.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { Owned } from \\\"solmate/src/auth/Owned.sol\\\";\\nimport { SSTORE2 } from \\\"solmate/src/utils/SSTORE2.sol\\\";\\nimport { CREATE3 } from \\\"solmate/src/utils/CREATE3.sol\\\";\\nimport { ErrorTypes } from \\\"../../errorTypes.sol\\\";\\nimport { Error } from \\\"../../error.sol\\\";\\n\\nabstract contract Constants {\\n    address public immutable DEX_FACTORY;\\n    address public immutable LIQUIDITY;\\n}\\n\\nabstract contract Variables is Owned {\\n    // ------------ storage variables from inherited contracts (Owned) come before vars here --------\\n\\n    // ----------------------- slot 0 ---------------------------\\n    // address public owner;\\n\\n    // 12 bytes empty\\n\\n    // ----------------------- slot 1  ---------------------------\\n    /// @dev smart lending auths can update specific configs.\\n    /// owner can add/remove auths.\\n    /// Owner is auth by default.\\n    mapping(address => mapping(address => uint256)) internal _smartLendingAuths;\\n\\n    // ----------------------- slot 2 ---------------------------\\n    /// @dev deployers can deploy new smartLendings.\\n    /// owner can add/remove deployers.\\n    /// Owner is deployer by default.\\n    mapping(address => uint256) internal _deployers;\\n\\n    // ----------------------- slot 3 ---------------------------\\n    /// @notice list of all created tokens.\\n    /// @dev Solidity creates an automatic getter only to fetch at a certain position, so explicitly define a getter that returns all.\\n    address[] public createdTokens;\\n\\n    // ----------------------- slot 4 ---------------------------\\n\\n    /// @dev smart lending creation code, accessed via SSTORE2.\\n    address internal _smartLendingCreationCodePointer;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                          CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address owner_) Owned(owner_) {}\\n}\\n\\nabstract contract Events {\\n    /// @dev Emitted when a new smart lending is deployed\\n    /// @param dexId The ID of the deployed DEX\\n    /// @param smartLending The address of the deployed smart lending\\n    event LogSmartLendingDeployed(uint256 dexId, address smartLending);\\n\\n    /// @dev Emitted when a SmartLending auth is updated\\n    /// @param smartLending address of SmartLending\\n    /// @param auth address of auth whose status is being updated\\n    /// @param allowed updated status of auth\\n    event LogAuthUpdated(address smartLending, address auth, bool allowed);\\n\\n    /// @dev Emitted when a deployer is modified by owner\\n    /// @param deployer address of deployer\\n    /// @param allowed updated status of deployer\\n    event LogDeployerUpdated(address deployer, bool allowed);\\n\\n    /// @dev Emitted when the smart lending creation code is modified by owner\\n    /// @param creationCodePointer address of the creation code pointer\\n    event LogSetCreationCode(address creationCodePointer);\\n}\\n\\ncontract FluidSmartLendingFactory is Constants, Variables, Events, Error {\\n    /// @dev Validates that an address is not the zero address\\n    modifier validAddress(address value_) {\\n        if (value_ == address(0)) {\\n            revert FluidSmartLendingFactoryError(ErrorTypes.SmartLendingFactory__ZeroAddress);\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        address dexFactory_,\\n        address liquidity_,\\n        address owner_\\n    ) validAddress(dexFactory_) validAddress(liquidity_) validAddress(owner_) Variables(owner_) {\\n        LIQUIDITY = liquidity_;\\n        DEX_FACTORY = dexFactory_;\\n    }\\n\\n    /// @dev Validates that msg.sender is deployer or owner\\n    modifier onlyDeployers() {\\n        if (!isDeployer(msg.sender)) {\\n            revert FluidSmartLendingFactoryError(ErrorTypes.SmartLendingFactory__Unauthorized);\\n        }\\n        _;\\n    }\\n\\n    /// @notice List of all created tokens\\n    function allTokens() public view returns (address[] memory) {\\n        return createdTokens;\\n    }\\n\\n    /// @notice Reads if a certain `auth_` address is an allowed auth for `smartLending_` or not. Owner is auth by default.\\n    function isSmartLendingAuth(address smartLending_, address auth_) public view returns (bool) {\\n        return auth_ == owner || _smartLendingAuths[smartLending_][auth_] == 1;\\n    }\\n\\n    /// @notice Reads if a certain `deployer_` address is an allowed deployer or not. Owner is deployer by default.\\n    function isDeployer(address deployer_) public view returns (bool) {\\n        return deployer_ == owner || _deployers[deployer_] == 1;\\n    }\\n\\n    /// @dev Retrieves the creation code for the SmartLending contract\\n    function smartLendingCreationCode() public view returns (bytes memory) {\\n        return SSTORE2.read(_smartLendingCreationCodePointer);\\n    }\\n\\n    /// @notice Sets an address as allowed deployer or not. Only callable by owner.\\n    /// @param deployer_ Address to set deployer value for\\n    /// @param allowed_ Bool flag for whether address is allowed as deployer or not\\n    function updateDeployer(address deployer_, bool allowed_) external onlyOwner validAddress(deployer_) {\\n        _deployers[deployer_] = allowed_ ? 1 : 0;\\n\\n        emit LogDeployerUpdated(deployer_, allowed_);\\n    }\\n\\n    /// @notice Updates the authorization status of an address for a SmartLending contract. Only callable by owner.\\n    /// @param smartLending_ The address of the SmartLending contract\\n    /// @param auth_ The address to be updated\\n    /// @param allowed_ The new authorization status\\n    function updateSmartLendingAuth(\\n        address smartLending_,\\n        address auth_,\\n        bool allowed_\\n    ) external validAddress(smartLending_) validAddress(auth_) onlyOwner {\\n        _smartLendingAuths[smartLending_][auth_] = allowed_ ? 1 : 0;\\n\\n        emit LogAuthUpdated(smartLending_, auth_, allowed_);\\n    }\\n\\n    /// @notice Sets the `creationCode_` bytecode for new SmartLending contracts. Only callable by owner.\\n    /// @param creationCode_ New SmartLending contract creation code.\\n    function setSmartLendingCreationCode(bytes calldata creationCode_) external onlyOwner {\\n        if (creationCode_.length == 0) {\\n            revert FluidSmartLendingFactoryError(ErrorTypes.SmartLendingFactory__InvalidParams);\\n        }\\n\\n        // write creation code to SSTORE2 pointer and set in mapping\\n        address creationCodePointer_ = SSTORE2.write(creationCode_);\\n        _smartLendingCreationCodePointer = creationCodePointer_;\\n\\n        emit LogSetCreationCode(creationCodePointer_);\\n    }\\n\\n    /// @notice Spell allows owner aka governance to do any arbitrary call on factory\\n    /// @param target_ Address to which the call needs to be delegated\\n    /// @param data_ Data to execute at the delegated address\\n    function spell(address target_, bytes memory data_) external onlyOwner returns (bytes memory response_) {\\n        assembly {\\n            let succeeded := delegatecall(gas(), target_, add(data_, 0x20), mload(data_), 0, 0)\\n            let size := returndatasize()\\n\\n            response_ := mload(0x40)\\n            mstore(0x40, add(response_, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n            mstore(response_, size)\\n            returndatacopy(add(response_, 0x20), 0, size)\\n\\n            switch iszero(succeeded)\\n            case 1 {\\n                // throw if delegatecall failed\\n                returndatacopy(0x00, 0x00, size)\\n                revert(0x00, size)\\n            }\\n        }\\n    }\\n\\n    /// @notice Deploys a new SmartLending contract. Only callable by deployers.\\n    /// @param dexId_ The ID of the DEX for which the smart lending wrapper is being deployed\\n    /// @return smartLending_ The newly deployed SmartLending contract\\n    function deploy(uint256 dexId_) public onlyDeployers returns (address smartLending_) {\\n        if (getSmartLendingAddress(dexId_).code.length != 0) {\\n            revert FluidSmartLendingFactoryError(ErrorTypes.SmartLendingFactory__AlreadyDeployed);\\n        }\\n\\n        // Use CREATE3 for deterministic deployments. Unfortunately it has 55k gas overhead\\n        smartLending_ = CREATE3.deploy(\\n            _getSalt(dexId_),\\n            abi.encodePacked(\\n                SSTORE2.read(_smartLendingCreationCodePointer), // creation code\\n                abi.encode(dexId_, LIQUIDITY, DEX_FACTORY, address(this)) // constructor params\\n            ),\\n            0\\n        );\\n\\n        createdTokens.push(smartLending_); // Add the created token to the allTokens array\\n\\n        emit LogSmartLendingDeployed(dexId_, smartLending_);\\n    }\\n\\n    /// @notice Computes the address of a SmartLending contract based on a given dexId.\\n    /// @param dexId_ The ID of the DEX for which the SmartLending contract address is being computed.\\n    /// @return The computed address of the SmartLending contract.\\n    function getSmartLendingAddress(uint256 dexId_) public view returns (address) {\\n        return CREATE3.getDeployed(_getSalt(dexId_));\\n    }\\n\\n    /// @notice Returns the total number of SmartLending contracts deployed by the factory.\\n    /// @return The total number of SmartLending contracts deployed.\\n    function totalSmartLendings() external view returns (uint256) {\\n        return createdTokens.length;\\n    }\\n\\n    /// @notice                         Checks if a given address (`smartLending_`) corresponds to a valid smart lending.\\n    /// @param smartLending_            The smart lending address to check.\\n    /// @return                         Returns `true` if the given address corresponds to a valid smart lending, otherwise `false`.\\n    function isSmartLending(address smartLending_) public view returns (bool) {\\n        if (smartLending_.code.length == 0) {\\n            return false;\\n        } else {\\n            // DEX() function signature is 0x80935aa9\\n            (bool success_, bytes memory data_) = smartLending_.staticcall(hex\\\"80935aa9\\\");\\n            address dex_ = abi.decode(data_, (address));\\n            // DEX_ID() function signature is 0xf4b9a3fb\\n            (success_, data_) = dex_.staticcall(hex\\\"f4b9a3fb\\\");\\n            return success_ && smartLending_ == getSmartLendingAddress(abi.decode(data_, (uint256)));\\n        }\\n    }\\n\\n    /// @dev unique deployment salt for the smart lending\\n    function _getSalt(uint256 dexId_) internal pure returns (bytes32) {\\n        return keccak256(abi.encode(dexId_));\\n    }\\n\\n    /// @dev Deploys a contract using the CREATE opcode with the provided bytecode (`bytecode_`).\\n    /// This is an internal function, meant to be used within the contract to facilitate the deployment of other contracts.\\n    /// @param bytecode_ The bytecode of the contract to be deployed.\\n    /// @return address_ Returns the address of the deployed contract.\\n    function _deploy(bytes memory bytecode_) internal returns (address address_) {\\n        if (bytecode_.length == 0) {\\n            revert FluidDexError(ErrorTypes.SmartLendingFactory__InvalidOperation);\\n        }\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            address_ := create(0, add(bytecode_, 0x20), mload(bytecode_))\\n        }\\n        if (address_ == address(0)) {\\n            revert FluidDexError(ErrorTypes.SmartLendingFactory__InvalidOperation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd92524d38e0b3d56827b4423e9d4878ce64fba4ec42ad19bc0b45ff686f7f98e\",\"license\":\"BUSL-1.1\"},\"contracts/protocols/dex/smartLending/main.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { ERC20 } from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport { IFluidDexT1 } from \\\"../interfaces/iDexT1.sol\\\";\\nimport { FluidDexFactory } from \\\"../factory/main.sol\\\";\\nimport { FluidSmartLendingFactory } from \\\"./factory/main.sol\\\";\\nimport { SafeTransfer } from \\\"../../../libraries/safeTransfer.sol\\\";\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { Error } from \\\"../error.sol\\\";\\nimport { DexSlotsLink } from \\\"../../../libraries/dexSlotsLink.sol\\\";\\nimport { DexCalcs } from \\\"../../../libraries/dexCalcs.sol\\\";\\n\\nabstract contract Constants {\\n    /// @dev Ignoring leap years\\n    uint256 internal constant SECONDS_PER_YEAR = 365 days;\\n\\n    address internal constant ETH_ADDRESS = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\n\\n    address internal constant DEAD_ADDRESS = 0x000000000000000000000000000000000000dEaD;\\n\\n    FluidDexFactory public immutable DEX_FACTORY;\\n\\n    FluidSmartLendingFactory public immutable SMART_LENDING_FACTORY;\\n\\n    IFluidDexT1 public immutable DEX;\\n\\n    address public immutable LIQUIDITY;\\n\\n    address public immutable TOKEN0;\\n\\n    address public immutable TOKEN1;\\n\\n    bool public immutable IS_NATIVE_PAIR;\\n}\\n\\nabstract contract Variables is ERC20, Constants {\\n    // ------------ storage variables from inherited contracts come before vars here --------\\n    // _________ ERC20 _______________\\n    // ----------------------- slot 0 ---------------------------\\n    // mapping(address => uint256) private _balances;\\n\\n    // ----------------------- slot 1 ---------------------------\\n    // mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    // ----------------------- slot 2 ---------------------------\\n    // uint256 private _totalSupply;\\n\\n    // ----------------------- slot 3 ---------------------------\\n    // string private _name;\\n    // ----------------------- slot 4 ---------------------------\\n    // string private _symbol;\\n\\n    // ------------ storage variables ------------------------------------------------------\\n\\n    // ----------------------- slot 5 ---------------------------\\n    uint40 public lastTimestamp;\\n    /// If positive then rewards, if negative then fee.\\n    /// 1e6 = 100%, 1e4 = 1%, minimum 0.0001% fee or reward.\\n    int32 public feeOrReward;\\n    // Starting from 1e18\\n    // If fees then reduce exchange price\\n    // If reward then increase exchange price\\n    uint184 public exchangePrice;\\n\\n    // ----------------------- slot 6 ---------------------------\\n    address public rebalancer;\\n\\n    // ----------------------- slot 7 ---------------------------\\n    address public dexFromAddress;\\n\\n    /// @dev status for reentrancy guard\\n    uint8 internal _status;\\n}\\n\\nabstract contract Events {\\n    /// @dev Emitted when the share to tokens ratio is rebalanced\\n    /// @param shares_ The number of shares rebalanced\\n    /// @param token0Amt_ The amount of token0 rebalanced\\n    /// @param token1Amt_ The amount of token1 rebalanced\\n    /// @param isWithdraw_ Whether the rebalance is a withdrawal or deposit\\n    event LogRebalance(uint256 shares_, uint256 token0Amt_, uint256 token1Amt_, bool isWithdraw_);\\n\\n    /// @dev Emitted when the rebalancer is set\\n    /// @param rebalancer The new rebalancer\\n    event LogRebalancerSet(address rebalancer);\\n\\n    /// @dev Emitted when the fee or reward is set\\n    /// @param feeOrReward The new fee or reward\\n    event LogFeeOrRewardSet(int256 feeOrReward);\\n}\\n\\n/// @dev ReentrancyGuard based on OpenZeppelin implementation.\\n/// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.8/contracts/security/ReentrancyGuard.sol\\nabstract contract ReentrancyGuard is Variables, Error {\\n    uint8 internal constant REENTRANCY_NOT_ENTERED = 1;\\n    uint8 internal constant REENTRANCY_ENTERED = 2;\\n\\n    constructor() {\\n        _status = REENTRANCY_NOT_ENTERED;\\n    }\\n\\n    /// @dev Prevents a contract from calling itself, directly or indirectly.\\n    /// See OpenZeppelin implementation for more info\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status != REENTRANCY_NOT_ENTERED) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__Reentrancy);\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = REENTRANCY_ENTERED;\\n\\n        _;\\n\\n        // storing original value triggers a refund (see https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = REENTRANCY_NOT_ENTERED;\\n    }\\n}\\n\\ncontract FluidSmartLending is ERC20, Variables, Error, ReentrancyGuard, Events {\\n    /// @dev prefix for token name. constructor appends dex id, e.g. \\\"Fluid Smart Lending 12\\\"\\n    string private constant TOKEN_NAME_PREFIX = \\\"Fluid Smart Lending \\\";\\n    /// @dev prefix for token symbol. constructor appends dex id, e.g. \\\"fSL12\\\"\\n    string private constant TOKEN_SYMBOL_PREFIX = \\\"fSL\\\";\\n\\n    /// @dev Validates that an address is not the zero address\\n    modifier validAddress(address value_) {\\n        if (value_ == address(0)) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__ZeroAddress);\\n        }\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 dexId_,\\n        address liquidity_,\\n        address dexFactory_,\\n        address smartLendingFactory_\\n    )\\n        ERC20(\\n            string(abi.encodePacked(TOKEN_NAME_PREFIX, _toString(dexId_))),\\n            string(abi.encodePacked(TOKEN_SYMBOL_PREFIX, _toString(dexId_)))\\n        )\\n        validAddress(liquidity_)\\n        validAddress(dexFactory_)\\n        validAddress(smartLendingFactory_)\\n    {\\n        LIQUIDITY = liquidity_;\\n        DEX_FACTORY = FluidDexFactory(dexFactory_);\\n        SMART_LENDING_FACTORY = FluidSmartLendingFactory(smartLendingFactory_);\\n        DEX = IFluidDexT1(DEX_FACTORY.getDexAddress(dexId_));\\n        IFluidDexT1.ConstantViews memory constants_ = DEX.constantsView();\\n        TOKEN0 = constants_.token0;\\n        TOKEN1 = constants_.token1;\\n        IS_NATIVE_PAIR = (TOKEN0 == ETH_ADDRESS) || (TOKEN1 == ETH_ADDRESS);\\n\\n        exchangePrice = uint184(1e18);\\n        feeOrReward = int32(0);\\n        lastTimestamp = uint40(block.timestamp);\\n\\n        dexFromAddress = DEAD_ADDRESS;\\n    }\\n\\n    modifier setDexFrom() {\\n        dexFromAddress = msg.sender;\\n        _;\\n        dexFromAddress = DEAD_ADDRESS;\\n    }\\n\\n    modifier onlyAuth() {\\n        if (!SMART_LENDING_FACTORY.isSmartLendingAuth(address(this), msg.sender)) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__Unauthorized);\\n        }\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != SMART_LENDING_FACTORY.owner()) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__Unauthorized);\\n        }\\n        _;\\n    }\\n\\n    modifier _updateExchangePrice() {\\n        bool rewardsOrFeeActive_;\\n        (exchangePrice, rewardsOrFeeActive_) = getUpdateExchangePrice();\\n        if (rewardsOrFeeActive_) {\\n            lastTimestamp = uint40(block.timestamp); // only write to storage if fee or reward is active.\\n        }\\n        _;\\n    }\\n\\n    /// @notice gets updated exchange price\\n    function getUpdateExchangePrice() public view returns (uint184 exchangePrice_, bool rewardsOrFeeActive_) {\\n        int256 feeOrReward_ = feeOrReward;\\n        exchangePrice_ = exchangePrice;\\n        if (feeOrReward_ > 0) {\\n            exchangePrice_ =\\n                exchangePrice_ +\\n                uint184(\\n                    (exchangePrice_ * uint256(feeOrReward_) * (block.timestamp - uint256(lastTimestamp))) /\\n                        (1e6 * SECONDS_PER_YEAR)\\n                );\\n            rewardsOrFeeActive_ = true;\\n        } else if (feeOrReward_ < 0) {\\n            exchangePrice_ =\\n                exchangePrice_ -\\n                uint184(\\n                    (exchangePrice_ * uint256(-feeOrReward_) * (block.timestamp - uint256(lastTimestamp))) /\\n                        (1e6 * SECONDS_PER_YEAR)\\n                );\\n            rewardsOrFeeActive_ = true;\\n        }\\n    }\\n\\n    /// @notice triggers updateExchangePrice\\n    function updateExchangePrice() public _updateExchangePrice {}\\n\\n    /// @dev Set the fee or reward. Only callable by auths.\\n    /// @param feeOrReward_ The new fee or reward (1e6 = 100%, 1e4 = 1%, minimum 0.0001% fee or reward). 0 means no fee or reward\\n    function setFeeOrReward(int256 feeOrReward_) external onlyAuth _updateExchangePrice {\\n        if (feeOrReward_ > 1e6 || feeOrReward_ < -1e6) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__OutOfRange);\\n        }\\n        lastTimestamp = uint40(block.timestamp); // current fee or reward setting is applied until exactly now even if previously 0\\n        feeOrReward = int32(feeOrReward_);\\n\\n        emit LogFeeOrRewardSet(feeOrReward_);\\n    }\\n\\n    /// @dev Set the rebalancer. Only callable by auths.\\n    /// @param rebalancer_ The new rebalancer\\n    function setRebalancer(address rebalancer_) external onlyAuth validAddress(rebalancer_) {\\n        rebalancer = rebalancer_;\\n\\n        emit LogRebalancerSet(rebalancer_);\\n    }\\n\\n    /// @notice                         Spell allows auths (governance) to do any arbitrary call\\n    /// @param target_                  Address to which the call needs to be delegated\\n    /// @param data_                    Data to execute at the delegated address\\n    function spell(address target_, bytes memory data_) external onlyOwner returns (bytes memory response_) {\\n        assembly {\\n            let succeeded := delegatecall(gas(), target_, add(data_, 0x20), mload(data_), 0, 0)\\n            let size := returndatasize()\\n\\n            response_ := mload(0x40)\\n            mstore(0x40, add(response_, and(add(add(size, 0x20), 0x1f), not(0x1f))))\\n            mstore(response_, size)\\n            returndatacopy(add(response_, 0x20), 0, size)\\n\\n            switch iszero(succeeded)\\n            case 1 {\\n                // throw if delegatecall failed\\n                returndatacopy(0x00, 0x00, size)\\n                revert(0x00, size)\\n            }\\n        }\\n    }\\n\\n    /// @dev Deposit tokens in equal proportion to the current pool ratio\\n    /// @param shares_ The number of shares to mint\\n    /// @param maxToken0Deposit_ Maximum amount of token0 to deposit\\n    /// @param maxToken1Deposit_ Maximum amount of token1 to deposit\\n    /// @param to_ Recipient of minted tokens. If to_ == address(0) then out tokens will be sent to msg.sender.\\n    /// @return amount_ Amount of tokens minted\\n    /// @return token0Amt_ Amount of token0 deposited\\n    /// @return token1Amt_ Amount of token1 deposited\\n    function depositPerfect(\\n        uint256 shares_,\\n        uint256 maxToken0Deposit_,\\n        uint256 maxToken1Deposit_,\\n        address to_\\n    )\\n        external\\n        payable\\n        setDexFrom\\n        _updateExchangePrice\\n        nonReentrant\\n        returns (uint256 amount_, uint256 token0Amt_, uint256 token1Amt_)\\n    {\\n        if (!IS_NATIVE_PAIR) {\\n            if (msg.value > 0) {\\n                revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidMsgValue);\\n            }\\n\\n            (token0Amt_, token1Amt_) = DEX.depositPerfect(\\n                shares_ + 1, // + 1 rounding up but only minting shares\\n                maxToken0Deposit_,\\n                maxToken1Deposit_,\\n                false\\n            );\\n        } else {\\n            uint256 value_ = TOKEN0 == ETH_ADDRESS ? maxToken0Deposit_ : maxToken1Deposit_;\\n            if (value_ > msg.value) {\\n                revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidMsgValue);\\n            }\\n\\n            uint256 initialEthAmount_ = address(this).balance - msg.value;\\n\\n            (token0Amt_, token1Amt_) = DEX.depositPerfect{ value: value_ }(\\n                shares_ + 1, // + 1 rounding up but only minting shares\\n                maxToken0Deposit_,\\n                maxToken1Deposit_,\\n                false\\n            );\\n\\n            uint finalEth_ = payable(address(this)).balance;\\n            if (finalEth_ > initialEthAmount_) {\\n                unchecked {\\n                    SafeTransfer.safeTransferNative(msg.sender, finalEth_ - initialEthAmount_); // sending back excess ETH\\n                }\\n            }\\n        }\\n\\n        to_ = to_ == address(0) ? msg.sender : to_;\\n\\n        amount_ = (shares_ * 1e18) / exchangePrice;\\n\\n        _mint(to_, amount_);\\n    }\\n\\n    /// @dev This function allows users to deposit tokens in any proportion into the col pool\\n    /// @param token0Amt_ The amount of token0 to deposit\\n    /// @param token1Amt_ The amount of token1 to deposit\\n    /// @param minSharesAmt_ The minimum amount of shares the user expects to receive\\n    /// @param to_ Recipient of minted tokens. If to_ == address(0) then out tokens will be sent to msg.sender.\\n    /// @return amount_ The amount of tokens minted for the deposit\\n    /// @return shares_ The number of dex pool shares deposited\\n    function deposit(\\n        uint256 token0Amt_,\\n        uint256 token1Amt_,\\n        uint256 minSharesAmt_,\\n        address to_\\n    ) external payable setDexFrom _updateExchangePrice nonReentrant returns (uint256 amount_, uint256 shares_) {\\n        uint256 value_ = !IS_NATIVE_PAIR\\n            ? 0\\n            : (TOKEN0 == ETH_ADDRESS)\\n                ? token0Amt_\\n                : token1Amt_;\\n\\n        if (value_ != msg.value) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidMsgValue);\\n        }\\n\\n        to_ = to_ == address(0) ? msg.sender : to_;\\n\\n        shares_ = DEX.deposit{ value: value_ }(token0Amt_, token1Amt_, minSharesAmt_, false);\\n\\n        amount_ = (shares_ * 1e18) / exchangePrice - 1;\\n\\n        _mint(to_, amount_);\\n    }\\n\\n    /// @dev This function allows users to withdraw a perfect amount of collateral liquidity\\n    /// @param shares_ The number of shares to withdraw. set to type(uint).max to withdraw maximum balance.\\n    /// @param minToken0Withdraw_ The minimum amount of token0 the user is willing to accept\\n    /// @param minToken1Withdraw_ The minimum amount of token1 the user is willing to accept\\n    /// @param to_ Recipient of withdrawn tokens. If to_ == address(0) then out tokens will be sent to msg.sender.\\n    /// @return amount_ amount_ of shares actually burnt\\n    /// @return token0Amt_ The amount of token0 withdrawn\\n    /// @return token1Amt_ The amount of token1 withdrawn\\n    function withdrawPerfect(\\n        uint256 shares_,\\n        uint256 minToken0Withdraw_,\\n        uint256 minToken1Withdraw_,\\n        address to_\\n    ) external _updateExchangePrice nonReentrant returns (uint256 amount_, uint256 token0Amt_, uint256 token1Amt_) {\\n        if (shares_ == type(uint).max) {\\n            amount_ = balanceOf(msg.sender);\\n            shares_ = (amount_ * exchangePrice) / 1e18 - 1;\\n        } else {\\n            amount_ = (shares_ * 1e18) / exchangePrice + 1;\\n        }\\n\\n        _burn(msg.sender, amount_);\\n\\n        to_ = to_ == address(0) ? msg.sender : to_;\\n\\n        if (minToken0Withdraw_ > 0 && minToken1Withdraw_ > 0) {\\n            (token0Amt_, token1Amt_) = DEX.withdrawPerfect(shares_, minToken0Withdraw_, minToken1Withdraw_, to_);\\n        } else if (minToken0Withdraw_ > 0 && minToken1Withdraw_ == 0) {\\n            // withdraw only in token0, token1Amt_ remains 0\\n            (token0Amt_) = DEX.withdrawPerfectInOneToken(shares_, minToken0Withdraw_, minToken1Withdraw_, to_);\\n        } else if (minToken0Withdraw_ == 0 && minToken1Withdraw_ > 0) {\\n            // withdraw only in token1, token0Amt_ remains 0\\n            (token1Amt_) = DEX.withdrawPerfectInOneToken(shares_, minToken0Withdraw_, minToken1Withdraw_, to_);\\n        } else {\\n            // meaning user sent both amounts as == 0\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidAmounts);\\n        }\\n    }\\n\\n    /// @dev This function allows users to withdraw tokens in any proportion from the col pool\\n    /// @param token0Amt_ The amount of token0 to withdraw\\n    /// @param token1Amt_ The amount of token1 to withdraw\\n    /// @param maxSharesAmt_ The maximum number of shares the user is willing to burn\\n    /// @param to_ Recipient of withdrawn tokens. If to_ == address(0) then out tokens will be sent to msg.sender. If to_ == ADDRESS_DEAD then function will revert with shares_\\n    /// @return amount_ The number of tokens burned for the withdrawal\\n    /// @return shares_ The number of dex pool shares withdrawn\\n    function withdraw(\\n        uint256 token0Amt_,\\n        uint256 token1Amt_,\\n        uint256 maxSharesAmt_,\\n        address to_\\n    ) external _updateExchangePrice nonReentrant returns (uint256 amount_, uint256 shares_) {\\n        to_ = to_ == address(0) ? msg.sender : to_;\\n\\n        shares_ = DEX.withdraw(token0Amt_, token1Amt_, maxSharesAmt_, to_);\\n\\n        amount_ = (shares_ * 1e18) / exchangePrice + 1;\\n\\n        _burn(msg.sender, amount_);\\n    }\\n\\n    /// @dev Rebalances the share to tokens ratio to balance out rewards and fees\\n    function rebalance(\\n        uint256 minOrMaxToken0_,\\n        uint256 minOrMaxToken1_\\n    )\\n        public\\n        payable\\n        _updateExchangePrice\\n        nonReentrant\\n        returns (uint256 shares_, uint256 token0Amt_, uint256 token1Amt_, bool isWithdraw_)\\n    {\\n        if (rebalancer != msg.sender) revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidRebalancer);\\n\\n        int256 rebalanceDiff_ = rebalanceDiff();\\n\\n        if (rebalanceDiff_ > 0) {\\n            // fees (withdraw)\\n            isWithdraw_ = true;\\n            if (msg.value > 0) {\\n                revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidMsgValue);\\n            }\\n            shares_ = uint256(rebalanceDiff_);\\n            (token0Amt_, token1Amt_) = DEX.withdrawPerfect(shares_, minOrMaxToken0_, minOrMaxToken1_, msg.sender);\\n        } else if (rebalanceDiff_ < 0) {\\n            // rewards (deposit)\\n            isWithdraw_ = false;\\n\\n            uint256 initialEthAmount_ = address(this).balance - msg.value;\\n\\n            uint256 value_ = !IS_NATIVE_PAIR\\n                ? 0\\n                : (TOKEN0 == ETH_ADDRESS)\\n                    ? minOrMaxToken0_\\n                    : minOrMaxToken1_;\\n\\n            if (value_ > msg.value) {\\n                revert FluidSmartLendingError(ErrorTypes.SmartLending__InvalidMsgValue);\\n            }\\n\\n            shares_ = uint256(-rebalanceDiff_);\\n\\n            dexFromAddress = msg.sender;\\n            (token0Amt_, token1Amt_) = DEX.depositPerfect{ value: value_ }(\\n                shares_,\\n                minOrMaxToken0_,\\n                minOrMaxToken1_,\\n                false\\n            );\\n            dexFromAddress = DEAD_ADDRESS;\\n\\n            uint finalEth_ = payable(address(this)).balance;\\n            if (finalEth_ > initialEthAmount_) {\\n                unchecked {\\n                    SafeTransfer.safeTransferNative(msg.sender, finalEth_ - initialEthAmount_); // sending back excess ETH\\n                }\\n            }\\n        }\\n\\n        emit LogRebalance(shares_, token0Amt_, token1Amt_, isWithdraw_);\\n    }\\n\\n    /// @dev Returns the difference between the total smart lending shares on the DEX and the total smart lending shares calculated.\\n    /// A positive value indicates fees to collect, while a negative value indicates rewards to be rebalanced.\\n    function rebalanceDiff() public view returns (int256) {\\n        uint256 totalSmartLendingSharesOnDex_ = DEX.readFromStorage(\\n            DexSlotsLink.calculateMappingStorageSlot(DexSlotsLink.DEX_USER_SUPPLY_MAPPING_SLOT, address(this))\\n        );\\n        totalSmartLendingSharesOnDex_ =\\n            (totalSmartLendingSharesOnDex_ >> DexSlotsLink.BITS_USER_SUPPLY_AMOUNT) &\\n            DexCalcs.X64;\\n        totalSmartLendingSharesOnDex_ =\\n            (totalSmartLendingSharesOnDex_ >> DexCalcs.DEFAULT_EXPONENT_SIZE) <<\\n            (totalSmartLendingSharesOnDex_ & DexCalcs.DEFAULT_EXPONENT_MASK);\\n\\n        uint256 totalSmartLendingShares_ = (totalSupply() * exchangePrice) / 1e18;\\n\\n        return int256(totalSmartLendingSharesOnDex_) - int256(totalSmartLendingShares_);\\n    }\\n\\n    /// @notice   dex liquidity callback\\n    /// @param    token_ The token being transferred\\n    /// @param    amount_ The amount being transferred\\n    function dexCallback(address token_, uint256 amount_) external {\\n        if (msg.sender != address(DEX)) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__Unauthorized);\\n        }\\n        SafeTransfer.safeTransferFrom(token_, dexFromAddress, LIQUIDITY, amount_);\\n    }\\n\\n    /// @dev for excess eth being sent back from dex to here\\n    receive() external payable {\\n        if (msg.sender != address(DEX)) {\\n            revert FluidSmartLendingError(ErrorTypes.SmartLending__Unauthorized);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     * taken from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\\n     */\\n    function _log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     * taken from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\\n     */\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    function _toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = _log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            assembly (\\\"memory-safe\\\") {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                assembly (\\\"memory-safe\\\") {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0c3a0b07fc94e250ab14aaf6bd6934e50961c49c16d755b6ef2e2e3cbf6e30fd\",\"license\":\"BUSL-1.1\"},\"solmate/src/auth/Owned.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Simple single owner authorization mixin.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/auth/Owned.sol)\\nabstract contract Owned {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            OWNERSHIP STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    address public owner;\\n\\n    modifier onlyOwner() virtual {\\n        require(msg.sender == owner, \\\"UNAUTHORIZED\\\");\\n\\n        _;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(address _owner) {\\n        owner = _owner;\\n\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             OWNERSHIP LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        owner = newOwner;\\n\\n        emit OwnershipTransferred(msg.sender, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfedb27d14c508342c33eb067c9a02eabcdb0f9dcf93b04ded1001f580d12d0ea\",\"license\":\"AGPL-3.0-only\"},\"solmate/src/utils/Bytes32AddressLib.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Library for converting between addresses and bytes32 values.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/Bytes32AddressLib.sol)\\nlibrary Bytes32AddressLib {\\n    function fromLast20Bytes(bytes32 bytesValue) internal pure returns (address) {\\n        return address(uint160(uint256(bytesValue)));\\n    }\\n\\n    function fillLast12Bytes(address addressValue) internal pure returns (bytes32) {\\n        return bytes32(bytes20(addressValue));\\n    }\\n}\\n\",\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\"},\"solmate/src/utils/CREATE3.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\nimport {Bytes32AddressLib} from \\\"./Bytes32AddressLib.sol\\\";\\n\\n/// @notice Deploy to deterministic addresses without an initcode factor.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/CREATE3.sol)\\n/// @author Modified from 0xSequence (https://github.com/0xSequence/create3/blob/master/contracts/Create3.sol)\\nlibrary CREATE3 {\\n    using Bytes32AddressLib for bytes32;\\n\\n    //--------------------------------------------------------------------------------//\\n    // Opcode     | Opcode + Arguments    | Description      | Stack View             //\\n    //--------------------------------------------------------------------------------//\\n    // 0x36       |  0x36                 | CALLDATASIZE     | size                   //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 size                 //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 0 size               //\\n    // 0x37       |  0x37                 | CALLDATACOPY     |                        //\\n    // 0x36       |  0x36                 | CALLDATASIZE     | size                   //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 size                 //\\n    // 0x34       |  0x34                 | CALLVALUE        | value 0 size           //\\n    // 0xf0       |  0xf0                 | CREATE           | newContract            //\\n    //--------------------------------------------------------------------------------//\\n    // Opcode     | Opcode + Arguments    | Description      | Stack View             //\\n    //--------------------------------------------------------------------------------//\\n    // 0x67       |  0x67XXXXXXXXXXXXXXXX | PUSH8 bytecode   | bytecode               //\\n    // 0x3d       |  0x3d                 | RETURNDATASIZE   | 0 bytecode             //\\n    // 0x52       |  0x52                 | MSTORE           |                        //\\n    // 0x60       |  0x6008               | PUSH1 08         | 8                      //\\n    // 0x60       |  0x6018               | PUSH1 18         | 24 8                   //\\n    // 0xf3       |  0xf3                 | RETURN           |                        //\\n    //--------------------------------------------------------------------------------//\\n    bytes internal constant PROXY_BYTECODE = hex\\\"67_36_3d_3d_37_36_3d_34_f0_3d_52_60_08_60_18_f3\\\";\\n\\n    bytes32 internal constant PROXY_BYTECODE_HASH = keccak256(PROXY_BYTECODE);\\n\\n    function deploy(\\n        bytes32 salt,\\n        bytes memory creationCode,\\n        uint256 value\\n    ) internal returns (address deployed) {\\n        bytes memory proxyChildBytecode = PROXY_BYTECODE;\\n\\n        address proxy;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Deploy a new contract with our pre-made bytecode via CREATE2.\\n            // We start 32 bytes into the code to avoid copying the byte length.\\n            proxy := create2(0, add(proxyChildBytecode, 32), mload(proxyChildBytecode), salt)\\n        }\\n        require(proxy != address(0), \\\"DEPLOYMENT_FAILED\\\");\\n\\n        deployed = getDeployed(salt);\\n        (bool success, ) = proxy.call{value: value}(creationCode);\\n        require(success && deployed.code.length != 0, \\\"INITIALIZATION_FAILED\\\");\\n    }\\n\\n    function getDeployed(bytes32 salt) internal view returns (address) {\\n        address proxy = keccak256(\\n            abi.encodePacked(\\n                // Prefix:\\n                bytes1(0xFF),\\n                // Creator:\\n                address(this),\\n                // Salt:\\n                salt,\\n                // Bytecode hash:\\n                PROXY_BYTECODE_HASH\\n            )\\n        ).fromLast20Bytes();\\n\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    // 0xd6 = 0xc0 (short RLP prefix) + 0x16 (length of: 0x94 ++ proxy ++ 0x01)\\n                    // 0x94 = 0x80 + 0x14 (0x14 = the length of an address, 20 bytes, in hex)\\n                    hex\\\"d6_94\\\",\\n                    proxy,\\n                    hex\\\"01\\\" // Nonce of the proxy contract (1)\\n                )\\n            ).fromLast20Bytes();\\n    }\\n}\\n\",\"keccak256\":\"0x1d4ea6d2353ed117d7704ddf7488fcd39edb2d575351f6c64efd313170d74367\",\"license\":\"AGPL-3.0-only\"},\"solmate/src/utils/SSTORE2.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.8.0;\\n\\n/// @notice Read and write to persistent storage at a fraction of the cost.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SSTORE2.sol)\\n/// @author Modified from 0xSequence (https://github.com/0xSequence/sstore2/blob/master/contracts/SSTORE2.sol)\\nlibrary SSTORE2 {\\n    uint256 internal constant DATA_OFFSET = 1; // We skip the first byte as it's a STOP opcode to ensure the contract can't be called.\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               WRITE LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function write(bytes memory data) internal returns (address pointer) {\\n        // Prefix the bytecode with a STOP opcode to ensure it cannot be called.\\n        bytes memory runtimeCode = abi.encodePacked(hex\\\"00\\\", data);\\n\\n        bytes memory creationCode = abi.encodePacked(\\n            //---------------------------------------------------------------------------------------------------------------//\\n            // Opcode  | Opcode + Arguments  | Description  | Stack View                                                     //\\n            //---------------------------------------------------------------------------------------------------------------//\\n            // 0x60    |  0x600B             | PUSH1 11     | codeOffset                                                     //\\n            // 0x59    |  0x59               | MSIZE        | 0 codeOffset                                                   //\\n            // 0x81    |  0x81               | DUP2         | codeOffset 0 codeOffset                                        //\\n            // 0x38    |  0x38               | CODESIZE     | codeSize codeOffset 0 codeOffset                               //\\n            // 0x03    |  0x03               | SUB          | (codeSize - codeOffset) 0 codeOffset                           //\\n            // 0x80    |  0x80               | DUP          | (codeSize - codeOffset) (codeSize - codeOffset) 0 codeOffset   //\\n            // 0x92    |  0x92               | SWAP3        | codeOffset (codeSize - codeOffset) 0 (codeSize - codeOffset)   //\\n            // 0x59    |  0x59               | MSIZE        | 0 codeOffset (codeSize - codeOffset) 0 (codeSize - codeOffset) //\\n            // 0x39    |  0x39               | CODECOPY     | 0 (codeSize - codeOffset)                                      //\\n            // 0xf3    |  0xf3               | RETURN       |                                                                //\\n            //---------------------------------------------------------------------------------------------------------------//\\n            hex\\\"60_0B_59_81_38_03_80_92_59_39_F3\\\", // Returns all code in the contract except for the first 11 (0B in hex) bytes.\\n            runtimeCode // The bytecode we want the contract to have after deployment. Capped at 1 byte less than the code size limit.\\n        );\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Deploy a new contract with the generated creation code.\\n            // We start 32 bytes into the code to avoid copying the byte length.\\n            pointer := create(0, add(creationCode, 32), mload(creationCode))\\n        }\\n\\n        require(pointer != address(0), \\\"DEPLOYMENT_FAILED\\\");\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               READ LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function read(address pointer) internal view returns (bytes memory) {\\n        return readBytecode(pointer, DATA_OFFSET, pointer.code.length - DATA_OFFSET);\\n    }\\n\\n    function read(address pointer, uint256 start) internal view returns (bytes memory) {\\n        start += DATA_OFFSET;\\n\\n        return readBytecode(pointer, start, pointer.code.length - start);\\n    }\\n\\n    function read(\\n        address pointer,\\n        uint256 start,\\n        uint256 end\\n    ) internal view returns (bytes memory) {\\n        start += DATA_OFFSET;\\n        end += DATA_OFFSET;\\n\\n        require(pointer.code.length >= end, \\\"OUT_OF_BOUNDS\\\");\\n\\n        return readBytecode(pointer, start, end - start);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                          INTERNAL HELPER LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function readBytecode(\\n        address pointer,\\n        uint256 start,\\n        uint256 size\\n    ) private view returns (bytes memory data) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Get a pointer to some free memory.\\n            data := mload(0x40)\\n\\n            // Update the free memory pointer to prevent overriding our data.\\n            // We use and(x, not(31)) as a cheaper equivalent to sub(x, mod(x, 32)).\\n            // Adding 31 to size and running the result through the logic above ensures\\n            // the memory pointer remains word-aligned, following the Solidity convention.\\n            mstore(0x40, add(data, and(add(add(size, 32), 31), not(31))))\\n\\n            // Store the size of the data in the first 32 byte chunk of free memory.\\n            mstore(data, size)\\n\\n            // Copy the code into memory right after the 32 bytes we used to store the size.\\n            extcodecopy(pointer, add(data, 32), start, size)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc5359c92365c550c418725fc534a538426ea8f6e7f6c06c0a9d66647d864469d\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200479a3803806200479a8339810160408190526200003491620000a2565b6001600160a01b03821615806200005257506001600160a01b038116155b15620000715760405163178addfb60e31b815260040160405180910390fd5b6001600160a01b039182166080521660a052620000e1565b6001600160a01b03811681146200009f57600080fd5b50565b60008060408385031215620000b657600080fd5b8251620000c38162000089565b6020840151909250620000d68162000089565b809150509250929050565b60805160a0516146706200012a6000396000818161024501528181610b1401526113ca01526000818161018d0152818161131f0152818161157c015261177701526146706000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806383bf8a251161008c57806392a576e61161006657806392a576e61461021a578063e2e6c90b1461022d578063f53eddcc14610240578063fb4078991461026757600080fd5b806383bf8a25146101d4578063841d2699146101f4578063881bec611461020757600080fd5b80633b28664e116100c85780633b28664e1461014057806359e8ebbb146101605780636d458a5b1461017357806379d1810a1461018857600080fd5b806302fd3896146100ef5780632a6bc2dd1461010d57806338a925841461012d575b600080fd5b6100f761026f565b60405161010491906131ee565b60405180910390f35b61012061011b366004613293565b610281565b60405161010491906132b7565b61012061013b366004613293565b610385565b61015361014e3660046133b6565b610481565b60405161010491906133ef565b6100f761016e366004613676565b610a52565b61017b610b10565b6040516101049190613715565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610104565b6101e76101e2366004613293565b610bc3565b604051610104919061376f565b6101af610202366004613782565b611398565b6100f7610215366004613676565b611450565b6101536102283660046133b6565b611507565b6101e761023b366004613293565b611718565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6100f7611858565b606061027c610215610b10565b905090565b6060600061028d61026f565b90506000815167ffffffffffffffff8111156102ab576102ab613469565b6040519080825280602002602001820160405280156102e457816020015b6102d1611865565b8152602001906001900390816102c95790505b50905060005b825181101561037d578281815181106103055761030561379b565b602002602001015182828151811061031f5761031f61379b565b6020026020010151600001819052506103558382815181106103435761034361379b565b60200260200101516000015186611507565b8282815181106103675761036761379b565b60209081029190910181015101526001016102ea565b509392505050565b60606000610391611858565b90506000815167ffffffffffffffff8111156103af576103af613469565b6040519080825280602002602001820160405280156103e857816020015b6103d5611865565b8152602001906001900390816103cd5790505b50905060005b825181101561037d578281815181106104095761040961379b565b60200260200101518282815181106104235761042361379b565b6020026020010151600001819052506104598382815181106104475761044761379b565b60200260200101516000015186610481565b82828151811061046b5761046b61379b565b60209081029190910181015101526001016103ee565b6104e6604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff8281168083526040517f70a082310000000000000000000000000000000000000000000000000000000081526004810191909152908416906370a0823190602401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906137ca565b81602001818152505060008373ffffffffffffffffffffffffffffffffffffffff1663c89c74ea6040518163ffffffff1660e01b81526004016040805180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f691906137f8565b5076ffffffffffffffffffffffffffffffffffffffffffffff169050670de0b6b3a764000081836020015161062b9190613878565b610635919061388f565b8260400181815250505060008373ffffffffffffffffffffffffffffffffffffffff1663443ec74d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906138d5565b905060008473ffffffffffffffffffffffffffffffffffffffff16635ee04d786040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072391906138d5565b90507fffffffffffffffffffffffff111111111111111111111111111111111111111273ffffffffffffffffffffffffffffffffffffffff8316016107845773ffffffffffffffffffffffffffffffffffffffff84163160a08401526108b7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528316906370a0823190602401602060405180830381865afa1580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081491906137ca565b60a08401526040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152868116602483015283169063dd62ed3e90604401602060405180830381865afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906137ca565b60e08401525b7fffffffffffffffffffffffff111111111111111111111111111111111111111273ffffffffffffffffffffffffffffffffffffffff8216016109165773ffffffffffffffffffffffffffffffffffffffff84163160c0840152610a4a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528216906370a0823190602401602060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a691906137ca565b60c08401526040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152868116602483015282169063dd62ed3e90604401602060405180830381865afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4391906137ca565b6101008401525b505092915050565b80516060908067ffffffffffffffff811115610a7057610a70613469565b604051908082528060200260200182016040528015610aa957816020015b610a966118e7565b815260200190600190039081610a8e5790505b50915060005b81811015610b0957610ad9848281518110610acc57610acc61379b565b6020026020010151610bc3565b838281518110610aeb57610aeb61379b565b60200260200101819052508080610b01906138f2565b915050610aaf565b5050919050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ff97f1d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261027c919081019061392a565b610bcb6118e7565b73ffffffffffffffffffffffffffffffffffffffff8216808252604080517f06fdde0300000000000000000000000000000000000000000000000000000000815290516306fdde03916004808201926000929091908290030181865afa158015610c39573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c7f91908101906139b9565b81602001819052508173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d1891908101906139b9565b6040808301919091526012606083015280517f18160ddd000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff8416916318160ddd9160048083019260209291908290030181865afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906137ca565b8160800181815250508173ffffffffffffffffffffffffffffffffffffffff1663443ec74d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d91906138d5565b81610100019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff16635ee04d786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed491906138d5565b81610120019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166380935aa96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b91906138d5565b81610140019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166319d8ac616040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110229190613a6b565b64ffffffffff16816101600181815250508173ffffffffffffffffffffffffffffffffffffffff1663e47a882d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561107e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a29190613a92565b60030b610180820152604080517fc89c74ea000000000000000000000000000000000000000000000000000000008152815173ffffffffffffffffffffffffffffffffffffffff85169263c89c74ea92600480820193918290030181865afa158015611112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113691906137f8565b5076ffffffffffffffffffffffffffffffffffffffffffffff166101a08201819052611171906ec097ce7bc90715b34b9f100000000061388f565b6101e08201526101a081015161020082018190526080820151670de0b6b3a76400009161119d91613878565b6111a7919061388f565b8160a00181815250508173ffffffffffffffffffffffffffffffffffffffff166301d22ccd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f91906138d5565b816101c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166392eb16566040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c691906137ca565b6102208201526101408101516040517fe72ef91b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015283821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063e72ef91b90604401610aa060405180830381865afa158015611369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138d9190613d50565b610260820152919050565b6040517f841d2699000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063841d269990602401602060405180830381865afa158015611426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144a91906138d5565b92915050565b80516060908067ffffffffffffffff81111561146e5761146e613469565b6040519080825280602002602001820160405280156114a757816020015b6114946118e7565b81526020019060019003908161148c5790505b50915060005b81811015610b09576114d78482815181106114ca576114ca61379b565b6020026020010151611718565b8382815181106114e9576114e961379b565b602002602001018190525080806114ff906138f2565b9150506114ad565b61156c604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6115768383610481565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631cba00238573ffffffffffffffffffffffffffffffffffffffff166380935aa96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162591906138d5565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016103c0604051808303816000875af1158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b5919061400e565b9050670de0b6b3a764000081610160015183604001516116d59190613878565b6116df919061388f565b60608301526101808101516040830151670de0b6b3a76400009161170291613878565b61170c919061388f565b60808301525092915050565b6117206118e7565b61172982610bc3565b6101408101516040517f0208dbb000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529192507f00000000000000000000000000000000000000000000000000000000000000001690630208dbb090602401611920604051808303816000875af11580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e59190614575565b610240820181905260e00151610160015160a0820151670de0b6b3a76400009161180e91613878565b611818919061388f565b60c082015261024081015160e00151610180015160a0820151670de0b6b3a76400009161184491613878565b61184e919061388f565b60e0820152919050565b606061027c61016e610b10565b60405180604001604052806118786118e7565b81526020016118e2604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b604051806102800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600060ff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016119ea6119f7565b81526020016118e2611c63565b604080516101208082018352600080835283516101c0810185528181526020818101839052818601839052855160a080820188528482528183018590529681018490526060808201859052608080830186905290840191909152820183905294810182905260c0810182905260e0810182905261010081018290529182018190526101408201819052610160820181905261018082018190526101a082015290918201908152602001611acb6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001611b8760405180610220016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611bdb6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611c0b6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001611c496040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611c56611d71565b81526020016118e2611def565b604051806101a001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611d0160405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d5760405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d64611fcc565b81526020016118e2611fcc565b604051806101e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001611dcd612050565b8152602001600081526020016000815260200160008152602001600081525090565b6040518061028001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611eae60405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611f0460405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611f68604051806101600160405280600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d57604051806101600160405280600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806102200160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016118e2612108565b6040518060c001604052806000151581526020016000151581526020016000151581526020016120a86040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016120df6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016118e260405180606001604052806000815260200160008152602001600081525090565b6040518060600160405280600081526020016121626040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b81526020016118e26040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60005b838110156121d85781810151838201526020016121c0565b50506000910152565b600081518084526121f98160208601602086016121bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b805182526020810151612256602084018273ffffffffffffffffffffffffffffffffffffffff169052565b50604081015161227e604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608101516122dc606084018273ffffffffffffffffffffffffffffffffffffffff808251168352806020830151166020840152806040830151166040840152806060830151166060840152806080830151166080840152505050565b5060808101516101006123068185018373ffffffffffffffffffffffffffffffffffffffff169052565b60a083015191506101206123318186018473ffffffffffffffffffffffffffffffffffffffff169052565b60c0840151925061014061235c8187018573ffffffffffffffffffffffffffffffffffffffff169052565b60e0850151610160878101919091529285015161018080880191909152918501516101a080880191909152908501516101c0870152918401516101e0860152830151610200850152909101516102209092019190915250565b80511515825260208101516123ce602084018215159052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161243f8285018273ffffffffffffffffffffffffffffffffffffffff169052565b50506101408181015173ffffffffffffffffffffffffffffffffffffffff1690830152610160808201519083015261018080820151908301526101a080820151908301526101c080820151908301526101e0808201519083015261020090810151910152565b8051151582526020810151151560208301526040810151151560408301526060810151612500606084018280518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b506080818101518051610100850152602081015161012085015260408101516101408501526060810151610160850152908101516101808401525060a0015180516101a083015260208101516101c0830152604001516101e090910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201516125c98285018215159052565b5050610140808201516125de828501826124a5565b50506101608101516103408301526101808101516103608301526101a08101516103808301526101c001516103a090910152565b805182526020808201518184015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e080880151818a015261010080890151818b0152610120808a0151908b0152610140808a0151908b0152610160808a0151908b0152610180808a0151908b01526101a0808a0151908b01526101c0808a015180511515828d0152988901516101e08c0152968801516102008b0152948701516102208a015292860151610240890152908501516102608801528401516102808701528301516102a08601528201516102c08501529050506101e0810151805115156102e0840152602081015161030084015260408101516103208401526060810151610340840152608081015161036084015260a081015161038084015260c08101516103a084015260e08101516103c08401526101008101516103e0840152506102008101516127ea6104008401828051151582526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b5061022081015180511515610560840152602081015161058084015260408101516105a084015260608101516105c084015260808101516105e084015260a081015161060084015260c081015161062084015260e08101516106408401526101008101516106608401526101208101516106808401526101408101516106a08401525061024081015180516106c08401526020808201516106e085015260408083015161070086015260608084015161072087015260808085015161074088015260a08086015161076089015260c0808701516107808a015260e08701516107a08a01526101008701516107c08a01526101208701516107e08a01526101408701516108008a01526101608701516108208a01526101808701516108408a01526101a08701516108608a01526101c08701516108808a01526101e08701516108a08a015261020087015180516108c08b015280870151805173ffffffffffffffffffffffffffffffffffffffff9081166108e08d0152818901516109008d0152818801516109208d0152818701516109408d0152908501516109608c01529086015180519091166109808b0152958601516109a08a0152938501516109c0890152918401516109e0880152830151610a00870152820151610a208601520151610a408401525061026001518051610a60830152602080820151610a80840152604080830151610aa0850152606080840151610ac0860152608080850151610ae087015260a080860151610b0088015260c080870151610b2089015260e0870151610b40890152610100870151610b60890152610120870151610b80890152610140870151610ba0890152610160870151610bc0890152610180870151610be08901526101a0870151610c008901526101c0870151610c208901526101e0870151610c40890152610200909601518051610c6089015280860151805173ffffffffffffffffffffffffffffffffffffffff908116610c808b015281880151610ca08b015281870151610cc08b015281860151610ce08b015290840151610d008a0152908501518051909116610d2089015294850151610d4088015292840151610d6087015290830151610d80860152820151610da0850152810151610dc08401520151610de090910152565b505050565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151612b66602084018261222b565b5060408181015180516102608501526020810151610280850152908101516102a08401526060908101516102c0840152810151612ba76102e08401826123b5565b5060808181015180516105008501526020810151610520850152604081015161054085015260608101516105608501529081015161058084015260a08101516105a084015260c08101516105c084015260e08101516105e08401526101008101516106008401525060a081015180516106208401526020810151610640840152604081015161066084015260608101516106808401525060c081015180516106a084015260208101516106c084015260408101516106e08401526060810151610700840152608081015161072084015260a08101516107408401525060e0810151612c9661076084018261255f565b50610100810151612b35610b20840182612612565b8051151582526020818101518382015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e080880151818a015261010080890151818b0152610120808a015180511515828d0152988901516101408c0152968801516101608b0152948701516101808a0152928601516101a0890152908501516101c08801528401516101e0870152830151610200860152820151610220850152905050610140810151805115156102408401526020810151610260840152604081015161028084015260608101516102a084015260808101516102c084015260a08101516102e084015260c081015161030084015260e081015161032084015261010081015161034084015250610160810151612f22610360840182805182526020808201518184015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e08088015190890152610100808801519089015261012080880151908901526101408088015190890152610160808801519089015261018080880151908901526101a080880151908901526101c080880151908901526101e080880151908901526102009687015180519789019790975286860151805173ffffffffffffffffffffffffffffffffffffffff9081166102208b0152818801516102408b0152818701516102608b0152818601516102808b0152908401516102a08a01529685015180519097166102c0890152948601516102e08801529285015161030087015290840151610320860152830151610340850152820151610360840152015161038090910152565b5061018090810151805161070084015260208082015161072085015260408083015161074086015260608084015161076087015260808085015161078088015260a0808601516107a089015260c0808701516107c08a015260e08701516107e08a01526101008701516108008a01526101208701516108208a01526101408701516108408a01526101608701516108608a0152968601516108808901526101a08601516108a08901526101c08601516108c08901526101e08601516108e089015261020090950151805161090089015280850151805173ffffffffffffffffffffffffffffffffffffffff9081166109208b0152818701516109408b0152818601516109608b0152818501516109808b0152908301516109a08a01529084015180519091166109c0890152938401516109e088015291830151610a00870152820151610a20860152810151610a4085015290810151610a608401520151610a8090910152565b805173ffffffffffffffffffffffffffffffffffffffff168252600061260060208301518160208601526130be828601826121e1565b915050604083015184820360408601526130d882826121e1565b91505060608301516130ef606086018260ff169052565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401516131408287018273ffffffffffffffffffffffffffffffffffffffff169052565b50506101208381015173ffffffffffffffffffffffffffffffffffffffff9081169186019190915261014080850151821690860152610160808501519086015261018080850151908601526101a080850151908601526101c080850151909116908501526101e0808401519085015261020080840151908501526102208084015190850152610240808401516131d882870182612b3a565b505061026083015161037d611b60860182612cab565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613261577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261324f858351613088565b94509285019290850190600101613215565b5092979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461329057600080fd5b50565b6000602082840312156132a557600080fd5b81356132b08161326e565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613261577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184528151610140815181885261332382890182613088565b9150508782015191506133a38888018373ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b95505092850192908501906001016132de565b600080604083850312156133c957600080fd5b82356133d48161326e565b915060208301356133e48161326e565b809150509250929050565b610120810161144a828473ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156134bc576134bc613469565b60405290565b6040516060810167ffffffffffffffff811182821017156134bc576134bc613469565b60405160a0810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610220810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101a0810167ffffffffffffffff811182821017156134bc576134bc613469565b60405160c0810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101e0810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101c0810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610160810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610280810167ffffffffffffffff811182821017156134bc576134bc613469565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561364a5761364a613469565b604052919050565b600067ffffffffffffffff82111561366c5761366c613469565b5060051b60200190565b6000602080838503121561368957600080fd5b823567ffffffffffffffff8111156136a057600080fd5b8301601f810185136136b157600080fd5b80356136c46136bf82613652565b613603565b81815260059190911b820183019083810190878311156136e357600080fd5b928401925b8284101561370a5783356136fb8161326e565b825292840192908401906136e8565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561376357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613731565b50909695505050505050565b6020815260006132b06020830184613088565b60006020828403121561379457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156137dc57600080fd5b5051919050565b805180151581146137f357600080fd5b919050565b6000806040838503121561380b57600080fd5b825176ffffffffffffffffffffffffffffffffffffffffffffff8116811461383257600080fd5b9150613840602084016137e3565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761144a5761144a613849565b6000826138c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80516137f38161326e565b6000602082840312156138e757600080fd5b81516132b08161326e565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361392357613923613849565b5060010190565b6000602080838503121561393d57600080fd5b825167ffffffffffffffff81111561395457600080fd5b8301601f8101851361396557600080fd5b80516139736136bf82613652565b81815260059190911b8201830190838101908783111561399257600080fd5b928401925b8284101561370a5783516139aa8161326e565b82529284019290840190613997565b6000602082840312156139cb57600080fd5b815167ffffffffffffffff808211156139e357600080fd5b818401915084601f8301126139f757600080fd5b815181811115613a0957613a09613469565b613a3a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613603565b9150808252856020828501011115613a5157600080fd5b613a628160208401602086016121bd565b50949350505050565b600060208284031215613a7d57600080fd5b815164ffffffffff811681146132b057600080fd5b600060208284031215613aa457600080fd5b81518060030b81146132b057600080fd5b60006101208284031215613ac857600080fd5b613ad0613498565b9050613adb826137e3565b81526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600060e08284031215613b4757600080fd5b60405160e0810181811067ffffffffffffffff82111715613b6a57613b6a613469565b80604052508091508251613b7d8161326e565b808252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201525092915050565b60008183036101a0811215613bd857600080fd5b613be06134c2565b91508251825260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215613c1657600080fd5b50613c1f6134e5565b6020830151613c2d8161326e565b8082525060408301516020820152606083015160408201526080830151606082015260a0830151608082015280602083015250613c6d8360c08401613b35565b604082015292915050565b60006103a08284031215613c8b57600080fd5b613c93613508565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e080840151908201529050610200613d4684828501613bc4565b9082015292915050565b6000610aa08284031215613d6357600080fd5b613d6b61352c565b613d74836137e3565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120613dd785828601613ab5565b90820152613de9846102408501613ab5565b610140820152613dfd846103608501613c78565b610160820152613e11846107008501613c78565b6101808201529392505050565b600060a08284031215613e3057600080fd5b613e386134e5565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b6000818303610200811215613e8057600080fd5b613e88613550565b9150613e93836137e3565b8252613ea1602084016137e3565b6020830152613eb2604084016137e3565b6040830152613ec48460608501613e1e565b6060830152613ed7846101008501613e1e565b608083015260607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6082011215613f0c57600080fd5b50613f156134c2565b6101a083015181526101c083015160208201526101e083015160408201528060a08301525092915050565b60006103c08284031215613f5357600080fd5b613f5b613573565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610100808301518183015250610120613fc18184016137e3565b90820152610140613fd484848301613e6c565b908201526103408201516101608201526103608201516101808201526103808201516101a08201526103a0909101516101c0820152919050565b60006103c0828403121561402157600080fd5b6132b08383613f40565b600060a0828403121561403d57600080fd5b6140456134e5565b905081516140528161326e565b815260208201516140628161326e565b602082015260408201516140758161326e565b604082015260608201516140888161326e565b6060820152608082015161409b8161326e565b608082015292915050565b600061024082840312156140b957600080fd5b6140c1613597565b9050815181526140d3602083016138ca565b60208201526140e4604083016138ca565b60408201526140f6836060840161402b565b60608201526101006141098184016138ca565b608083015261012061411c8185016138ca565b60a084015261014061412f8186016138ca565b60c08501526101608086015160e086015261018080870151858701526101a0945084870151848701526101c0870151838701526101e0870151828701526102008701518187015250505050610220830151818301525092915050565b60006080828403121561419d57600080fd5b6040516080810181811067ffffffffffffffff821117156141c0576141c0613469565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000610220828403121561420457600080fd5b61420c613508565b9050614217826137e3565b8152614225602083016137e3565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101206142808184016138ca565b908201526101406142928382016138ca565b90820152610160828101519082015261018080830151908201526101a080830151908201526101c080830151908201526101e080830151908201526102009182015191810191909152919050565b600061012082840312156142f357600080fd5b6142fb613498565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600060c0828403121561436b57600080fd5b614373613550565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b600061016082840312156143c457600080fd5b6143cc6135bb565b90506143d7826137e3565b81526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525092915050565b6000610e00828403121561445c57600080fd5b6144646135df565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a08083015181830152506101c061450784828501613ab5565b90820152614519836102e08401613ab5565b6101e082015261452d8361040084016143b1565b6102008201526145418361056084016143b1565b610220820152614555836106c08401613c78565b61024082015261456983610a608401613c78565b61026082015292915050565b6000611920828403121561458857600080fd5b614590613498565b614599836138ca565b81526145a884602085016140a6565b60208201526145bb84610260850161418b565b60408201526145ce846102e085016141f1565b60608201526145e18461050085016142e0565b60808201526145f484610620850161418b565b60a0820152614607846106a08501614359565b60c082015261461a846107608501613f40565b60e082015261462d84610b208501614449565b610100820152939250505056fea26469706673582212203b313be2b01bd288e02d5e8f41a0cfcfec3e30f83b4090489d47b754dee550bf64736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806383bf8a251161008c57806392a576e61161006657806392a576e61461021a578063e2e6c90b1461022d578063f53eddcc14610240578063fb4078991461026757600080fd5b806383bf8a25146101d4578063841d2699146101f4578063881bec611461020757600080fd5b80633b28664e116100c85780633b28664e1461014057806359e8ebbb146101605780636d458a5b1461017357806379d1810a1461018857600080fd5b806302fd3896146100ef5780632a6bc2dd1461010d57806338a925841461012d575b600080fd5b6100f761026f565b60405161010491906131ee565b60405180910390f35b61012061011b366004613293565b610281565b60405161010491906132b7565b61012061013b366004613293565b610385565b61015361014e3660046133b6565b610481565b60405161010491906133ef565b6100f761016e366004613676565b610a52565b61017b610b10565b6040516101049190613715565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610104565b6101e76101e2366004613293565b610bc3565b604051610104919061376f565b6101af610202366004613782565b611398565b6100f7610215366004613676565b611450565b6101536102283660046133b6565b611507565b6101e761023b366004613293565b611718565b6101af7f000000000000000000000000000000000000000000000000000000000000000081565b6100f7611858565b606061027c610215610b10565b905090565b6060600061028d61026f565b90506000815167ffffffffffffffff8111156102ab576102ab613469565b6040519080825280602002602001820160405280156102e457816020015b6102d1611865565b8152602001906001900390816102c95790505b50905060005b825181101561037d578281815181106103055761030561379b565b602002602001015182828151811061031f5761031f61379b565b6020026020010151600001819052506103558382815181106103435761034361379b565b60200260200101516000015186611507565b8282815181106103675761036761379b565b60209081029190910181015101526001016102ea565b509392505050565b60606000610391611858565b90506000815167ffffffffffffffff8111156103af576103af613469565b6040519080825280602002602001820160405280156103e857816020015b6103d5611865565b8152602001906001900390816103cd5790505b50905060005b825181101561037d578281815181106104095761040961379b565b60200260200101518282815181106104235761042361379b565b6020026020010151600001819052506104598382815181106104475761044761379b565b60200260200101516000015186610481565b82828151811061046b5761046b61379b565b60209081029190910181015101526001016103ee565b6104e6604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b73ffffffffffffffffffffffffffffffffffffffff8281168083526040517f70a082310000000000000000000000000000000000000000000000000000000081526004810191909152908416906370a0823190602401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906137ca565b81602001818152505060008373ffffffffffffffffffffffffffffffffffffffff1663c89c74ea6040518163ffffffff1660e01b81526004016040805180830381865afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f691906137f8565b5076ffffffffffffffffffffffffffffffffffffffffffffff169050670de0b6b3a764000081836020015161062b9190613878565b610635919061388f565b8260400181815250505060008373ffffffffffffffffffffffffffffffffffffffff1663443ec74d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906138d5565b905060008473ffffffffffffffffffffffffffffffffffffffff16635ee04d786040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072391906138d5565b90507fffffffffffffffffffffffff111111111111111111111111111111111111111273ffffffffffffffffffffffffffffffffffffffff8316016107845773ffffffffffffffffffffffffffffffffffffffff84163160a08401526108b7565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528316906370a0823190602401602060405180830381865afa1580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081491906137ca565b60a08401526040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152868116602483015283169063dd62ed3e90604401602060405180830381865afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b191906137ca565b60e08401525b7fffffffffffffffffffffffff111111111111111111111111111111111111111273ffffffffffffffffffffffffffffffffffffffff8216016109165773ffffffffffffffffffffffffffffffffffffffff84163160c0840152610a4a565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301528216906370a0823190602401602060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a691906137ca565b60c08401526040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152868116602483015282169063dd62ed3e90604401602060405180830381865afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4391906137ca565b6101008401525b505092915050565b80516060908067ffffffffffffffff811115610a7057610a70613469565b604051908082528060200260200182016040528015610aa957816020015b610a966118e7565b815260200190600190039081610a8e5790505b50915060005b81811015610b0957610ad9848281518110610acc57610acc61379b565b6020026020010151610bc3565b838281518110610aeb57610aeb61379b565b60200260200101819052508080610b01906138f2565b915050610aaf565b5050919050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ff97f1d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261027c919081019061392a565b610bcb6118e7565b73ffffffffffffffffffffffffffffffffffffffff8216808252604080517f06fdde0300000000000000000000000000000000000000000000000000000000815290516306fdde03916004808201926000929091908290030181865afa158015610c39573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c7f91908101906139b9565b81602001819052508173ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610cd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d1891908101906139b9565b6040808301919091526012606083015280517f18160ddd000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff8416916318160ddd9160048083019260209291908290030181865afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906137ca565b8160800181815250508173ffffffffffffffffffffffffffffffffffffffff1663443ec74d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d91906138d5565b81610100019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff16635ee04d786040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed491906138d5565b81610120019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166380935aa96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7b91906138d5565b81610140019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166319d8ac616040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110229190613a6b565b64ffffffffff16816101600181815250508173ffffffffffffffffffffffffffffffffffffffff1663e47a882d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561107e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a29190613a92565b60030b610180820152604080517fc89c74ea000000000000000000000000000000000000000000000000000000008152815173ffffffffffffffffffffffffffffffffffffffff85169263c89c74ea92600480820193918290030181865afa158015611112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113691906137f8565b5076ffffffffffffffffffffffffffffffffffffffffffffff166101a08201819052611171906ec097ce7bc90715b34b9f100000000061388f565b6101e08201526101a081015161020082018190526080820151670de0b6b3a76400009161119d91613878565b6111a7919061388f565b8160a00181815250508173ffffffffffffffffffffffffffffffffffffffff166301d22ccd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f91906138d5565b816101c0019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166392eb16566040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c691906137ca565b6102208201526101408101516040517fe72ef91b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015283821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063e72ef91b90604401610aa060405180830381865afa158015611369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138d9190613d50565b610260820152919050565b6040517f841d2699000000000000000000000000000000000000000000000000000000008152600481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063841d269990602401602060405180830381865afa158015611426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144a91906138d5565b92915050565b80516060908067ffffffffffffffff81111561146e5761146e613469565b6040519080825280602002602001820160405280156114a757816020015b6114946118e7565b81526020019060019003908161148c5790505b50915060005b81811015610b09576114d78482815181106114ca576114ca61379b565b6020026020010151611718565b8382815181106114e9576114e961379b565b602002602001018190525080806114ff906138f2565b9150506114ad565b61156c604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6115768383610481565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631cba00238573ffffffffffffffffffffffffffffffffffffffff166380935aa96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611601573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162591906138d5565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff90911660048201526024016103c0604051808303816000875af1158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b5919061400e565b9050670de0b6b3a764000081610160015183604001516116d59190613878565b6116df919061388f565b60608301526101808101516040830151670de0b6b3a76400009161170291613878565b61170c919061388f565b60808301525092915050565b6117206118e7565b61172982610bc3565b6101408101516040517f0208dbb000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529192507f00000000000000000000000000000000000000000000000000000000000000001690630208dbb090602401611920604051808303816000875af11580156117c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e59190614575565b610240820181905260e00151610160015160a0820151670de0b6b3a76400009161180e91613878565b611818919061388f565b60c082015261024081015160e00151610180015160a0820151670de0b6b3a76400009161184491613878565b61184e919061388f565b60e0820152919050565b606061027c61016e610b10565b60405180604001604052806118786118e7565b81526020016118e2604051806101200160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b905290565b604051806102800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001600060ff16815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016119ea6119f7565b81526020016118e2611c63565b604080516101208082018352600080835283516101c0810185528181526020818101839052818601839052855160a080820188528482528183018590529681018490526060808201859052608080830186905290840191909152820183905294810182905260c0810182905260e0810182905261010081018290529182018190526101408201819052610160820181905261018082018190526101a082015290918201908152602001611acb6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001611b8760405180610220016040528060001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611bdb6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611c0b6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001611c496040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611c56611d71565b81526020016118e2611def565b604051806101a001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611d0160405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d5760405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d64611fcc565b81526020016118e2611fcc565b604051806101e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001611dcd612050565b8152602001600081526020016000815260200160008152602001600081525090565b6040518061028001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001611eae60405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611f0460405180610120016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611f68604051806101600160405280600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001611d57604051806101600160405280600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806102200160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016118e2612108565b6040518060c001604052806000151581526020016000151581526020016000151581526020016120a86040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016120df6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016118e260405180606001604052806000815260200160008152602001600081525090565b6040518060600160405280600081526020016121626040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b81526020016118e26040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60005b838110156121d85781810151838201526020016121c0565b50506000910152565b600081518084526121f98160208601602086016121bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b805182526020810151612256602084018273ffffffffffffffffffffffffffffffffffffffff169052565b50604081015161227e604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608101516122dc606084018273ffffffffffffffffffffffffffffffffffffffff808251168352806020830151166020840152806040830151166040840152806060830151166060840152806080830151166080840152505050565b5060808101516101006123068185018373ffffffffffffffffffffffffffffffffffffffff169052565b60a083015191506101206123318186018473ffffffffffffffffffffffffffffffffffffffff169052565b60c0840151925061014061235c8187018573ffffffffffffffffffffffffffffffffffffffff169052565b60e0850151610160878101919091529285015161018080880191909152918501516101a080880191909152908501516101c0870152918401516101e0860152830151610200850152909101516102209092019190915250565b80511515825260208101516123ce602084018215159052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161243f8285018273ffffffffffffffffffffffffffffffffffffffff169052565b50506101408181015173ffffffffffffffffffffffffffffffffffffffff1690830152610160808201519083015261018080820151908301526101a080820151908301526101c080820151908301526101e0808201519083015261020090810151910152565b8051151582526020810151151560208301526040810151151560408301526060810151612500606084018280518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b506080818101518051610100850152602081015161012085015260408101516101408501526060810151610160850152908101516101808401525060a0015180516101a083015260208101516101c0830152604001516101e090910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201516125c98285018215159052565b5050610140808201516125de828501826124a5565b50506101608101516103408301526101808101516103608301526101a08101516103808301526101c001516103a090910152565b805182526020808201518184015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e080880151818a015261010080890151818b0152610120808a0151908b0152610140808a0151908b0152610160808a0151908b0152610180808a0151908b01526101a0808a0151908b01526101c0808a015180511515828d0152988901516101e08c0152968801516102008b0152948701516102208a015292860151610240890152908501516102608801528401516102808701528301516102a08601528201516102c08501529050506101e0810151805115156102e0840152602081015161030084015260408101516103208401526060810151610340840152608081015161036084015260a081015161038084015260c08101516103a084015260e08101516103c08401526101008101516103e0840152506102008101516127ea6104008401828051151582526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015181840152505050565b5061022081015180511515610560840152602081015161058084015260408101516105a084015260608101516105c084015260808101516105e084015260a081015161060084015260c081015161062084015260e08101516106408401526101008101516106608401526101208101516106808401526101408101516106a08401525061024081015180516106c08401526020808201516106e085015260408083015161070086015260608084015161072087015260808085015161074088015260a08086015161076089015260c0808701516107808a015260e08701516107a08a01526101008701516107c08a01526101208701516107e08a01526101408701516108008a01526101608701516108208a01526101808701516108408a01526101a08701516108608a01526101c08701516108808a01526101e08701516108a08a015261020087015180516108c08b015280870151805173ffffffffffffffffffffffffffffffffffffffff9081166108e08d0152818901516109008d0152818801516109208d0152818701516109408d0152908501516109608c01529086015180519091166109808b0152958601516109a08a0152938501516109c0890152918401516109e0880152830151610a00870152820151610a208601520151610a408401525061026001518051610a60830152602080820151610a80840152604080830151610aa0850152606080840151610ac0860152608080850151610ae087015260a080860151610b0088015260c080870151610b2089015260e0870151610b40890152610100870151610b60890152610120870151610b80890152610140870151610ba0890152610160870151610bc0890152610180870151610be08901526101a0870151610c008901526101c0870151610c208901526101e0870151610c40890152610200909601518051610c6089015280860151805173ffffffffffffffffffffffffffffffffffffffff908116610c808b015281880151610ca08b015281870151610cc08b015281860151610ce08b015290840151610d008a0152908501518051909116610d2089015294850151610d4088015292840151610d6087015290830151610d80860152820151610da0850152810151610dc08401520151610de090910152565b505050565b805173ffffffffffffffffffffffffffffffffffffffff1682526020810151612b66602084018261222b565b5060408181015180516102608501526020810151610280850152908101516102a08401526060908101516102c0840152810151612ba76102e08401826123b5565b5060808181015180516105008501526020810151610520850152604081015161054085015260608101516105608501529081015161058084015260a08101516105a084015260c08101516105c084015260e08101516105e08401526101008101516106008401525060a081015180516106208401526020810151610640840152604081015161066084015260608101516106808401525060c081015180516106a084015260208101516106c084015260408101516106e08401526060810151610700840152608081015161072084015260a08101516107408401525060e0810151612c9661076084018261255f565b50610100810151612b35610b20840182612612565b8051151582526020818101518382015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e080880151818a015261010080890151818b0152610120808a015180511515828d0152988901516101408c0152968801516101608b0152948701516101808a0152928601516101a0890152908501516101c08801528401516101e0870152830151610200860152820151610220850152905050610140810151805115156102408401526020810151610260840152604081015161028084015260608101516102a084015260808101516102c084015260a08101516102e084015260c081015161030084015260e081015161032084015261010081015161034084015250610160810151612f22610360840182805182526020808201518184015260408083015181850152606080840151818601526080808501518187015260a0808601518188015260c0808701518189015260e08088015190890152610100808801519089015261012080880151908901526101408088015190890152610160808801519089015261018080880151908901526101a080880151908901526101c080880151908901526101e080880151908901526102009687015180519789019790975286860151805173ffffffffffffffffffffffffffffffffffffffff9081166102208b0152818801516102408b0152818701516102608b0152818601516102808b0152908401516102a08a01529685015180519097166102c0890152948601516102e08801529285015161030087015290840151610320860152830151610340850152820151610360840152015161038090910152565b5061018090810151805161070084015260208082015161072085015260408083015161074086015260608084015161076087015260808085015161078088015260a0808601516107a089015260c0808701516107c08a015260e08701516107e08a01526101008701516108008a01526101208701516108208a01526101408701516108408a01526101608701516108608a0152968601516108808901526101a08601516108a08901526101c08601516108c08901526101e08601516108e089015261020090950151805161090089015280850151805173ffffffffffffffffffffffffffffffffffffffff9081166109208b0152818701516109408b0152818601516109608b0152818501516109808b0152908301516109a08a01529084015180519091166109c0890152938401516109e088015291830151610a00870152820151610a20860152810151610a4085015290810151610a608401520151610a8090910152565b805173ffffffffffffffffffffffffffffffffffffffff168252600061260060208301518160208601526130be828601826121e1565b915050604083015184820360408601526130d882826121e1565b91505060608301516130ef606086018260ff169052565b506080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401516131408287018273ffffffffffffffffffffffffffffffffffffffff169052565b50506101208381015173ffffffffffffffffffffffffffffffffffffffff9081169186019190915261014080850151821690860152610160808501519086015261018080850151908601526101a080850151908601526101c080850151909116908501526101e0808401519085015261020080840151908501526102208084015190850152610240808401516131d882870182612b3a565b505061026083015161037d611b60860182612cab565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613261577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261324f858351613088565b94509285019290850190600101613215565b5092979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461329057600080fd5b50565b6000602082840312156132a557600080fd5b81356132b08161326e565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613261577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184528151610140815181885261332382890182613088565b9150508782015191506133a38888018373ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b95505092850192908501906001016132de565b600080604083850312156133c957600080fd5b82356133d48161326e565b915060208301356133e48161326e565b809150509250929050565b610120810161144a828473ffffffffffffffffffffffffffffffffffffffff81511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156134bc576134bc613469565b60405290565b6040516060810167ffffffffffffffff811182821017156134bc576134bc613469565b60405160a0810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610220810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101a0810167ffffffffffffffff811182821017156134bc576134bc613469565b60405160c0810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101e0810167ffffffffffffffff811182821017156134bc576134bc613469565b6040516101c0810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610160810167ffffffffffffffff811182821017156134bc576134bc613469565b604051610280810167ffffffffffffffff811182821017156134bc576134bc613469565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561364a5761364a613469565b604052919050565b600067ffffffffffffffff82111561366c5761366c613469565b5060051b60200190565b6000602080838503121561368957600080fd5b823567ffffffffffffffff8111156136a057600080fd5b8301601f810185136136b157600080fd5b80356136c46136bf82613652565b613603565b81815260059190911b820183019083810190878311156136e357600080fd5b928401925b8284101561370a5783356136fb8161326e565b825292840192908401906136e8565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561376357835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613731565b50909695505050505050565b6020815260006132b06020830184613088565b60006020828403121561379457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156137dc57600080fd5b5051919050565b805180151581146137f357600080fd5b919050565b6000806040838503121561380b57600080fd5b825176ffffffffffffffffffffffffffffffffffffffffffffff8116811461383257600080fd5b9150613840602084016137e3565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761144a5761144a613849565b6000826138c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80516137f38161326e565b6000602082840312156138e757600080fd5b81516132b08161326e565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361392357613923613849565b5060010190565b6000602080838503121561393d57600080fd5b825167ffffffffffffffff81111561395457600080fd5b8301601f8101851361396557600080fd5b80516139736136bf82613652565b81815260059190911b8201830190838101908783111561399257600080fd5b928401925b8284101561370a5783516139aa8161326e565b82529284019290840190613997565b6000602082840312156139cb57600080fd5b815167ffffffffffffffff808211156139e357600080fd5b818401915084601f8301126139f757600080fd5b815181811115613a0957613a09613469565b613a3a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601613603565b9150808252856020828501011115613a5157600080fd5b613a628160208401602086016121bd565b50949350505050565b600060208284031215613a7d57600080fd5b815164ffffffffff811681146132b057600080fd5b600060208284031215613aa457600080fd5b81518060030b81146132b057600080fd5b60006101208284031215613ac857600080fd5b613ad0613498565b9050613adb826137e3565b81526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600060e08284031215613b4757600080fd5b60405160e0810181811067ffffffffffffffff82111715613b6a57613b6a613469565b80604052508091508251613b7d8161326e565b808252506020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201525092915050565b60008183036101a0811215613bd857600080fd5b613be06134c2565b91508251825260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215613c1657600080fd5b50613c1f6134e5565b6020830151613c2d8161326e565b8082525060408301516020820152606083015160408201526080830151606082015260a0830151608082015280602083015250613c6d8360c08401613b35565b604082015292915050565b60006103a08284031215613c8b57600080fd5b613c93613508565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e080840151908201529050610200613d4684828501613bc4565b9082015292915050565b6000610aa08284031215613d6357600080fd5b613d6b61352c565b613d74836137e3565b81526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120613dd785828601613ab5565b90820152613de9846102408501613ab5565b610140820152613dfd846103608501613c78565b610160820152613e11846107008501613c78565b6101808201529392505050565b600060a08284031215613e3057600080fd5b613e386134e5565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b6000818303610200811215613e8057600080fd5b613e88613550565b9150613e93836137e3565b8252613ea1602084016137e3565b6020830152613eb2604084016137e3565b6040830152613ec48460608501613e1e565b6060830152613ed7846101008501613e1e565b608083015260607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6082011215613f0c57600080fd5b50613f156134c2565b6101a083015181526101c083015160208201526101e083015160408201528060a08301525092915050565b60006103c08284031215613f5357600080fd5b613f5b613573565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e0820152610100808301518183015250610120613fc18184016137e3565b90820152610140613fd484848301613e6c565b908201526103408201516101608201526103608201516101808201526103808201516101a08201526103a0909101516101c0820152919050565b60006103c0828403121561402157600080fd5b6132b08383613f40565b600060a0828403121561403d57600080fd5b6140456134e5565b905081516140528161326e565b815260208201516140628161326e565b602082015260408201516140758161326e565b604082015260608201516140888161326e565b6060820152608082015161409b8161326e565b608082015292915050565b600061024082840312156140b957600080fd5b6140c1613597565b9050815181526140d3602083016138ca565b60208201526140e4604083016138ca565b60408201526140f6836060840161402b565b60608201526101006141098184016138ca565b608083015261012061411c8185016138ca565b60a084015261014061412f8186016138ca565b60c08501526101608086015160e086015261018080870151858701526101a0945084870151848701526101c0870151838701526101e0870151828701526102008701518187015250505050610220830151818301525092915050565b60006080828403121561419d57600080fd5b6040516080810181811067ffffffffffffffff821117156141c0576141c0613469565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000610220828403121561420457600080fd5b61420c613508565b9050614217826137e3565b8152614225602083016137e3565b602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101206142808184016138ca565b908201526101406142928382016138ca565b90820152610160828101519082015261018080830151908201526101a080830151908201526101c080830151908201526101e080830151908201526102009182015191810191909152919050565b600061012082840312156142f357600080fd5b6142fb613498565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600060c0828403121561436b57600080fd5b614373613550565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015292915050565b600061016082840312156143c457600080fd5b6143cc6135bb565b90506143d7826137e3565b81526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525061012080830151818301525061014080830151818301525092915050565b6000610e00828403121561445c57600080fd5b6144646135df565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e08201526101008083015181830152506101208083015181830152506101408083015181830152506101608083015181830152506101808083015181830152506101a08083015181830152506101c061450784828501613ab5565b90820152614519836102e08401613ab5565b6101e082015261452d8361040084016143b1565b6102008201526145418361056084016143b1565b610220820152614555836106c08401613c78565b61024082015261456983610a608401613c78565b61026082015292915050565b6000611920828403121561458857600080fd5b614590613498565b614599836138ca565b81526145a884602085016140a6565b60208201526145bb84610260850161418b565b60408201526145ce846102e085016141f1565b60608201526145e18461050085016142e0565b60808201526145f484610620850161418b565b60a0820152614607846106a08501614359565b60c082015261461a846107608501613f40565b60e082015261462d84610b208501614449565b610100820152939250505056fea26469706673582212203b313be2b01bd288e02d5e8f41a0cfcfec3e30f83b4090489d47b754dee550bf64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAllSmartLendingEntireDatas()": {
        "details": "expected to be called via callStatic",
        "returns": {
          "datas_": "An array of structs containing all the data for all SmartLendings"
        }
      },
      "getAllSmartLendingEntireViewDatas()": {
        "returns": {
          "datas_": "An array of structs containing all the data for all SmartLendings"
        }
      },
      "getSmartLendingEntireData(address)": {
        "details": "expected to be called via callStatic",
        "params": {
          "smartLending_": "The address of the SmartLending"
        },
        "returns": {
          "data_": "A struct containing all the data for the SmartLending"
        }
      },
      "getSmartLendingEntireDatas(address[])": {
        "details": "expected to be called via callStatic",
        "params": {
          "smartLendings_": "An array of SmartLending addresses"
        },
        "returns": {
          "datas_": "An array of structs containing all the data for each SmartLending"
        }
      },
      "getSmartLendingEntireViewData(address)": {
        "params": {
          "smartLending_": "The address of the SmartLending"
        },
        "returns": {
          "data_": "A struct containing all the data for the SmartLending"
        }
      },
      "getSmartLendingEntireViewDatas(address[])": {
        "params": {
          "smartLendings_": "An array of SmartLending addresses"
        },
        "returns": {
          "datas_": "An array of structs containing all the data for each SmartLending"
        }
      },
      "getUserPosition(address,address)": {
        "details": "expected to be called via callStatic"
      },
      "getUserPositions(address)": {
        "details": "expected to be called via callStatic"
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "FluidSmartLendingResolver__AddressZero()": [
        {
          "notice": "thrown if an input param address is zero"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "getAllSmartLendingAddresses()": {
        "notice": "List of all existing SmartLending tokens"
      },
      "getAllSmartLendingEntireDatas()": {
        "notice": "Get the entire data for all SmartLendings"
      },
      "getAllSmartLendingEntireViewDatas()": {
        "notice": "Get the entire data for all SmartLendings, EXCEPT underlying DexEntireData. use write method for that."
      },
      "getSmartLendingAddress(uint256)": {
        "notice": "Get the address of a SmartLending for a certain dexId. address zero if no SmartLending exists for the dex."
      },
      "getSmartLendingEntireData(address)": {
        "notice": "Get the entire data for a SmartLending, incl. underlying DexEntireData and totalUnderlyingAssets for each token"
      },
      "getSmartLendingEntireDatas(address[])": {
        "notice": "Get the entire data for multiple SmartLendings"
      },
      "getSmartLendingEntireViewData(address)": {
        "notice": "Get the entire data for a SmartLending, EXCEPT underlying DexEntireData. use write method for that."
      },
      "getSmartLendingEntireViewDatas(address[])": {
        "notice": "Get the entire view data for multiple SmartLendings, EXCEPT underlying DexEntireData. use write method for that."
      },
      "getUserPosition(address,address)": {
        "notice": "gets a user position at a certain SmartLending incl. underlyingAssetsToken0 and underlyingAssetsToken1"
      },
      "getUserPositionView(address,address)": {
        "notice": "gets a user position at a certain SmartLending. EXCLUDING underlyingAssetsToken0 and underlyingAssetsToken1.          use write method for that."
      },
      "getUserPositions(address)": {
        "notice": "gets all Smart lendings entire data and all user positions for each.         incl. underlying Dex (=`getSmartLendingEntireViewData()` + DexEntireData) and underlyingAssetsToken0 and underlyingAssetsToken1."
      },
      "getUserPositionsView(address)": {
        "notice": "gets all Smart lendings entire data and all user positions for each.         Excluding underlying DexEntireData and underlyingAssetsToken0 and underlyingAssetsToken1. use write method for that."
      }
    },
    "notice": "Fluid Smart Lending resolver Implements various view-only methods to give easy access to Smart Lending protocol data.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}