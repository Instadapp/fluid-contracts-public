{
  "address": "0x9A4aa6CA16334C8D24961386D1cE980Ab72e0DB3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "infoName_",
          "type": "string"
        },
        {
          "internalType": "contract IWstETH",
          "name": "wstETH_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "errorId_",
          "type": "uint256"
        }
      ],
      "name": "FluidOracleError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "centerPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "infoName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wstETHOracleData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wstETHExchangeRate_",
          "type": "uint256"
        },
        {
          "internalType": "contract IWstETH",
          "name": "wstETH_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb0bfa2350a775b3090b5a7773f5f87bef80e0a1aab2b92ca9863863e0744c631",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0Ed35B1609Ec45c7079E80d11149a52717e4859A",
    "contractAddress": null,
    "transactionIndex": 13,
    "gasUsed": "324309",
    "logsBloom": "0x
    "blockHash": "0x09f2727ecadf784be6cf762b062fdd61931fd2d2009c59694a2a06f5144e9036",
    "transactionHash": "0xb0bfa2350a775b3090b5a7773f5f87bef80e0a1aab2b92ca9863863e0744c631",
    "logs": [],
    "blockNumber": 20777481,
    "cumulativeGasUsed": "3387285",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "WSTETH for 1 STETH",
    "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
  ],
  "numDeployments": 1,
  "solcInputHash": "637b2aea1e6f29bfd7ab5c6d38c6bd97",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"infoName_\",\"type\":\"string\"},{\"internalType\":\"contract IWstETH\",\"name\":\"wstETH_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorId_\",\"type\":\"uint256\"}],\"name\":\"FluidOracleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"centerPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"infoName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wstETHOracleData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wstETHExchangeRate_\",\"type\":\"uint256\"},{\"internalType\":\"contract IWstETH\",\"name\":\"wstETH_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"centerPrice()\":{\"details\":\"This function is marked as non-constant (potentially state-changing) to allow flexibility in price fetching mechanisms.      While typically used as a read-only operation, this design permits write operations if needed for certain token pairs      (e.g., fetching up-to-date exchange rates that may require state changes).\",\"returns\":{\"price_\":\"The current price ratio of token1 to token0, expressed with 27 decimal places\"}}},\"title\":\"WstETHInvertCenterPrice\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"centerPrice()\":{\"notice\":\"Retrieves the center price for the pool\"},\"constructor\":{\"notice\":\"constructor sets the wstETH `wstETH_` token address.\"},\"infoName()\":{\"notice\":\"helper string to easily identify the oracle. E.g. token symbols\"},\"wstETHOracleData()\":{\"notice\":\"returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method\"}},\"notice\":\"Gets the exchange rate between wstETH and stETH directly from the wstETH contract: wstETH per stETH.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/centerPrices/wstETHInvertCenterPrice.sol\":\"WstETHInvertCenterPrice\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/oracle/centerPrices/wstETHInvertCenterPrice.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { FluidCenterPrice } from \\\"../fluidCenterPrice.sol\\\";\\nimport { WstETHInvertOracleImpl } from \\\"../implementations/wstETHInvertOracleImpl.sol\\\";\\nimport { IWstETH } from \\\"../interfaces/external/IWstETH.sol\\\";\\n\\n/// @title   WstETHInvertCenterPrice\\n/// @notice  Gets the exchange rate between wstETH and stETH directly from the wstETH contract: wstETH per stETH.\\ncontract WstETHInvertCenterPrice is FluidCenterPrice, WstETHInvertOracleImpl {\\n    /// @notice constructor sets the wstETH `wstETH_` token address.\\n    constructor(string memory infoName_, IWstETH wstETH_) WstETHInvertOracleImpl(wstETH_) FluidCenterPrice(infoName_) {}\\n\\n    /// @inheritdoc FluidCenterPrice\\n    function centerPrice() external view override returns (uint256 price_) {\\n        return _getWstETHExchangeRate();\\n    }\\n}\\n\",\"keccak256\":\"0x86444a44f8b5a8ab2fbab67e5aa708f1dc650c3c8c43672c09069b591541eb7a\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/error.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\ncontract Error {\\n    error FluidOracleError(uint256 errorId_);\\n}\\n\",\"keccak256\":\"0xc7b7e945238168d216c480e9dd4fbaaf8780645d58c47f9abdaa4f29910568fe\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/errorTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nlibrary ErrorTypes {\\n    /***********************************|\\n    |           FluidOracleL2           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when sequencer on a L2 has an outage and grace period has not yet passed.\\n    uint256 internal constant FluidOracleL2__SequencerOutage = 60000;\\n\\n    /***********************************|\\n    |     UniV3CheckCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the delta between main price source and check rate source is exceeding the allowed delta\\n    uint256 internal constant UniV3CheckCLRSOracle__InvalidPrice = 60001;\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant UniV3CheckCLRSOracle__InvalidParams = 60002;\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant UniV3CheckCLRSOracle__ExchangeRateZero = 60003;\\n\\n    /***********************************|\\n    |           FluidOracle             | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid info name is passed into a fluid oracle (e.g. not set or too long)\\n    uint256 internal constant FluidOracle__InvalidInfoName = 60010;\\n\\n    /***********************************|\\n    |            sUSDe Oracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant SUSDeOracle__InvalidParams = 60102;\\n\\n    /***********************************|\\n    |           Pendle Oracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant PendleOracle__InvalidParams = 60201;\\n\\n    /// @notice thrown when the Pendle market Oracle has not been initialized yet\\n    uint256 internal constant PendleOracle__MarketNotInitialized = 60202;\\n\\n    /// @notice thrown when the Pendle market does not have 18 decimals\\n    uint256 internal constant PendleOracle__MarketInvalidDecimals = 60203;\\n\\n    /// @notice thrown when the Pendle market returns an unexpected price\\n    uint256 internal constant PendleOracle__InvalidPrice = 60204;\\n\\n    /***********************************|\\n    |    CLRS2UniV3CheckCLRSOracleL2    | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant CLRS2UniV3CheckCLRSOracleL2__ExchangeRateZero = 60301;\\n\\n    /***********************************|\\n    |    Ratio2xFallbackCLRSOracleL2    | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant Ratio2xFallbackCLRSOracleL2__ExchangeRateZero = 60311;\\n\\n    /***********************************|\\n    |            WeETHsOracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WeETHsOracle__InvalidParams = 60321;\\n\\n    /***********************************|\\n    |          Chainlink Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant ChainlinkOracle__InvalidParams = 61001;\\n\\n    /***********************************|\\n    |          UniswapV3 Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant UniV3Oracle__InvalidParams = 62001;\\n\\n    /// @notice thrown when constructor is called with invalid ordered seconds agos values\\n    uint256 internal constant UniV3Oracle__InvalidSecondsAgos = 62002;\\n\\n    /// @notice thrown when constructor is called with invalid delta values > 100%\\n    uint256 internal constant UniV3Oracle__InvalidDeltas = 62003;\\n\\n    /***********************************|\\n    |            WstETh Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WstETHOracle__InvalidParams = 63001;\\n\\n    /***********************************|\\n    |           Redstone Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant RedstoneOracle__InvalidParams = 64001;\\n\\n    /***********************************|\\n    |          Fallback Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant FallbackOracle__InvalidParams = 65001;\\n\\n    /***********************************|\\n    |       FallbackCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the fallback oracle source (if enabled)\\n    uint256 internal constant FallbackCLRSOracle__ExchangeRateZero = 66001;\\n\\n    /***********************************|\\n    |         WstETHCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the fallback oracle source (if enabled)\\n    uint256 internal constant WstETHCLRSOracle__ExchangeRateZero = 67001;\\n\\n    /***********************************|\\n    |        CLFallbackUniV3Oracle      | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the uniV3 rate\\n    uint256 internal constant CLFallbackUniV3Oracle__ExchangeRateZero = 68001;\\n\\n    /***********************************|\\n    |  WstETHCLRS2UniV3CheckCLRSOracle  | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the uniV3 rate\\n    uint256 internal constant WstETHCLRS2UniV3CheckCLRSOracle__ExchangeRateZero = 69001;\\n\\n    /***********************************|\\n    |             WeETh Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WeETHOracle__InvalidParams = 70001;\\n}\\n\",\"keccak256\":\"0x06ace30df91ca3848a99ee29faf9ea93197074f41b9bf25564e8d80c84339f77\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/fluidCenterPrice.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IFluidCenterPrice } from \\\"./interfaces/iFluidCenterPrice.sol\\\";\\nimport { ErrorTypes } from \\\"./errorTypes.sol\\\";\\nimport { Error as OracleError } from \\\"./error.sol\\\";\\n\\n/// @title   FluidCenterPrice\\n/// @notice  Base contract that any Fluid Center Price must implement\\nabstract contract FluidCenterPrice is IFluidCenterPrice, OracleError {\\n    /// @dev short helper string to easily identify the center price oracle. E.g. token symbols\\n    //\\n    // using a bytes32 because string can not be immutable.\\n    bytes32 private immutable _infoName;\\n\\n    constructor(string memory infoName_) {\\n        if (bytes(infoName_).length > 32 || bytes(infoName_).length == 0) {\\n            revert FluidOracleError(ErrorTypes.FluidOracle__InvalidInfoName);\\n        }\\n\\n        // convert string to bytes32\\n        bytes32 infoNameBytes32_;\\n        assembly {\\n            infoNameBytes32_ := mload(add(infoName_, 32))\\n        }\\n        _infoName = infoNameBytes32_;\\n    }\\n\\n    /// @inheritdoc IFluidCenterPrice\\n    function infoName() external view returns (string memory) {\\n        // convert bytes32 to string\\n        uint256 length_;\\n        while (length_ < 32 && _infoName[length_] != 0) {\\n            length_++;\\n        }\\n        bytes memory infoNameBytes_ = new bytes(length_);\\n        for (uint256 i; i < length_; i++) {\\n            infoNameBytes_[i] = _infoName[i];\\n        }\\n        return string(infoNameBytes_);\\n    }\\n\\n    /// @inheritdoc IFluidCenterPrice\\n    function centerPrice() external view virtual returns (uint256 price_);\\n}\\n\",\"keccak256\":\"0x892a7c3b22c762a5eaef171e62eb5b15502f71ae7d6658fb786bd7b6c0495666\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/wstETHInvertOracleImpl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IWstETH } from \\\"../interfaces/external/IWstETH.sol\\\";\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { Error as OracleError } from \\\"../error.sol\\\";\\nimport { OracleUtils } from \\\"../libraries/oracleUtils.sol\\\";\\n\\n/// @title   wstETH Oracle Invert Implementation\\n/// @notice  This contract is used to get the exchange rate between wstETH and stETH: wstETH per stETH\\nabstract contract WstETHInvertOracleImpl is OracleError {\\n    /// @notice constant value for price scaling to reduce gas usage\\n    uint256 internal immutable _WSTETH_PRICE_SCALER_MULTIPLIER;\\n\\n    /// @notice WSTETH contract, e.g. on mainnet 0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0\\n    IWstETH internal immutable _WSTETH;\\n\\n    /// @notice constructor sets the wstETH `wstETH_` token address.\\n    constructor(IWstETH wstETH_) {\\n        if (address(wstETH_) == address(0)) {\\n            revert FluidOracleError(ErrorTypes.WstETHOracle__InvalidParams);\\n        }\\n\\n        _WSTETH = wstETH_;\\n\\n        _WSTETH_PRICE_SCALER_MULTIPLIER = 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - 18); // e.g. 1e9\\n    }\\n\\n    /// @notice         Get the exchange rate from wstETH contract\\n    /// @return rate_   The exchange rate in `OracleUtils.RATE_OUTPUT_DECIMALS`\\n    function _getWstETHExchangeRate() internal view returns (uint256 rate_) {\\n        return _WSTETH.tokensPerStEth() * _WSTETH_PRICE_SCALER_MULTIPLIER;\\n    }\\n\\n    /// @notice returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method\\n    function wstETHOracleData() public view returns (uint256 wstETHExchangeRate_, IWstETH wstETH_) {\\n        return (_getWstETHExchangeRate(), _WSTETH);\\n    }\\n}\\n\",\"keccak256\":\"0xf3f55359c838a7a7358c5c09c3b4f4a538fff8f42c48ba864de309b763e95e2a\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/interfaces/external/IWstETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IWstETH {\\n    /**\\n     * @notice Get amount of stETH for 1 wstETH\\n     * @return Amount of stETH for 1 wstETH\\n     */\\n    function stEthPerToken() external view returns (uint256);\\n\\n    /**\\n     * @notice Get amount of wstETH for 1 stETH\\n     * @return Amount of wstETH for 1 stETH\\n     */\\n    function tokensPerStEth() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfe6c8477bea4b01e693d5a8ca635e795e203fe53ddee0fb30f3dcf9a0e5f4f61\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/iFluidCenterPrice.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IFluidCenterPrice {\\n    /// @notice Retrieves the center price for the pool\\n    /// @dev This function is marked as non-constant (potentially state-changing) to allow flexibility in price fetching mechanisms.\\n    ///      While typically used as a read-only operation, this design permits write operations if needed for certain token pairs\\n    ///      (e.g., fetching up-to-date exchange rates that may require state changes).\\n    /// @return price_ The current price ratio of token1 to token0, expressed with 27 decimal places\\n    function centerPrice() external view returns (uint256 price_);\\n\\n    /// @notice helper string to easily identify the oracle. E.g. token symbols\\n    function infoName() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xe44d8f0100d30fb270c7bc9257d0d81240ba8f5d97c137e4edcea78bb2d4f305\",\"license\":\"MIT\"},\"contracts/oracle/libraries/oracleUtils.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @title Oracle utils library\\n/// @notice implements common utility methods for Fluid Oracles\\nlibrary OracleUtils {\\n    /// @dev The scaler for max delta point math (100%)\\n    uint256 internal constant HUNDRED_PERCENT_DELTA_SCALER = 10_000;\\n    /// @dev output precision of rates\\n    uint256 internal constant RATE_OUTPUT_DECIMALS = 27;\\n\\n    /// @dev checks if `mainSourceRate_` is within a `maxDeltaPercent_` of `checkSourceRate_`. Returns true if so.\\n    function isRateOutsideDelta(\\n        uint256 mainSourceRate_,\\n        uint256 checkSourceRate_,\\n        uint256 maxDeltaPercent_\\n    ) internal pure returns (bool) {\\n        uint256 offset_ = (checkSourceRate_ * maxDeltaPercent_) / HUNDRED_PERCENT_DELTA_SCALER;\\n        return (mainSourceRate_ > (checkSourceRate_ + offset_) || mainSourceRate_ < (checkSourceRate_ - offset_));\\n    }\\n}\\n\",\"keccak256\":\"0x968b1a0606875abd523895c5075cf6c34c296919e77b0da7dd952374398e2a4c\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200081f3803806200081f83398101604081905262000034916200010a565b80826020815111806200004657508051155b156200006e5760405163c82fc46560e01b815261ea6a60048201526024015b60405180910390fd5b602001516080526001600160a01b038116620000a25760405163c82fc46560e01b815261f619600482015260240162000065565b6001600160a01b03811660c052620000bd6012601b62000208565b620000ca90600a62000321565b60a0525062000336915050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200010557600080fd5b919050565b600080604083850312156200011e57600080fd5b82516001600160401b03808211156200013657600080fd5b818501915085601f8301126200014b57600080fd5b815181811115620001605762000160620000d7565b604051601f8201601f19908116603f011681019083821181831017156200018b576200018b620000d7565b81604052828152602093508884848701011115620001a857600080fd5b600091505b82821015620001cc5784820184015181830185015290830190620001ad565b6000848483010152809650505050620001e7818601620000ed565b925050509250929050565b634e487b7160e01b600052601160045260246000fd5b818103818111156200021e576200021e620001f2565b92915050565b600181815b8085111562000265578160001904821115620002495762000249620001f2565b808516156200025757918102915b93841c939080029062000229565b509250929050565b6000826200027e575060016200021e565b816200028d575060006200021e565b8160018114620002a65760028114620002b157620002d1565b60019150506200021e565b60ff841115620002c557620002c5620001f2565b50506001821b6200021e565b5060208310610133831016604e8410600b8410161715620002f6575081810a6200021e565b62000302838362000224565b8060001904821115620003195762000319620001f2565b029392505050565b60006200032f83836200026d565b9392505050565b60805160a05160c0516104ac620003736000396000818161021f01526102780152600061025701526000818160be015261018301526104ac6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063abd5f95d14610046578063dfaba9b514610064578063f763f7a614610096575b600080fd5b61004e6100ac565b60405161005b919061030f565b60405180910390f35b61006c610211565b6040805192835273ffffffffffffffffffffffffffffffffffffffff90911660208301520161005b565b61009e610244565b60405190815260200161005b565b606060005b60208110801561011757507f000000000000000000000000000000000000000000000000000000000000000081602081106100ee576100ee61037b565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b1561012e5780610126816103d9565b9150506100b1565b60008167ffffffffffffffff81111561014957610149610411565b6040519080825280601f01601f191660200182016040528015610173576020820181803683370190505b50905060005b8281101561020a577f000000000000000000000000000000000000000000000000000000000000000081602081106101b3576101b361037b565b1a60f81b8282815181106101c9576101c961037b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080610202816103d9565b915050610179565b5092915050565b60008061021c610253565b927f000000000000000000000000000000000000000000000000000000000000000092509050565b600061024e610253565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639576a0c86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610440565b61024e9190610459565b600060208083528351808285015260005b8181101561033c57858101830151858201604001528201610320565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361040a5761040a6103aa565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561045257600080fd5b5051919050565b8082028115828204841417610470576104706103aa565b9291505056fea264697066735822122073e3c8758e9aaabb3138fa006220b7418ce2d5d83a39a7bc6c1a746433106d5964736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063abd5f95d14610046578063dfaba9b514610064578063f763f7a614610096575b600080fd5b61004e6100ac565b60405161005b919061030f565b60405180910390f35b61006c610211565b6040805192835273ffffffffffffffffffffffffffffffffffffffff90911660208301520161005b565b61009e610244565b60405190815260200161005b565b606060005b60208110801561011757507f000000000000000000000000000000000000000000000000000000000000000081602081106100ee576100ee61037b565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b1561012e5780610126816103d9565b9150506100b1565b60008167ffffffffffffffff81111561014957610149610411565b6040519080825280601f01601f191660200182016040528015610173576020820181803683370190505b50905060005b8281101561020a577f000000000000000000000000000000000000000000000000000000000000000081602081106101b3576101b361037b565b1a60f81b8282815181106101c9576101c961037b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080610202816103d9565b915050610179565b5092915050565b60008061021c610253565b927f000000000000000000000000000000000000000000000000000000000000000092509050565b600061024e610253565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16639576a0c86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610440565b61024e9190610459565b600060208083528351808285015260005b8181101561033c57858101830151858201604001528201610320565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361040a5761040a6103aa565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561045257600080fd5b5051919050565b8082028115828204841417610470576104706103aa565b9291505056fea264697066735822122073e3c8758e9aaabb3138fa006220b7418ce2d5d83a39a7bc6c1a746433106d5964736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "centerPrice()": {
        "details": "This function is marked as non-constant (potentially state-changing) to allow flexibility in price fetching mechanisms.      While typically used as a read-only operation, this design permits write operations if needed for certain token pairs      (e.g., fetching up-to-date exchange rates that may require state changes).",
        "returns": {
          "price_": "The current price ratio of token1 to token0, expressed with 27 decimal places"
        }
      }
    },
    "title": "WstETHInvertCenterPrice",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "centerPrice()": {
        "notice": "Retrieves the center price for the pool"
      },
      "constructor": {
        "notice": "constructor sets the wstETH `wstETH_` token address."
      },
      "infoName()": {
        "notice": "helper string to easily identify the oracle. E.g. token symbols"
      },
      "wstETHOracleData()": {
        "notice": "returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method"
      }
    },
    "notice": "Gets the exchange rate between wstETH and stETH directly from the wstETH contract: wstETH per stETH.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}