{
  "address": "0xb1e243A79a6106B2034D9eD0762b03f7c99A151f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "infoName_",
          "type": "string"
        },
        {
          "internalType": "contract IWstETH",
          "name": "wstETH_",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "mainSource_",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "hops",
              "type": "uint8"
            },
            {
              "components": [
                {
                  "internalType": "contract IChainlinkAggregatorV3",
                  "name": "feed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "invertRate",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "token0Decimals",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ChainlinkStructs.ChainlinkFeedData",
              "name": "feed1",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IChainlinkAggregatorV3",
                  "name": "feed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "invertRate",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "token0Decimals",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ChainlinkStructs.ChainlinkFeedData",
              "name": "feed2",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IChainlinkAggregatorV3",
                  "name": "feed",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "invertRate",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "token0Decimals",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ChainlinkStructs.ChainlinkFeedData",
              "name": "feed3",
              "type": "tuple"
            }
          ],
          "internalType": "struct ChainlinkStructs.ChainlinkConstructorParams",
          "name": "chainlinkParams_",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IRedstoneOracle",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "invertRate",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "token0Decimals",
              "type": "uint256"
            }
          ],
          "internalType": "struct RedstoneStructs.RedstoneOracleData",
          "name": "redstoneOracle_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "errorId_",
          "type": "uint256"
        }
      ],
      "name": "FluidOracleError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FALLBACK_ORACLE_MAIN_SOURCE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainlinkOracleData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "chainlinkExchangeRate_",
          "type": "uint256"
        },
        {
          "internalType": "contract IChainlinkAggregatorV3",
          "name": "chainlinkFeed1_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "chainlinkInvertRate1_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "chainlinkExchangeRate1_",
          "type": "uint256"
        },
        {
          "internalType": "contract IChainlinkAggregatorV3",
          "name": "chainlinkFeed2_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "chainlinkInvertRate2_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "chainlinkExchangeRate2_",
          "type": "uint256"
        },
        {
          "internalType": "contract IChainlinkAggregatorV3",
          "name": "chainlinkFeed3_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "chainlinkInvertRate3_",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "chainlinkExchangeRate3_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeRate_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRateLiquidate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeRate_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExchangeRateOperate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeRate_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "infoName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redstoneOracleData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "redstoneExchangeRate_",
          "type": "uint256"
        },
        {
          "internalType": "contract IRedstoneOracle",
          "name": "redstoneOracle_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "redstoneInvertRate_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wstETHOracleData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wstETHExchangeRate_",
          "type": "uint256"
        },
        {
          "internalType": "contract IWstETH",
          "name": "wstETH_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0f25a0ac0625e89724bae81dfcf778ea5173e723b03e34f462e5fff5680fb32d",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x0Ed35B1609Ec45c7079E80d11149a52717e4859A",
    "contractAddress": null,
    "transactionIndex": 42,
    "gasUsed": "1020832",
    "logsBloom": "0x
    "blockHash": "0xea4339813c2f638c9dd662738bc63b5327e014030de6053b8c7fb80e3a9cc429",
    "transactionHash": "0x0f25a0ac0625e89724bae81dfcf778ea5173e723b03e34f462e5fff5680fb32d",
    "logs": [],
    "blockNumber": 21034550,
    "cumulativeGasUsed": "12575174",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "USD for 1 WSTETH",
    "0xf1442714E502723D5bB253B806Fd7555BEE0336C",
    1,
    {
      "hops": 1,
      "feed1": {
        "feed": "0xCfE54B5cD566aB89272946F602D76Ea879CAb4a8",
        "invertRate": false,
        "token0Decimals": 18
      },
      "feed2": {
        "feed": "0x0000000000000000000000000000000000000000",
        "invertRate": false,
        "token0Decimals": 0
      },
      "feed3": {
        "feed": "0x0000000000000000000000000000000000000000",
        "invertRate": false,
        "token0Decimals": 0
      }
    },
    {
      "oracle": "0x0000000000000000000000000000000000000000",
      "invertRate": false,
      "token0Decimals": 0
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "19beb170e1c861af78d776de54ec393b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"infoName_\",\"type\":\"string\"},{\"internalType\":\"contract IWstETH\",\"name\":\"wstETH_\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"mainSource_\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"hops\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"feed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"invertRate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"token0Decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct ChainlinkStructs.ChainlinkFeedData\",\"name\":\"feed1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"feed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"invertRate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"token0Decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct ChainlinkStructs.ChainlinkFeedData\",\"name\":\"feed2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"feed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"invertRate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"token0Decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct ChainlinkStructs.ChainlinkFeedData\",\"name\":\"feed3\",\"type\":\"tuple\"}],\"internalType\":\"struct ChainlinkStructs.ChainlinkConstructorParams\",\"name\":\"chainlinkParams_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IRedstoneOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"invertRate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"token0Decimals\",\"type\":\"uint256\"}],\"internalType\":\"struct RedstoneStructs.RedstoneOracleData\",\"name\":\"redstoneOracle_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorId_\",\"type\":\"uint256\"}],\"name\":\"FluidOracleError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FALLBACK_ORACLE_MAIN_SOURCE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlinkOracleData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainlinkExchangeRate_\",\"type\":\"uint256\"},{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"chainlinkFeed1_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"chainlinkInvertRate1_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"chainlinkExchangeRate1_\",\"type\":\"uint256\"},{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"chainlinkFeed2_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"chainlinkInvertRate2_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"chainlinkExchangeRate2_\",\"type\":\"uint256\"},{\"internalType\":\"contract IChainlinkAggregatorV3\",\"name\":\"chainlinkFeed3_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"chainlinkInvertRate3_\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"chainlinkExchangeRate3_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeRate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRateLiquidate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeRate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExchangeRateOperate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeRate_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"infoName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redstoneOracleData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"redstoneExchangeRate_\",\"type\":\"uint256\"},{\"internalType\":\"contract IRedstoneOracle\",\"name\":\"redstoneOracle_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"redstoneInvertRate_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wstETHOracleData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wstETHExchangeRate_\",\"type\":\"uint256\"},{\"internalType\":\"contract IWstETH\",\"name\":\"wstETH_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"chainlinkParams_\":\"chainlink Oracle constructor params struct.\",\"infoName_\":\"Oracle identify helper name.\",\"mainSource_\":\"which oracle to use as main source: 1 = Chainlink, 2 = Redstone (other one is fallback).\",\"redstoneOracle_\":\"Redstone Oracle data. (address can be set to zero address if using Chainlink only)\",\"wstETH_\":\"address of the wstETH contract\"}},\"getExchangeRate()\":{\"details\":\"Deprecated. Use `getExchangeRateOperate()` and `getExchangeRateLiquidate()` instead. Only implemented for      backwards compatibility.\"}},\"title\":\"WstETH Chainlink / Redstone Oracle (with fallback)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"FALLBACK_ORACLE_MAIN_SOURCE()\":{\"notice\":\"which oracle to use as main source:          - 1 = Chainlink ONLY (no fallback)          - 2 = Chainlink with Redstone Fallback          - 3 = Redstone with Chainlink Fallback\"},\"chainlinkOracleData()\":{\"notice\":\"returns all Chainlink oracle related data as utility for easy off-chain use / block explorer in a single view method\"},\"constructor\":{\"notice\":\"sets the wstETH address, main source, Chainlink Oracle and Redstone Oracle data.\"},\"getExchangeRateLiquidate()\":{\"notice\":\"Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for liquidations\"},\"getExchangeRateOperate()\":{\"notice\":\"Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for operates\"},\"infoName()\":{\"notice\":\"helper string to easily identify the oracle. E.g. token symbols\"},\"redstoneOracleData()\":{\"notice\":\"returns all Redstone oracle related data as utility for easy off-chain use / block explorer in a single view method\"},\"wstETHOracleData()\":{\"notice\":\"returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method\"}},\"notice\":\"Gets the exchange rate between the underlying asset and the peg asset by using:          wstETH Oracle price in combination with rate from Chainlink price feeds (or Redstone as fallback),          hopping the 2 rates into 1 rate.          e.g. when going from wstETH to USDT:          wstETH -> stETH wstETH Oracle, stETH -> ETH Chainlink feed, ETH -> USDT Chainlink feed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/oracles/wstETHCLRSOracle.sol\":\"WstETHCLRSOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000000},\"remappings\":[]},\"sources\":{\"contracts/oracle/error.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\ncontract Error {\\n    error FluidOracleError(uint256 errorId_);\\n}\\n\",\"keccak256\":\"0xc7b7e945238168d216c480e9dd4fbaaf8780645d58c47f9abdaa4f29910568fe\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/errorTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nlibrary ErrorTypes {\\n    /***********************************|\\n    |           FluidOracleL2           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when sequencer on a L2 has an outage and grace period has not yet passed.\\n    uint256 internal constant FluidOracleL2__SequencerOutage = 60000;\\n\\n    /***********************************|\\n    |     UniV3CheckCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the delta between main price source and check rate source is exceeding the allowed delta\\n    uint256 internal constant UniV3CheckCLRSOracle__InvalidPrice = 60001;\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant UniV3CheckCLRSOracle__InvalidParams = 60002;\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant UniV3CheckCLRSOracle__ExchangeRateZero = 60003;\\n\\n    /***********************************|\\n    |           FluidOracle             | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid info name is passed into a fluid oracle (e.g. not set or too long)\\n    uint256 internal constant FluidOracle__InvalidInfoName = 60010;\\n\\n    /***********************************|\\n    |            sUSDe Oracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant SUSDeOracle__InvalidParams = 60102;\\n\\n    /***********************************|\\n    |           Pendle Oracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant PendleOracle__InvalidParams = 60201;\\n\\n    /// @notice thrown when the Pendle market Oracle has not been initialized yet\\n    uint256 internal constant PendleOracle__MarketNotInitialized = 60202;\\n\\n    /// @notice thrown when the Pendle market does not have 18 decimals\\n    uint256 internal constant PendleOracle__MarketInvalidDecimals = 60203;\\n\\n    /// @notice thrown when the Pendle market returns an unexpected price\\n    uint256 internal constant PendleOracle__InvalidPrice = 60204;\\n\\n    /***********************************|\\n    |    CLRS2UniV3CheckCLRSOracleL2    | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant CLRS2UniV3CheckCLRSOracleL2__ExchangeRateZero = 60301;\\n\\n    /***********************************|\\n    |    Ratio2xFallbackCLRSOracleL2    | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even after all possible fallbacks depending on config\\n    uint256 internal constant Ratio2xFallbackCLRSOracleL2__ExchangeRateZero = 60311;\\n\\n    /***********************************|\\n    |            WeETHsOracle           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WeETHsOracle__InvalidParams = 60321;\\n\\n    /***********************************|\\n    |        DexSmartColOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant DexSmartColOracle__InvalidParams = 60331;\\n\\n    /// @notice thrown when smart col is not enabled\\n    uint256 internal constant DexSmartColOracle__SmartColNotEnabled = 60332;\\n\\n    /***********************************|\\n    |        DexSmartDebtOracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant DexSmartDebtOracle__InvalidParams = 60341;\\n\\n    /// @notice thrown when smart debt is not enabled\\n    uint256 internal constant DexSmartDebtOracle__SmartDebtNotEnabled = 60342;\\n\\n    /***********************************|\\n    |            ContractRate           | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant ContractRate__InvalidParams = 60351;\\n\\n    /// @notice thrown when caller is not authorized\\n    uint256 internal constant ContractRate__Unauthorized = 60352;\\n\\n    /// @notice thrown when minimum diff for triggering update on the stared rate is not reached\\n    uint256 internal constant ContractRate__MinUpdateDiffNotReached = 60353;\\n\\n    /***********************************|\\n    |          Chainlink Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant ChainlinkOracle__InvalidParams = 61001;\\n\\n    /***********************************|\\n    |          UniswapV3 Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant UniV3Oracle__InvalidParams = 62001;\\n\\n    /// @notice thrown when constructor is called with invalid ordered seconds agos values\\n    uint256 internal constant UniV3Oracle__InvalidSecondsAgos = 62002;\\n\\n    /// @notice thrown when constructor is called with invalid delta values > 100%\\n    uint256 internal constant UniV3Oracle__InvalidDeltas = 62003;\\n\\n    /***********************************|\\n    |            WstETh Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WstETHOracle__InvalidParams = 63001;\\n\\n    /***********************************|\\n    |           Redstone Oracle         | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant RedstoneOracle__InvalidParams = 64001;\\n\\n    /***********************************|\\n    |          Fallback Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant FallbackOracle__InvalidParams = 65001;\\n\\n    /***********************************|\\n    |       FallbackCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the fallback oracle source (if enabled)\\n    uint256 internal constant FallbackCLRSOracle__ExchangeRateZero = 66001;\\n\\n    /***********************************|\\n    |         WstETHCLRSOracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the fallback oracle source (if enabled)\\n    uint256 internal constant WstETHCLRSOracle__ExchangeRateZero = 67001;\\n\\n    /***********************************|\\n    |        CLFallbackUniV3Oracle      | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the uniV3 rate\\n    uint256 internal constant CLFallbackUniV3Oracle__ExchangeRateZero = 68001;\\n\\n    /***********************************|\\n    |  WstETHCLRS2UniV3CheckCLRSOracle  | \\n    |__________________________________*/\\n\\n    /// @notice thrown when the exchange rate is zero, even for the uniV3 rate\\n    uint256 internal constant WstETHCLRS2UniV3CheckCLRSOracle__ExchangeRateZero = 69001;\\n\\n    /***********************************|\\n    |             WeETh Oracle          | \\n    |__________________________________*/\\n\\n    /// @notice thrown when an invalid parameter is passed to a method\\n    uint256 internal constant WeETHOracle__InvalidParams = 70001;\\n}\\n\",\"keccak256\":\"0xaae6a9742456598be3cf64184a9809b70734eed7a5d5ed76835df929b75f8d03\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/fluidOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IFluidOracle } from \\\"./interfaces/iFluidOracle.sol\\\";\\nimport { ErrorTypes } from \\\"./errorTypes.sol\\\";\\nimport { Error as OracleError } from \\\"./error.sol\\\";\\n\\n/// @title   FluidOracle\\n/// @notice  Base contract that any Fluid Oracle must implement\\nabstract contract FluidOracle is IFluidOracle, OracleError {\\n    /// @dev short helper string to easily identify the oracle. E.g. token symbols\\n    //\\n    // using a bytes32 because string can not be immutable.\\n    bytes32 private immutable _infoName;\\n\\n    constructor(string memory infoName_) {\\n        if (bytes(infoName_).length > 32 || bytes(infoName_).length == 0) {\\n            revert FluidOracleError(ErrorTypes.FluidOracle__InvalidInfoName);\\n        }\\n\\n        // convert string to bytes32\\n        bytes32 infoNameBytes32_;\\n        assembly {\\n            infoNameBytes32_ := mload(add(infoName_, 32))\\n        }\\n        _infoName = infoNameBytes32_;\\n    }\\n\\n    /// @inheritdoc IFluidOracle\\n    function infoName() external view returns (string memory) {\\n        // convert bytes32 to string\\n        uint256 length_;\\n        while (length_ < 32 && _infoName[length_] != 0) {\\n            length_++;\\n        }\\n        bytes memory infoNameBytes_ = new bytes(length_);\\n        for (uint256 i; i < length_; i++) {\\n            infoNameBytes_[i] = _infoName[i];\\n        }\\n        return string(infoNameBytes_);\\n    }\\n\\n    /// @inheritdoc IFluidOracle\\n    function getExchangeRate() external view virtual returns (uint256 exchangeRate_);\\n\\n    /// @inheritdoc IFluidOracle\\n    function getExchangeRateOperate() external view virtual returns (uint256 exchangeRate_);\\n\\n    /// @inheritdoc IFluidOracle\\n    function getExchangeRateLiquidate() external view virtual returns (uint256 exchangeRate_);\\n}\\n\",\"keccak256\":\"0x2b56537a18379b4d7f69b9d95ebdb39e302951dbcaca882c27b4405bf1ea784b\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/chainlinkOracleImpl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { IChainlinkAggregatorV3 } from \\\"../interfaces/external/IChainlinkAggregatorV3.sol\\\";\\nimport { Error as OracleError } from \\\"../error.sol\\\";\\nimport { OracleUtils } from \\\"../libraries/oracleUtils.sol\\\";\\nimport { ChainlinkStructs } from \\\"./structs.sol\\\";\\n\\n/// @title   Chainlink Oracle implementation\\n/// @notice  This contract is used to get the exchange rate via up to 3 hops at Chainlink price feeds.\\n///          The rate is multiplied with the previous rate at each hop.\\n///          E.g. to go from wBTC to USDC (assuming rates for example):\\n///          1. wBTC -> BTC https://data.chain.link/ethereum/mainnet/crypto-other/wbtc-btc, rate: 0.92.\\n///          2. BTC -> USD https://data.chain.link/ethereum/mainnet/crypto-usd/btc-usd rate: 30,000.\\n///          3. USD -> USDC https://data.chain.link/ethereum/mainnet/stablecoins/usdc-usd rate: 0.98. Must invert feed: 1.02\\n///          finale rate would be: 0.92 * 30,000 * 1.02 = 28,152\\nabstract contract ChainlinkOracleImpl is OracleError, ChainlinkStructs {\\n    /// @notice Chainlink price feed 1 to check for the exchange rate\\n    IChainlinkAggregatorV3 internal immutable _CHAINLINK_FEED1;\\n    /// @notice Chainlink price feed 2 to check for the exchange rate\\n    IChainlinkAggregatorV3 internal immutable _CHAINLINK_FEED2;\\n    /// @notice Chainlink price feed 3 to check for the exchange rate\\n    IChainlinkAggregatorV3 internal immutable _CHAINLINK_FEED3;\\n\\n    /// @notice Flag to invert the price or not for feed 1 (to e.g. for WETH/USDC pool return prive of USDC per 1 WETH)\\n    bool internal immutable _CHAINLINK_INVERT_RATE1;\\n    /// @notice Flag to invert the price or not for feed 2 (to e.g. for WETH/USDC pool return prive of USDC per 1 WETH)\\n    bool internal immutable _CHAINLINK_INVERT_RATE2;\\n    /// @notice Flag to invert the price or not for feed 3 (to e.g. for WETH/USDC pool return prive of USDC per 1 WETH)\\n    bool internal immutable _CHAINLINK_INVERT_RATE3;\\n\\n    /// @notice constant value for price scaling to reduce gas usage for feed 1\\n    uint256 internal immutable _CHAINLINK_PRICE_SCALER_MULTIPLIER1;\\n    /// @notice constant value for inverting price to reduce gas usage for feed 1\\n    uint256 internal immutable _CHAINLINK_INVERT_PRICE_DIVIDEND1;\\n\\n    /// @notice constant value for price scaling to reduce gas usage for feed 2\\n    uint256 internal immutable _CHAINLINK_PRICE_SCALER_MULTIPLIER2;\\n    /// @notice constant value for inverting price to reduce gas usage for feed 2\\n    uint256 internal immutable _CHAINLINK_INVERT_PRICE_DIVIDEND2;\\n\\n    /// @notice constant value for price scaling to reduce gas usage for feed 3\\n    uint256 internal immutable _CHAINLINK_PRICE_SCALER_MULTIPLIER3;\\n    /// @notice constant value for inverting price to reduce gas usage for feed 3\\n    uint256 internal immutable _CHAINLINK_INVERT_PRICE_DIVIDEND3;\\n\\n    /// @notice constructor sets the Chainlink price feed and invertRate flag for each hop.\\n    /// E.g. `invertRate_` should be true if for the USDC/ETH pool it's expected that the oracle returns USDC per 1 ETH\\n    constructor(ChainlinkConstructorParams memory params_) {\\n        if (\\n            (params_.hops < 1 || params_.hops > 3) || // hops must be 1, 2 or 3\\n            (address(params_.feed1.feed) == address(0) || params_.feed1.token0Decimals == 0) || // first feed must always be defined\\n            (params_.hops > 1 && (address(params_.feed2.feed) == address(0) || params_.feed2.token0Decimals == 0)) || // if hops > 1, feed 2 must be defined\\n            (params_.hops > 2 && (address(params_.feed3.feed) == address(0) || params_.feed3.token0Decimals == 0)) // if hops > 2, feed 3 must be defined\\n        ) {\\n            revert FluidOracleError(ErrorTypes.ChainlinkOracle__InvalidParams);\\n        }\\n\\n        _CHAINLINK_FEED1 = params_.feed1.feed;\\n        _CHAINLINK_FEED2 = params_.feed2.feed;\\n        _CHAINLINK_FEED3 = params_.feed3.feed;\\n\\n        _CHAINLINK_INVERT_RATE1 = params_.feed1.invertRate;\\n        _CHAINLINK_INVERT_RATE2 = params_.feed2.invertRate;\\n        _CHAINLINK_INVERT_RATE3 = params_.feed3.invertRate;\\n\\n        // Actual desired output rate example USDC/ETH (6 decimals / 18 decimals).\\n        // Note ETH has 12 decimals more than USDC.\\n        //    0.000515525322211842331991619857165357691 // 39 decimals.  ETH for 1 USDC\\n        // 1954.190000000000433             // 15 decimals. USDC for 1 ETH\\n\\n        // to get to PRICE_SCLAER_MULTIPLIER and INVERT_PRICE_DIVIDEND:\\n        // fetched Chainlink price is in token1Decimals per 1 token0Decimals.\\n        // E.g. for an USDC/ETH price feed it's in ETH 18 decimals.\\n        //      for an  BTC/USD price feed it's in USD  8 decimals.\\n        // So to scale to 1e27 we need to multiply by 1e27 - token0Decimals.\\n        // E.g. for USDC/ETH it would be: fetchedPrice * 1e21\\n        //\\n        // or for inverted (x token0 per 1 token1), formula would be:\\n        //    = 1e27 * 10**token0Decimals / fetchedPrice\\n        // E.g. for USDC/ETH it would be: 1e33 / fetchedPrice\\n\\n        // no support for token1Decimals with more than OracleUtils.RATE_OUTPUT_DECIMALS decimals for now as extremely unlikely case\\n        _CHAINLINK_PRICE_SCALER_MULTIPLIER1 = 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - params_.feed1.token0Decimals);\\n        _CHAINLINK_INVERT_PRICE_DIVIDEND1 = 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS + params_.feed1.token0Decimals);\\n\\n        _CHAINLINK_PRICE_SCALER_MULTIPLIER2 = params_.hops > 1\\n            ? 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - params_.feed2.token0Decimals)\\n            : 1;\\n        _CHAINLINK_INVERT_PRICE_DIVIDEND2 = params_.hops > 1\\n            ? 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS + params_.feed2.token0Decimals)\\n            : 1;\\n\\n        _CHAINLINK_PRICE_SCALER_MULTIPLIER3 = params_.hops > 2\\n            ? 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - params_.feed3.token0Decimals)\\n            : 1;\\n        _CHAINLINK_INVERT_PRICE_DIVIDEND3 = params_.hops > 2\\n            ? 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS + params_.feed3.token0Decimals)\\n            : 1;\\n    }\\n\\n    /// @dev            Get the exchange rate from Chainlike oracle price feed(s)\\n    /// @return rate_   The exchange rate in `OracleUtils.RATE_OUTPUT_DECIMALS`\\n    function _getChainlinkExchangeRate() internal view returns (uint256 rate_) {\\n        rate_ = _readFeedRate(\\n            _CHAINLINK_FEED1,\\n            _CHAINLINK_INVERT_RATE1,\\n            _CHAINLINK_PRICE_SCALER_MULTIPLIER1,\\n            _CHAINLINK_INVERT_PRICE_DIVIDEND1\\n        );\\n        if (rate_ == 0 || address(_CHAINLINK_FEED2) == address(0)) {\\n            // rate 0 or only 1 hop -> return rate of price feed 1\\n            return rate_;\\n        }\\n        rate_ =\\n            (rate_ *\\n                _readFeedRate(\\n                    _CHAINLINK_FEED2,\\n                    _CHAINLINK_INVERT_RATE2,\\n                    _CHAINLINK_PRICE_SCALER_MULTIPLIER2,\\n                    _CHAINLINK_INVERT_PRICE_DIVIDEND2\\n                )) /\\n            (10 ** OracleUtils.RATE_OUTPUT_DECIMALS);\\n\\n        if (rate_ == 0 || address(_CHAINLINK_FEED3) == address(0)) {\\n            // rate 0 or 2 hops -> return rate of feed 1 combined with feed 2\\n            return rate_;\\n        }\\n\\n        // 3 hops -> return rate of feed 1 combined with feed 2 & feed 3\\n        rate_ =\\n            (rate_ *\\n                _readFeedRate(\\n                    _CHAINLINK_FEED3,\\n                    _CHAINLINK_INVERT_RATE3,\\n                    _CHAINLINK_PRICE_SCALER_MULTIPLIER3,\\n                    _CHAINLINK_INVERT_PRICE_DIVIDEND3\\n                )) /\\n            (10 ** OracleUtils.RATE_OUTPUT_DECIMALS);\\n    }\\n\\n    /// @dev reads the exchange `rate_` from a Chainlink price `feed_` taking into account scaling and `invertRate_`\\n    function _readFeedRate(\\n        IChainlinkAggregatorV3 feed_,\\n        bool invertRate_,\\n        uint256 priceMultiplier_,\\n        uint256 invertDividend_\\n    ) private view returns (uint256 rate_) {\\n        try feed_.latestRoundData() returns (uint80, int256 exchangeRate_, uint256, uint256, uint80) {\\n            // Return the price in `OracleUtils.RATE_OUTPUT_DECIMALS`\\n            if (invertRate_) {\\n                return invertDividend_ / uint256(exchangeRate_);\\n            } else {\\n                return uint256(exchangeRate_) * priceMultiplier_;\\n            }\\n        } catch {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice returns all Chainlink oracle related data as utility for easy off-chain use / block explorer in a single view method\\n    function chainlinkOracleData()\\n        public\\n        view\\n        returns (\\n            uint256 chainlinkExchangeRate_,\\n            IChainlinkAggregatorV3 chainlinkFeed1_,\\n            bool chainlinkInvertRate1_,\\n            uint256 chainlinkExchangeRate1_,\\n            IChainlinkAggregatorV3 chainlinkFeed2_,\\n            bool chainlinkInvertRate2_,\\n            uint256 chainlinkExchangeRate2_,\\n            IChainlinkAggregatorV3 chainlinkFeed3_,\\n            bool chainlinkInvertRate3_,\\n            uint256 chainlinkExchangeRate3_\\n        )\\n    {\\n        return (\\n            _getChainlinkExchangeRate(),\\n            _CHAINLINK_FEED1,\\n            _CHAINLINK_INVERT_RATE1,\\n            _readFeedRate(\\n                _CHAINLINK_FEED1,\\n                _CHAINLINK_INVERT_RATE1,\\n                _CHAINLINK_PRICE_SCALER_MULTIPLIER1,\\n                _CHAINLINK_INVERT_PRICE_DIVIDEND1\\n            ),\\n            _CHAINLINK_FEED2,\\n            _CHAINLINK_INVERT_RATE2,\\n            address(_CHAINLINK_FEED2) == address(0)\\n                ? 0\\n                : _readFeedRate(\\n                    _CHAINLINK_FEED2,\\n                    _CHAINLINK_INVERT_RATE2,\\n                    _CHAINLINK_PRICE_SCALER_MULTIPLIER2,\\n                    _CHAINLINK_INVERT_PRICE_DIVIDEND2\\n                ),\\n            _CHAINLINK_FEED3,\\n            _CHAINLINK_INVERT_RATE3,\\n            address(_CHAINLINK_FEED3) == address(0)\\n                ? 0\\n                : _readFeedRate(\\n                    _CHAINLINK_FEED3,\\n                    _CHAINLINK_INVERT_RATE3,\\n                    _CHAINLINK_PRICE_SCALER_MULTIPLIER3,\\n                    _CHAINLINK_INVERT_PRICE_DIVIDEND3\\n                )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xe7656c6a48277513acca3c891d53960682f949e1913a6377b2f4a7b1a6132772\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/fallbackOracleImpl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { IRedstoneOracle } from \\\"../interfaces/external/IRedstoneOracle.sol\\\";\\nimport { Error as OracleError } from \\\"../error.sol\\\";\\nimport { ChainlinkOracleImpl } from \\\"./chainlinkOracleImpl.sol\\\";\\nimport { RedstoneOracleImpl } from \\\"./redstoneOracleImpl.sol\\\";\\n\\n/// @title   Fallback Oracle implementation\\n/// @notice  This contract is used to get the exchange rate from a main oracle feed and a fallback oracle feed.\\n//\\n// @dev     inheriting contracts should implement a view method to expose `_FALLBACK_ORACLE_MAIN_SOURCE`\\nabstract contract FallbackOracleImpl is OracleError, RedstoneOracleImpl, ChainlinkOracleImpl {\\n    /// @dev which oracle to use as main source:\\n    /// - 1 = Chainlink ONLY (no fallback)\\n    /// - 2 = Chainlink with Redstone Fallback\\n    /// - 3 = Redstone with Chainlink Fallback\\n    uint8 internal immutable _FALLBACK_ORACLE_MAIN_SOURCE;\\n\\n    /// @notice                     sets the main source, Chainlink Oracle and Redstone Oracle data.\\n    /// @param mainSource_          which oracle to use as main source:\\n    ///                                  - 1 = Chainlink ONLY (no fallback)\\n    ///                                  - 2 = Chainlink with Redstone Fallback\\n    ///                                  - 3 = Redstone with Chainlink Fallback\\n    /// @param chainlinkParams_     chainlink Oracle constructor params struct.\\n    /// @param redstoneOracle_      Redstone Oracle data. (address can be set to zero address if using Chainlink only)\\n    constructor(\\n        uint8 mainSource_,\\n        ChainlinkConstructorParams memory chainlinkParams_,\\n        RedstoneOracleData memory redstoneOracle_\\n    )\\n        ChainlinkOracleImpl(chainlinkParams_)\\n        RedstoneOracleImpl(\\n            address(redstoneOracle_.oracle) == address(0)\\n                ? RedstoneOracleData(IRedstoneOracle(_REDSTONE_ORACLE_NOT_SET_ADDRESS), false, 1)\\n                : redstoneOracle_\\n        )\\n    {\\n        if (mainSource_ < 1 || mainSource_ > 3) {\\n            revert FluidOracleError(ErrorTypes.FallbackOracle__InvalidParams);\\n        }\\n        _FALLBACK_ORACLE_MAIN_SOURCE = mainSource_;\\n    }\\n\\n    /// @dev returns the exchange rate for the main oracle source, or the fallback source (if configured) if the main exchange rate\\n    /// fails to be fetched. If returned rate is 0, fetching rate failed or something went wrong.\\n    /// @return exchangeRate_ exchange rate\\n    /// @return fallback_ whether fallback was necessary or not\\n    function _getRateWithFallback() internal view returns (uint256 exchangeRate_, bool fallback_) {\\n        if (_FALLBACK_ORACLE_MAIN_SOURCE == 1) {\\n            // 1 = Chainlink ONLY (no fallback)\\n            exchangeRate_ = _getChainlinkExchangeRate();\\n        } else if (_FALLBACK_ORACLE_MAIN_SOURCE == 2) {\\n            // 2 = Chainlink with Redstone Fallback\\n            exchangeRate_ = _getChainlinkExchangeRate();\\n            if (exchangeRate_ == 0) {\\n                fallback_ = true;\\n                exchangeRate_ = _getRedstoneExchangeRate();\\n            }\\n        } else {\\n            // 3 = Redstone with Chainlink Fallback\\n            exchangeRate_ = _getRedstoneExchangeRate();\\n            if (exchangeRate_ == 0) {\\n                fallback_ = true;\\n                exchangeRate_ = _getChainlinkExchangeRate();\\n            }\\n        }\\n    }\\n\\n    /// @dev returns the exchange rate for Chainlink, or Redstone if configured & Chainlink fails.\\n    function _getChainlinkOrRedstoneAsFallback() internal view returns (uint256 exchangeRate_) {\\n        exchangeRate_ = _getChainlinkExchangeRate();\\n\\n        if (exchangeRate_ == 0 && _FALLBACK_ORACLE_MAIN_SOURCE != 1) {\\n            // Chainlink failed but Redstone is configured too -> try Redstone\\n            exchangeRate_ = _getRedstoneExchangeRate();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xff1e1ab767ff250777dcb7fb70dc5a0392bb666bf4f65d27d338aaceb76554bc\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/redstoneOracleImpl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { IRedstoneOracle } from \\\"../interfaces/external/IRedstoneOracle.sol\\\";\\nimport { Error as OracleError } from \\\"../error.sol\\\";\\nimport { OracleUtils } from \\\"../libraries/oracleUtils.sol\\\";\\nimport { RedstoneStructs } from \\\"./structs.sol\\\";\\n\\n/// @title   Redstone Oracle implementation\\n/// @notice  This contract is used to get the exchange rate from a Redstone Oracle\\nabstract contract RedstoneOracleImpl is OracleError, RedstoneStructs {\\n    /// @notice Redstone price oracle to check for the exchange rate\\n    IRedstoneOracle internal immutable _REDSTONE_ORACLE;\\n    /// @notice Flag to invert the price or not (to e.g. for WETH/USDC pool return prive of USDC per 1 WETH)\\n    bool internal immutable _REDSTONE_INVERT_RATE;\\n\\n    /// @notice constant value for price scaling to reduce gas usage\\n    uint256 internal immutable _REDSTONE_PRICE_SCALER_MULTIPLIER;\\n    /// @notice constant value for inverting price to reduce gas usage\\n    uint256 internal immutable _REDSTONE_INVERT_PRICE_DIVIDEND;\\n\\n    address internal immutable _REDSTONE_ORACLE_NOT_SET_ADDRESS = 0x000000000000000000000000000000000000dEaD;\\n\\n    /// @notice constructor sets the Redstone oracle data\\n    constructor(RedstoneOracleData memory oracleData_) {\\n        if (address(oracleData_.oracle) == address(0) || oracleData_.token0Decimals == 0) {\\n            revert FluidOracleError(ErrorTypes.RedstoneOracle__InvalidParams);\\n        }\\n\\n        _REDSTONE_ORACLE = oracleData_.oracle;\\n        _REDSTONE_INVERT_RATE = oracleData_.invertRate;\\n\\n        // for explanation on how to get to scaler multiplier and dividend see `chainlinkOracleImpl.sol`.\\n        // no support for token1Decimals with more than OracleUtils.RATE_OUTPUT_DECIMALS decimals for now as extremely unlikely case\\n        _REDSTONE_PRICE_SCALER_MULTIPLIER = address(oracleData_.oracle) == _REDSTONE_ORACLE_NOT_SET_ADDRESS\\n            ? 1\\n            : 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - oracleData_.token0Decimals);\\n        _REDSTONE_INVERT_PRICE_DIVIDEND = address(oracleData_.oracle) == _REDSTONE_ORACLE_NOT_SET_ADDRESS\\n            ? 1\\n            : 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS + oracleData_.token0Decimals);\\n    }\\n\\n    /// @dev           Get the exchange rate from Redstone oracle\\n    /// @param rate_   The exchange rate in `OracleUtils.RATE_OUTPUT_DECIMALS`\\n    function _getRedstoneExchangeRate() internal view returns (uint256 rate_) {\\n        try _REDSTONE_ORACLE.getExchangeRate() returns (uint256 exchangeRate_) {\\n            if (_REDSTONE_INVERT_RATE) {\\n                // invert the price\\n                return _REDSTONE_INVERT_PRICE_DIVIDEND / exchangeRate_;\\n            } else {\\n                return exchangeRate_ * _REDSTONE_PRICE_SCALER_MULTIPLIER;\\n            }\\n        } catch {\\n            return 0;\\n        }\\n    }\\n\\n    /// @notice returns all Redstone oracle related data as utility for easy off-chain use / block explorer in a single view method\\n    function redstoneOracleData()\\n        public\\n        view\\n        returns (uint256 redstoneExchangeRate_, IRedstoneOracle redstoneOracle_, bool redstoneInvertRate_)\\n    {\\n        return (\\n            address(_REDSTONE_ORACLE) == _REDSTONE_ORACLE_NOT_SET_ADDRESS ? 0 : _getRedstoneExchangeRate(),\\n            _REDSTONE_ORACLE,\\n            _REDSTONE_INVERT_RATE\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x49082d966015853f5fa8074a5ab209df61e8ec8353f3f08ced5dc77f8b578b4b\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/structs.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IChainlinkAggregatorV3 } from \\\"../interfaces/external/IChainlinkAggregatorV3.sol\\\";\\nimport { IRedstoneOracle } from \\\"../interfaces/external/IRedstoneOracle.sol\\\";\\n\\nabstract contract ChainlinkStructs {\\n    struct ChainlinkFeedData {\\n        /// @param feed           address of Chainlink feed.\\n        IChainlinkAggregatorV3 feed;\\n        /// @param invertRate     true if rate read from price feed must be inverted.\\n        bool invertRate;\\n        /// @param token0Decimals decimals of asset 0. E.g. for a USDC/ETH feed, USDC is token0 and has 6 decimals.\\n        ///                       (token1Decimals are available directly via Chainlink `FEED.decimals()`)\\n        uint256 token0Decimals;\\n    }\\n\\n    struct ChainlinkConstructorParams {\\n        /// @param param        hops count of hops, used for sanity checks. Must be 1, 2 or 3.\\n        uint8 hops;\\n        /// @param feed1        Chainlink feed 1 data. Required.\\n        ChainlinkFeedData feed1;\\n        /// @param feed2        Chainlink feed 2 data. Required if hops > 1.\\n        ChainlinkFeedData feed2;\\n        /// @param feed3        Chainlink feed 3 data. Required if hops > 2.\\n        ChainlinkFeedData feed3;\\n    }\\n}\\n\\nabstract contract RedstoneStructs {\\n    struct RedstoneOracleData {\\n        /// @param oracle         address of Redstone oracle.\\n        IRedstoneOracle oracle;\\n        /// @param invertRate     true if rate read from price feed must be inverted.\\n        bool invertRate;\\n        /// @param token0Decimals decimals of asset 0. E.g. for a USDC/ETH feed, USDC is token0 and has 6 decimals.\\n        ///                       (token1Decimals are available directly via Redstone `Oracle.decimals()`)\\n        uint256 token0Decimals;\\n    }\\n}\\n\",\"keccak256\":\"0x90d026dc5f1762c704f30eaaf485c0e8eb6314832a311db3ec73759e81dbde33\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/implementations/wstETHOracleImpl.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { IWstETH } from \\\"../interfaces/external/IWstETH.sol\\\";\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\nimport { Error as OracleError } from \\\"../error.sol\\\";\\nimport { OracleUtils } from \\\"../libraries/oracleUtils.sol\\\";\\n\\n/// @title   wstETH Oracle Implementation\\n/// @notice  This contract is used to get the exchange rate between wstETH and stETH\\nabstract contract WstETHOracleImpl is OracleError {\\n    /// @notice constant value for price scaling to reduce gas usage\\n    uint256 internal immutable _WSTETH_PRICE_SCALER_MULTIPLIER;\\n\\n    /// @notice WSTETH contract, e.g. on mainnet 0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0\\n    IWstETH internal immutable _WSTETH;\\n\\n    /// @notice constructor sets the wstETH `wstETH_` token address.\\n    constructor(IWstETH wstETH_) {\\n        if (address(wstETH_) == address(0)) {\\n            revert FluidOracleError(ErrorTypes.WstETHOracle__InvalidParams);\\n        }\\n\\n        _WSTETH = wstETH_;\\n\\n        _WSTETH_PRICE_SCALER_MULTIPLIER = 10 ** (OracleUtils.RATE_OUTPUT_DECIMALS - 18); // e.g. 1e9\\n    }\\n\\n    /// @notice         Get the exchange rate from wstETH contract\\n    /// @return rate_   The exchange rate in `OracleUtils.RATE_OUTPUT_DECIMALS`\\n    function _getWstETHExchangeRate() internal view returns (uint256 rate_) {\\n        return _WSTETH.stEthPerToken() * _WSTETH_PRICE_SCALER_MULTIPLIER;\\n    }\\n\\n    /// @notice returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method\\n    function wstETHOracleData() public view returns (uint256 wstETHExchangeRate_, IWstETH wstETH_) {\\n        return (_getWstETHExchangeRate(), _WSTETH);\\n    }\\n}\\n\",\"keccak256\":\"0x2c923e9fc9107a469e55dfa9a6a1d02f44be696cfafdb078d76fc6d3ef5695bc\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/interfaces/external/IChainlinkAggregatorV3.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\n/// from https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\n/// Copyright (c) 2018 SmartContract ChainLink, Ltd.\\n\\ninterface IChainlinkAggregatorV3 {\\n    /// @notice represents the number of decimals the aggregator responses represent.\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xaeea1f12d1c381bde8418eab05206d6472b246158584190fce0d09913912a7ef\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/external/IRedstoneOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IRedstoneOracle {\\n    /// @notice Get the `exchangeRate_` between the underlying asset and the peg asset\\n    // @dev custom Redstone adapter for Instadapp implementation\\n    function getExchangeRate() external view returns (uint256 exchangeRate_);\\n\\n    /**\\n     * @notice Returns the number of decimals for the price feed\\n     * @dev By default, RedStone uses 8 decimals for data feeds\\n     * @return decimals The number of decimals in the price feed values\\n     */\\n    // see https://github.com/redstone-finance/redstone-oracles-monorepo/blob/main/packages/on-chain-relayer/contracts/price-feeds/PriceFeedBase.sol#L51C12-L51C20\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd9a844e86035a935fe06c5937d2fb8796fd150771716246b77c6226e32c9d129\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/external/IWstETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IWstETH {\\n    /**\\n     * @notice Get amount of stETH for 1 wstETH\\n     * @return Amount of stETH for 1 wstETH\\n     */\\n    function stEthPerToken() external view returns (uint256);\\n\\n    /**\\n     * @notice Get amount of wstETH for 1 stETH\\n     * @return Amount of wstETH for 1 stETH\\n     */\\n    function tokensPerStEth() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfe6c8477bea4b01e693d5a8ca635e795e203fe53ddee0fb30f3dcf9a0e5f4f61\",\"license\":\"MIT\"},\"contracts/oracle/interfaces/iFluidOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.21;\\n\\ninterface IFluidOracle {\\n    /// @dev Deprecated. Use `getExchangeRateOperate()` and `getExchangeRateLiquidate()` instead. Only implemented for\\n    ///      backwards compatibility.\\n    function getExchangeRate() external view returns (uint256 exchangeRate_);\\n\\n    /// @notice Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for operates\\n    function getExchangeRateOperate() external view returns (uint256 exchangeRate_);\\n\\n    /// @notice Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for liquidations\\n    function getExchangeRateLiquidate() external view returns (uint256 exchangeRate_);\\n\\n    /// @notice helper string to easily identify the oracle. E.g. token symbols\\n    function infoName() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xeba2e991e41f8b68e2d639935931aadf39e15ea94ea7aa65b2fb3039d27dca63\",\"license\":\"MIT\"},\"contracts/oracle/libraries/oracleUtils.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\n/// @title Oracle utils library\\n/// @notice implements common utility methods for Fluid Oracles\\nlibrary OracleUtils {\\n    /// @dev The scaler for max delta point math (100%)\\n    uint256 internal constant HUNDRED_PERCENT_DELTA_SCALER = 10_000;\\n    /// @dev output precision of rates\\n    uint256 internal constant RATE_OUTPUT_DECIMALS = 27;\\n\\n    /// @dev checks if `mainSourceRate_` is within a `maxDeltaPercent_` of `checkSourceRate_`. Returns true if so.\\n    function isRateOutsideDelta(\\n        uint256 mainSourceRate_,\\n        uint256 checkSourceRate_,\\n        uint256 maxDeltaPercent_\\n    ) internal pure returns (bool) {\\n        uint256 offset_ = (checkSourceRate_ * maxDeltaPercent_) / HUNDRED_PERCENT_DELTA_SCALER;\\n        return (mainSourceRate_ > (checkSourceRate_ + offset_) || mainSourceRate_ < (checkSourceRate_ - offset_));\\n    }\\n}\\n\",\"keccak256\":\"0x968b1a0606875abd523895c5075cf6c34c296919e77b0da7dd952374398e2a4c\",\"license\":\"BUSL-1.1\"},\"contracts/oracle/oracles/wstETHCLRSOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.21;\\n\\nimport { FluidOracle } from \\\"../fluidOracle.sol\\\";\\nimport { WstETHOracleImpl } from \\\"../implementations/wstETHOracleImpl.sol\\\";\\nimport { FallbackOracleImpl } from \\\"../implementations/fallbackOracleImpl.sol\\\";\\nimport { IWstETH } from \\\"../interfaces/external/IWstETH.sol\\\";\\nimport { OracleUtils } from \\\"../libraries/oracleUtils.sol\\\";\\nimport { ErrorTypes } from \\\"../errorTypes.sol\\\";\\n\\n/// @title   WstETH Chainlink / Redstone Oracle (with fallback)\\n/// @notice  Gets the exchange rate between the underlying asset and the peg asset by using:\\n///          wstETH Oracle price in combination with rate from Chainlink price feeds (or Redstone as fallback),\\n///          hopping the 2 rates into 1 rate.\\n///          e.g. when going from wstETH to USDT:\\n///          wstETH -> stETH wstETH Oracle, stETH -> ETH Chainlink feed, ETH -> USDT Chainlink feed.\\ncontract WstETHCLRSOracle is FluidOracle, WstETHOracleImpl, FallbackOracleImpl {\\n    /// @notice                     sets the wstETH address, main source, Chainlink Oracle and Redstone Oracle data.\\n    /// @param infoName_         Oracle identify helper name.\\n    /// @param wstETH_              address of the wstETH contract\\n    /// @param mainSource_          which oracle to use as main source: 1 = Chainlink, 2 = Redstone (other one is fallback).\\n    /// @param chainlinkParams_     chainlink Oracle constructor params struct.\\n    /// @param redstoneOracle_      Redstone Oracle data. (address can be set to zero address if using Chainlink only)\\n    constructor(\\n        string memory infoName_,\\n        IWstETH wstETH_,\\n        uint8 mainSource_,\\n        ChainlinkConstructorParams memory chainlinkParams_,\\n        RedstoneOracleData memory redstoneOracle_\\n    )\\n        WstETHOracleImpl(wstETH_)\\n        FallbackOracleImpl(mainSource_, chainlinkParams_, redstoneOracle_)\\n        FluidOracle(infoName_)\\n    {}\\n\\n    /// @inheritdoc FluidOracle\\n    function getExchangeRateOperate() public view override returns (uint256 exchangeRate_) {\\n        (exchangeRate_, ) = _getRateWithFallback();\\n\\n        if (exchangeRate_ == 0) {\\n            // revert if fetched exchange rate is 0\\n            revert FluidOracleError(ErrorTypes.WstETHCLRSOracle__ExchangeRateZero);\\n        }\\n\\n        return (_getWstETHExchangeRate() * exchangeRate_) / (10 ** OracleUtils.RATE_OUTPUT_DECIMALS);\\n    }\\n\\n    /// @inheritdoc FluidOracle\\n    function getExchangeRateLiquidate() external view override returns (uint256 exchangeRate_) {\\n        (exchangeRate_, ) = _getRateWithFallback();\\n\\n        if (exchangeRate_ == 0) {\\n            // revert if fetched exchange rate is 0\\n            revert FluidOracleError(ErrorTypes.WstETHCLRSOracle__ExchangeRateZero);\\n        }\\n\\n        return (_getWstETHExchangeRate() * exchangeRate_) / (10 ** OracleUtils.RATE_OUTPUT_DECIMALS);\\n    }\\n\\n    /// @inheritdoc FluidOracle\\n    function getExchangeRate() external view override returns (uint256 exchangeRate_) {\\n        return getExchangeRateOperate();\\n    }\\n\\n    /// @notice which oracle to use as main source:\\n    ///          - 1 = Chainlink ONLY (no fallback)\\n    ///          - 2 = Chainlink with Redstone Fallback\\n    ///          - 3 = Redstone with Chainlink Fallback\\n    function FALLBACK_ORACLE_MAIN_SOURCE() public view returns (uint8) {\\n        return _FALLBACK_ORACLE_MAIN_SOURCE;\\n    }\\n}\\n\",\"keccak256\":\"0xda2cb0a5d3b29ecbbf7a00c6a8ddcdac5fb78ae60707fe7f17c3894938f28254\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x61032060405261dead610160523480156200001957600080fd5b5060405162001b4b38038062001b4b8339810160408190526200003c916200064e565b805183908390839082906001600160a01b0316156200005c578162000088565b6040518060600160405280610160516001600160a01b0316815260200160001515815260200160018152505b888a6020815111806200009a57508051155b15620000c25760405163c82fc46560e01b815261ea6a60048201526024015b60405180910390fd5b602001516080526001600160a01b038116620000f65760405163c82fc46560e01b815261f6196004820152602401620000b9565b6001600160a01b03811660c052620001116012601b62000769565b6200011e90600a62000882565b60a0525080516001600160a01b031615806200013c57506040810151155b15620001605760405163c82fc46560e01b815261fa016004820152602401620000b9565b80516001600160a01b0390811660e05260208201511515610100526101605182518216911614620001b05760408101516200019d90601b62000769565b620001aa90600a62000882565b620001b3565b60015b610120526101605181516001600160a01b03908116911614620001f5576040810151620001e290601b62000897565b620001ef90600a62000882565b620001f8565b60015b61014052508051600160ff90911610806200021a57506003816000015160ff16115b806200024357506020810151516001600160a01b03161580620002435750602081015160400151155b806200027e57506001816000015160ff161180156200027e57506040810151516001600160a01b031615806200027e57506040808201510151155b80620002ba57506002816000015160ff16118015620002ba57506060810151516001600160a01b03161580620002ba5750606081015160400151155b15620002de5760405163c82fc46560e01b815261ee496004820152602401620000b9565b60208082018051516001600160a01b0390811661018052604080850180515183166101a052606086018051519093166101c052835185015115156101e052518401511515610200529051909201511515610220525101516200034290601b62000769565b6200034f90600a62000882565b610240526020810151604001516200036990601b62000897565b6200037690600a62000882565b610260528051600160ff9091161162000391576001620003b3565b6040808201510151620003a690601b62000769565b620003b390600a62000882565b610280528051600160ff90911611620003ce576001620003f0565b6040808201510151620003e390601b62000897565b620003f090600a62000882565b6102a0528051600260ff909116116200040b5760016200042e565b6060810151604001516200042190601b62000769565b6200042e90600a62000882565b6102c0528051600260ff90911611620004495760016200046c565b6060810151604001516200045f90601b62000897565b6200046c90600a62000882565b6102e05250600160ff8416108062000487575060038360ff16115b15620004ab5760405163c82fc46560e01b815261fde96004820152602401620000b9565b505060ff166103005250620008ad9350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005015762000501620004c0565b604052919050565b6001600160a01b03811681146200051f57600080fd5b50565b80516200052f8162000509565b919050565b805160ff811681146200052f57600080fd5b6000606082840312156200055957600080fd5b604051606081016001600160401b03811182821017156200057e576200057e620004c0565b80604052508091508251620005938162000509565b815260208301518015158114620005a957600080fd5b6020820152604092830151920191909152919050565b60006101408284031215620005d357600080fd5b604051608081016001600160401b0381118282101715620005f857620005f8620004c0565b604052905080620006098362000534565b81526200061a846020850162000546565b60208201526200062e846080850162000546565b6040820152620006428460e0850162000546565b60608201525092915050565b600080600080600061020086880312156200066857600080fd5b85516001600160401b03808211156200068057600080fd5b818801915088601f8301126200069557600080fd5b815181811115620006aa57620006aa620004c0565b60209150620006c2601f8201601f19168301620004d6565b8181528a83838601011115620006d757600080fd5b60005b82811015620006f7578481018401518282018501528301620006da565b50600083838301015280985050506200071281890162000522565b95505050620007246040870162000534565b9250620007358760608801620005bf565b915062000747876101a0880162000546565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b818103818111156200077f576200077f62000753565b92915050565b600181815b80851115620007c6578160001904821115620007aa57620007aa62000753565b80851615620007b857918102915b93841c93908002906200078a565b509250929050565b600082620007df575060016200077f565b81620007ee575060006200077f565b8160018114620008075760028114620008125762000832565b60019150506200077f565b60ff84111562000826576200082662000753565b50506001821b6200077f565b5060208310610133831016604e8410600b841016171562000857575081810a6200077f565b62000863838362000785565b80600019048211156200087a576200087a62000753565b029392505050565b6000620008908383620007ce565b9392505050565b808201808211156200077f576200077f62000753565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e051610300516110ed62000a5e60003960008181609401528181610c1b0152610c5401526000818161047201526109f601526000818161045101526109d501526000818161038001526108ff01526000818161035f01526108de015260008181610296015261081c01526000818161027501526107fb0152600081816103cf0152818161043001526109b40152600081816102dd0152818161033e01526108bd01526000818161020f0152818161025401526107da0152600081816103ae0152818161040f0152818161094301526109930152600081816102bc0152818161031d0152818161084c015261089c0152600081816101ee0152818161023301526107b9015260006104c501526000610bc201526000610bf101526000818161056c0152610b980152600081816104fc015281816105490152610ae90152600081816107830152610ce001526000610cbf01526000818161062201526106e701526110ed6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063abd5f95d1161005b578063abd5f95d14610186578063dfaba9b51461019b578063e6aa216c146101cd578063f3190c891461017057600080fd5b80633437eac41461008d5780637557ca41146100c357806388c35209146101365780638e7bfbc014610170575b600080fd5b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b6100cb6101d5565b604080519a8b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c0152971515978a01979097526060890195909552928616608088015290151560a087015260c086015290921660e0840152901515610100830152610120820152610140016100ba565b61013e6104be565b6040805193845273ffffffffffffffffffffffffffffffffffffffff90921660208401521515908201526060016100ba565b610178610591565b6040519081526020016100ba565b61018e610610565b6040516100ba9190610d77565b6101a3610775565b6040805192835273ffffffffffffffffffffffffffffffffffffffff9091166020830152016100ba565b6101786107a8565b6000806000806000806000806000806101ec6107b2565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102ba7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8216156103a9576103a47f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b6103ac565b60005b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff82161561049b576104967f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b61049e565b60005b995099509950995099509950995099509950995090919293949596979899565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105435761053e610ae5565b610546565b60005b937f000000000000000000000000000000000000000000000000000000000000000093507f000000000000000000000000000000000000000000000000000000000000000092509050565b600061059b610c16565b50905060008190036105e2576040517fc82fc465000000000000000000000000000000000000000000000000000000008152620105b9600482015260240160405180910390fd5b6105ee601b600a610f34565b816105f7610cbb565b6106019190610f47565b61060b9190610f5e565b905090565b606060005b60208110801561067b57507f0000000000000000000000000000000000000000000000000000000000000000816020811061065257610652610f99565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15610692578061068a81610fc8565b915050610615565b60008167ffffffffffffffff8111156106ad576106ad611000565b6040519080825280601f01601f1916602001820160405280156106d7576020820181803683370190505b50905060005b8281101561076e577f0000000000000000000000000000000000000000000000000000000000000000816020811061071757610717610f99565b1a60f81b82828151811061072d5761072d610f99565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061076681610fc8565b9150506106dd565b5092915050565b600080610780610cbb565b927f000000000000000000000000000000000000000000000000000000000000000092509050565b600061060b610591565b60006108407f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b905080158061088357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16155b1561088b5790565b610897601b600a610f34565b6109237f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b61092d9083610f47565b6109379190610f5e565b905080158061097a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16155b156109825790565b61098e601b600a610f34565b610a1a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b6106019083610f47565b60008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015610aab575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610aa89181019061104e565b60015b610ab757506000610add565b8815610ad357610ac78488610f5e565b95505050505050610add565b610ac78885610f47565b949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b8c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b899181019061109e565b60015b610b965750600090565b7f000000000000000000000000000000000000000000000000000000000000000015610bec57610be6817f0000000000000000000000000000000000000000000000000000000000000000610f5e565b91505090565b610be67f000000000000000000000000000000000000000000000000000000000000000082610f47565b6000807f000000000000000000000000000000000000000000000000000000000000000060ff16600103610c5257610c4c6107b2565b91509091565b7f000000000000000000000000000000000000000000000000000000000000000060ff16600203610c9e57610c856107b2565b915081600003610c9a57506001610c4c610ae5565b9091565b610ca6610ae5565b915081600003610c9a57506001610c4c6107b2565b60007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d919061109e565b61060b9190610f47565b600060208083528351808285015260005b81811015610da457858101830151858201604001528201610d88565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b80851115610e6b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610e5157610e51610de3565b80851615610e5e57918102915b93841c9390800290610e17565b509250929050565b600082610e8257506001610f2e565b81610e8f57506000610f2e565b8160018114610ea55760028114610eaf57610ecb565b6001915050610f2e565b60ff841115610ec057610ec0610de3565b50506001821b610f2e565b5060208310610133831016604e8410600b8410161715610eee575081810a610f2e565b610ef88383610e12565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f2a57610f2a610de3565b0290505b92915050565b6000610f408383610e73565b9392505050565b8082028115828204841417610f2e57610f2e610de3565b600082610f94577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ff957610ff9610de3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805169ffffffffffffffffffff8116811461104957600080fd5b919050565b600080600080600060a0868803121561106657600080fd5b61106f8661102f565b94506020860151935060408601519250606086015191506110926080870161102f565b90509295509295909350565b6000602082840312156110b057600080fd5b505191905056fea2646970667358221220f83c83aca4502f0985d6f2e1aa28701e446a2dfa116a7e715692768f376fd15a64736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063abd5f95d1161005b578063abd5f95d14610186578063dfaba9b51461019b578063e6aa216c146101cd578063f3190c891461017057600080fd5b80633437eac41461008d5780637557ca41146100c357806388c35209146101365780638e7bfbc014610170575b600080fd5b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b6100cb6101d5565b604080519a8b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c0152971515978a01979097526060890195909552928616608088015290151560a087015260c086015290921660e0840152901515610100830152610120820152610140016100ba565b61013e6104be565b6040805193845273ffffffffffffffffffffffffffffffffffffffff90921660208401521515908201526060016100ba565b610178610591565b6040519081526020016100ba565b61018e610610565b6040516100ba9190610d77565b6101a3610775565b6040805192835273ffffffffffffffffffffffffffffffffffffffff9091166020830152016100ba565b6101786107a8565b6000806000806000806000806000806101ec6107b2565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102ba7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8216156103a9576103a47f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b6103ac565b60005b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff82161561049b576104967f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b61049e565b60005b995099509950995099509950995099509950995090919293949596979899565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16146105435761053e610ae5565b610546565b60005b937f000000000000000000000000000000000000000000000000000000000000000093507f000000000000000000000000000000000000000000000000000000000000000092509050565b600061059b610c16565b50905060008190036105e2576040517fc82fc465000000000000000000000000000000000000000000000000000000008152620105b9600482015260240160405180910390fd5b6105ee601b600a610f34565b816105f7610cbb565b6106019190610f47565b61060b9190610f5e565b905090565b606060005b60208110801561067b57507f0000000000000000000000000000000000000000000000000000000000000000816020811061065257610652610f99565b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15610692578061068a81610fc8565b915050610615565b60008167ffffffffffffffff8111156106ad576106ad611000565b6040519080825280601f01601f1916602001820160405280156106d7576020820181803683370190505b50905060005b8281101561076e577f0000000000000000000000000000000000000000000000000000000000000000816020811061071757610717610f99565b1a60f81b82828151811061072d5761072d610f99565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061076681610fc8565b9150506106dd565b5092915050565b600080610780610cbb565b927f000000000000000000000000000000000000000000000000000000000000000092509050565b600061060b610591565b60006108407f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b905080158061088357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16155b1561088b5790565b610897601b600a610f34565b6109237f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b61092d9083610f47565b6109379190610f5e565b905080158061097a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16155b156109825790565b61098e601b600a610f34565b610a1a7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610a24565b6106019083610f47565b60008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015610aab575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610aa89181019061104e565b60015b610ab757506000610add565b8815610ad357610ac78488610f5e565b95505050505050610add565b610ac78885610f47565b949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e6aa216c6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b8c575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610b899181019061109e565b60015b610b965750600090565b7f000000000000000000000000000000000000000000000000000000000000000015610bec57610be6817f0000000000000000000000000000000000000000000000000000000000000000610f5e565b91505090565b610be67f000000000000000000000000000000000000000000000000000000000000000082610f47565b6000807f000000000000000000000000000000000000000000000000000000000000000060ff16600103610c5257610c4c6107b2565b91509091565b7f000000000000000000000000000000000000000000000000000000000000000060ff16600203610c9e57610c856107b2565b915081600003610c9a57506001610c4c610ae5565b9091565b610ca6610ae5565b915081600003610c9a57506001610c4c6107b2565b60007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663035faf826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6d919061109e565b61060b9190610f47565b600060208083528351808285015260005b81811015610da457858101830151858201604001528201610d88565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600181815b80851115610e6b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610e5157610e51610de3565b80851615610e5e57918102915b93841c9390800290610e17565b509250929050565b600082610e8257506001610f2e565b81610e8f57506000610f2e565b8160018114610ea55760028114610eaf57610ecb565b6001915050610f2e565b60ff841115610ec057610ec0610de3565b50506001821b610f2e565b5060208310610133831016604e8410600b8410161715610eee575081810a610f2e565b610ef88383610e12565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610f2a57610f2a610de3565b0290505b92915050565b6000610f408383610e73565b9392505050565b8082028115828204841417610f2e57610f2e610de3565b600082610f94577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ff957610ff9610de3565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805169ffffffffffffffffffff8116811461104957600080fd5b919050565b600080600080600060a0868803121561106657600080fd5b61106f8661102f565b94506020860151935060408601519250606086015191506110926080870161102f565b90509295509295909350565b6000602082840312156110b057600080fd5b505191905056fea2646970667358221220f83c83aca4502f0985d6f2e1aa28701e446a2dfa116a7e715692768f376fd15a64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "chainlinkParams_": "chainlink Oracle constructor params struct.",
          "infoName_": "Oracle identify helper name.",
          "mainSource_": "which oracle to use as main source: 1 = Chainlink, 2 = Redstone (other one is fallback).",
          "redstoneOracle_": "Redstone Oracle data. (address can be set to zero address if using Chainlink only)",
          "wstETH_": "address of the wstETH contract"
        }
      },
      "getExchangeRate()": {
        "details": "Deprecated. Use `getExchangeRateOperate()` and `getExchangeRateLiquidate()` instead. Only implemented for      backwards compatibility."
      }
    },
    "title": "WstETH Chainlink / Redstone Oracle (with fallback)",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "FALLBACK_ORACLE_MAIN_SOURCE()": {
        "notice": "which oracle to use as main source:          - 1 = Chainlink ONLY (no fallback)          - 2 = Chainlink with Redstone Fallback          - 3 = Redstone with Chainlink Fallback"
      },
      "chainlinkOracleData()": {
        "notice": "returns all Chainlink oracle related data as utility for easy off-chain use / block explorer in a single view method"
      },
      "constructor": {
        "notice": "sets the wstETH address, main source, Chainlink Oracle and Redstone Oracle data."
      },
      "getExchangeRateLiquidate()": {
        "notice": "Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for liquidations"
      },
      "getExchangeRateOperate()": {
        "notice": "Get the `exchangeRate_` between the underlying asset and the peg asset in 1e27 for operates"
      },
      "infoName()": {
        "notice": "helper string to easily identify the oracle. E.g. token symbols"
      },
      "redstoneOracleData()": {
        "notice": "returns all Redstone oracle related data as utility for easy off-chain use / block explorer in a single view method"
      },
      "wstETHOracleData()": {
        "notice": "returns all wWtETH oracle related data as utility for easy off-chain use / block explorer in a single view method"
      }
    },
    "notice": "Gets the exchange rate between the underlying asset and the peg asset by using:          wstETH Oracle price in combination with rate from Chainlink price feeds (or Redstone as fallback),          hopping the 2 rates into 1 rate.          e.g. when going from wstETH to USDT:          wstETH -> stETH wstETH Oracle, stETH -> ETH Chainlink feed, ETH -> USDT Chainlink feed.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}